

Microchip Technology PIC LITE Macro Assembler V1.20 build 52243 
                                                                                               Sat Aug 16 08:47:08 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 52243
     1                           	processor	16F88
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	intentry,global,class=CODE,delta=2
    31                           	dabs	1,0x7E,2
    32  0000                     	;# 
    33  0001                     	;# 
    34  0002                     	;# 
    35  0003                     	;# 
    36  0004                     	;# 
    37  0005                     	;# 
    38  0006                     	;# 
    39  000A                     	;# 
    40  000B                     	;# 
    41  000C                     	;# 
    42  000D                     	;# 
    43  000E                     	;# 
    44  000E                     	;# 
    45  000F                     	;# 
    46  0010                     	;# 
    47  0011                     	;# 
    48  0012                     	;# 
    49  0013                     	;# 
    50  0014                     	;# 
    51  0015                     	;# 
    52  0015                     	;# 
    53  0016                     	;# 
    54  0017                     	;# 
    55  0018                     	;# 
    56  0019                     	;# 
    57  001A                     	;# 
    58  001E                     	;# 
    59  001F                     	;# 
    60  0081                     	;# 
    61  0085                     	;# 
    62  0086                     	;# 
    63  008C                     	;# 
    64  008D                     	;# 
    65  008E                     	;# 
    66  008F                     	;# 
    67  0090                     	;# 
    68  0092                     	;# 
    69  0093                     	;# 
    70  0094                     	;# 
    71  0098                     	;# 
    72  0099                     	;# 
    73  009B                     	;# 
    74  009C                     	;# 
    75  009D                     	;# 
    76  009E                     	;# 
    77  009F                     	;# 
    78  0105                     	;# 
    79  010C                     	;# 
    80  010D                     	;# 
    81  010E                     	;# 
    82  010F                     	;# 
    83  018C                     	;# 
    84  018D                     	;# 
    85  000E                     _TMR1	set	14
    86  000B                     _INTCONbits	set	11
    87  000C                     _PIR1bits	set	12
    88  0005                     _PORTA	set	5
    89  0005                     _PORTAbits	set	5
    90  0006                     _PORTB	set	6
    91  0006                     _PORTBbits	set	6
    92  0010                     _T1CONbits	set	16
    93  005F                     _GIE	set	95
    94  005C                     _INT0IE	set	92
    95  0059                     _INT0IF	set	89
    96  005B                     _RBIE	set	91
    97  0058                     _RBIF	set	88
    98  005D                     _TMR0IE	set	93
    99  0060                     _TMR1IF	set	96
   100  009B                     _ANSEL	set	155
   101  009C                     _CMCON	set	156
   102  0081                     _OPTION_REG	set	129
   103  0081                     _OPTION_REGbits	set	129
   104  008F                     _OSCCON	set	143
   105  008C                     _PIE1bits	set	140
   106  0085                     _TRISA	set	133
   107  0086                     _TRISB	set	134
   108  0460                     _TMR1IE	set	1120
   109                           
   110                           	psect	text0
   111  0000                     __ptext0:	
   112                           
   113                           ;psect for function _isr
   114                           ; #config settings
   115  0000                     
   116                           	psect	cinit
   117  0768                     start_initialization:	
   118  0768                     __initialization:	
   119                           
   120                           ; Clear objects allocated to COMMON
   121  0768  01F8               	clrf	__pbssCOMMON& (0+127)
   122  0769  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   123                           
   124                           ; Clear objects allocated to BANK0
   125  076A  1383               	bcf	3,7	;select IRP bank0
   126  076B  3053               	movlw	low __pbssBANK0
   127  076C  0084               	movwf	4
   128  076D  3064               	movlw	low (__pbssBANK0+17)
   129  076E  118A  2786         	fcall	clear_ram0
   130  0770                     end_of_initialization:	
   131                           ;End of C runtime variable initialization code
   132                           
   133  0770                     __end_of__initialization:	
   134  0770  0183               	clrf	3
   135  0771  118A  2A31         	ljmp	_main	;jump to C main() function
   136                           
   137                           	psect	bssCOMMON
   138  0078                     __pbssCOMMON:	
   139  0078                     _tflag:	
   140  0078                     	ds	2
   141                           
   142                           	psect	bssBANK0
   143  0053                     __pbssBANK0:	
   144  0053                     _a:	
   145  0053                     	ds	3
   146  0056                     _b:	
   147  0056                     	ds	3
   148  0059                     _fin:	
   149  0059                     	ds	3
   150  005C                     _time:	
   151  005C                     	ds	2
   152  005E                     _speed:	
   153  005E                     	ds	3
   154  0061                     _tdist:	
   155  0061                     	ds	3
   156                           
   157                           	psect	clrtext
   158  0786                     clear_ram0:	
   159                           ;	Called with FSR containing the base address, and
   160                           ;	W with the last address+1
   161                           
   162  0786  0064               	clrwdt	;clear the watchdog before getting into this loop
   163  0787                     clrloop0:	
   164  0787  0180               	clrf	0	;clear RAM location pointed to by FSR
   165  0788  0A84               	incf	4,f	;increment pointer
   166  0789  0604               	xorwf	4,w	;XOR with final address
   167  078A  1903               	btfsc	3,2	;have we reached the end yet?
   168  078B  3400               	retlw	0	;all done for this memory range, return
   169  078C  0604               	xorwf	4,w	;XOR again to restore value
   170  078D  2F87               	goto	clrloop0	;do the next byte
   171                           
   172                           	psect	cstackCOMMON
   173  0070                     __pcstackCOMMON:	
   174  0070                     ?_startUp:	
   175  0070                     ?_fLCD_Start:	
   176                           ; 0 bytes @ 0x0
   177                           
   178  0070                     ?_fLCD_Clear:	
   179                           ; 0 bytes @ 0x0
   180                           
   181  0070                     ?_initializeInt:	
   182                           ; 0 bytes @ 0x0
   183                           
   184  0070                     ?_initializeTimer0:	
   185                           ; 0 bytes @ 0x0
   186                           
   187  0070                     ?_initializeTimer1:	
   188                           ; 0 bytes @ 0x0
   189                           
   190  0070                     ?_main:	
   191                           ; 0 bytes @ 0x0
   192                           
   193  0070                     ?_isr:	
   194                           ; 0 bytes @ 0x0
   195                           
   196  0070                     ??_isr:	
   197                           ; 0 bytes @ 0x0
   198                           
   199                           
   200                           ; 0 bytes @ 0x0
   201  0070                     	ds	4
   202  0074                     ??_startUp:	
   203  0074                     ?_fLCD_RawSend:	
   204                           ; 0 bytes @ 0x4
   205                           
   206  0074                     ??_initializeInt:	
   207                           ; 0 bytes @ 0x4
   208                           
   209  0074                     ??_initializeTimer0:	
   210                           ; 0 bytes @ 0x4
   211                           
   212  0074                     ??_initializeTimer1:	
   213                           ; 0 bytes @ 0x4
   214                           
   215  0074                     ??___ftpack:	
   216                           ; 0 bytes @ 0x4
   217                           
   218  0074                     ?___awdiv:	
   219                           ; 0 bytes @ 0x4
   220                           
   221  0074                     ?___fttol:	
   222                           ; 2 bytes @ 0x4
   223                           
   224  0074                     fLCD_RawSend@mask:	
   225                           ; 4 bytes @ 0x4
   226                           
   227  0074                     ___awdiv@divisor:	
   228                           ; 1 bytes @ 0x4
   229                           
   230  0074                     ___fttol@f1:	
   231                           ; 2 bytes @ 0x4
   232                           
   233                           
   234                           ; 3 bytes @ 0x4
   235  0074                     	ds	1
   236  0075                     ??_fLCD_RawSend:	
   237                           
   238                           ; 0 bytes @ 0x5
   239  0075                     	ds	1
   240  0076                     ___awdiv@dividend:	
   241                           
   242                           ; 2 bytes @ 0x6
   243  0076                     	ds	1
   244  0077                     ??___lwtoft:	
   245                           
   246                           ; 0 bytes @ 0x7
   247  0077                     	ds	1
   248  0078                     ??___ftneg:	
   249                           
   250                           	psect	cstackBANK0
   251  0020                     __pcstackBANK0:	
   252                           ; 0 bytes @ 0x8
   253                           
   254  0020                     ??___awdiv:	
   255  0020                     ??___fttol:	
   256                           ; 0 bytes @ 0x0
   257                           
   258  0020                     ?___ftpack:	
   259                           ; 0 bytes @ 0x0
   260                           
   261  0020                     fLCD_RawSend@in:	
   262                           ; 3 bytes @ 0x0
   263                           
   264  0020                     ___ftpack@arg:	
   265                           ; 1 bytes @ 0x0
   266                           
   267                           
   268                           ; 3 bytes @ 0x0
   269  0020                     	ds	1
   270  0021                     fLCD_RawSend@pt:	
   271  0021                     ___awdiv@counter:	
   272                           ; 1 bytes @ 0x1
   273                           
   274                           
   275                           ; 1 bytes @ 0x1
   276  0021                     	ds	1
   277  0022                     ??_fLCD_Clear:	
   278  0022                     ___awdiv@sign:	
   279                           ; 0 bytes @ 0x2
   280                           
   281                           
   282                           ; 1 bytes @ 0x2
   283  0022                     	ds	1
   284  0023                     ___ftpack@exp:	
   285  0023                     ___awdiv@quotient:	
   286                           ; 1 bytes @ 0x3
   287                           
   288                           
   289                           ; 2 bytes @ 0x3
   290  0023                     	ds	1
   291  0024                     ??_fLCD_Start:	
   292  0024                     ___ftpack@sign:	
   293                           ; 0 bytes @ 0x4
   294                           
   295  0024                     ___fttol@sign1:	
   296                           ; 1 bytes @ 0x4
   297                           
   298                           
   299                           ; 1 bytes @ 0x4
   300  0024                     	ds	1
   301  0025                     ?___lwtoft:	
   302  0025                     ___lwtoft@c:	
   303                           ; 3 bytes @ 0x5
   304                           
   305  0025                     ___fttol@lval:	
   306                           ; 2 bytes @ 0x5
   307                           
   308                           
   309                           ; 4 bytes @ 0x5
   310  0025                     	ds	3
   311  0028                     ?___ftdiv:	
   312  0028                     ___ftdiv@f2:	
   313                           ; 3 bytes @ 0x8
   314                           
   315                           
   316                           ; 3 bytes @ 0x8
   317  0028                     	ds	1
   318  0029                     ___fttol@exp1:	
   319                           
   320                           ; 1 bytes @ 0x9
   321  0029                     	ds	1
   322  002A                     ?_fLCD_PrintNumber:	
   323  002A                     ?___awtoft:	
   324                           ; 0 bytes @ 0xA
   325                           
   326  002A                     fLCD_PrintNumber@Number:	
   327                           ; 3 bytes @ 0xA
   328                           
   329  002A                     ___awtoft@c:	
   330                           ; 2 bytes @ 0xA
   331                           
   332                           
   333                           ; 2 bytes @ 0xA
   334  002A                     	ds	1
   335  002B                     ___ftdiv@f1:	
   336                           
   337                           ; 3 bytes @ 0xB
   338  002B                     	ds	1
   339  002C                     ??_fLCD_PrintNumber:	
   340                           
   341                           ; 0 bytes @ 0xC
   342  002C                     	ds	1
   343  002D                     ??___awtoft:	
   344  002D                     fLCD_PrintNumber@tmp_int:	
   345                           ; 0 bytes @ 0xD
   346                           
   347                           
   348                           ; 2 bytes @ 0xD
   349  002D                     	ds	1
   350  002E                     ??___ftdiv:	
   351                           
   352                           ; 0 bytes @ 0xE
   353  002E                     	ds	1
   354  002F                     fLCD_PrintNumber@tmp_byte:	
   355  002F                     ___awtoft@sign:	
   356                           ; 1 bytes @ 0xF
   357                           
   358                           
   359                           ; 1 bytes @ 0xF
   360  002F                     	ds	1
   361  0030                     ?___ftneg:	
   362  0030                     ___ftneg@f1:	
   363                           ; 3 bytes @ 0x10
   364                           
   365                           
   366                           ; 3 bytes @ 0x10
   367  0030                     	ds	2
   368  0032                     ___ftdiv@cntr:	
   369                           
   370                           ; 1 bytes @ 0x12
   371  0032                     	ds	1
   372  0033                     ?___ftadd:	
   373  0033                     ___ftadd@f1:	
   374                           ; 3 bytes @ 0x13
   375                           
   376  0033                     ___ftdiv@f3:	
   377                           ; 3 bytes @ 0x13
   378                           
   379                           
   380                           ; 3 bytes @ 0x13
   381  0033                     	ds	3
   382  0036                     ___ftdiv@exp:	
   383  0036                     ___ftadd@f2:	
   384                           ; 1 bytes @ 0x16
   385                           
   386                           
   387                           ; 3 bytes @ 0x16
   388  0036                     	ds	1
   389  0037                     ___ftdiv@sign:	
   390                           
   391                           ; 1 bytes @ 0x17
   392  0037                     	ds	2
   393  0039                     ??___ftadd:	
   394                           
   395                           ; 0 bytes @ 0x19
   396  0039                     	ds	4
   397  003D                     ___ftadd@sign:	
   398                           
   399                           ; 1 bytes @ 0x1D
   400  003D                     	ds	1
   401  003E                     ___ftadd@exp2:	
   402                           
   403                           ; 1 bytes @ 0x1E
   404  003E                     	ds	1
   405  003F                     ___ftadd@exp1:	
   406                           
   407                           ; 1 bytes @ 0x1F
   408  003F                     	ds	1
   409  0040                     ?___ftmul:	
   410  0040                     ___ftmul@f1:	
   411                           ; 3 bytes @ 0x20
   412                           
   413                           
   414                           ; 3 bytes @ 0x20
   415  0040                     	ds	3
   416  0043                     ___ftmul@f2:	
   417                           
   418                           ; 3 bytes @ 0x23
   419  0043                     	ds	3
   420  0046                     ??___ftmul:	
   421                           
   422                           ; 0 bytes @ 0x26
   423  0046                     	ds	4
   424  004A                     ___ftmul@exp:	
   425                           
   426                           ; 1 bytes @ 0x2A
   427  004A                     	ds	1
   428  004B                     ___ftmul@f3_as_product:	
   429                           
   430                           ; 3 bytes @ 0x2B
   431  004B                     	ds	3
   432  004E                     ___ftmul@cntr:	
   433                           
   434                           ; 1 bytes @ 0x2E
   435  004E                     	ds	1
   436  004F                     ___ftmul@sign:	
   437                           
   438                           ; 1 bytes @ 0x2F
   439  004F                     	ds	1
   440  0050                     ??_main:	
   441                           
   442                           ; 0 bytes @ 0x30
   443  0050                     	ds	3
   444                           
   445                           	psect	maintext
   446  0231                     __pmaintext:	
   447 ;;
   448 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   449 ;;
   450 ;; *************** function _main *****************
   451 ;; Defined at:
   452 ;;		line 67 in file "chrono.c"
   453 ;; Parameters:    Size  Location     Type
   454 ;;		None
   455 ;; Auto vars:     Size  Location     Type
   456 ;;		None
   457 ;; Return value:  Size  Location     Type
   458 ;;		None               void
   459 ;; Registers used:
   460 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   461 ;; Tracked objects:
   462 ;;		On entry : 17F/0
   463 ;;		On exit  : 0/0
   464 ;;		Unchanged: 0/0
   465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   466 ;;      Params:         0       0       0       0       0
   467 ;;      Locals:         0       0       0       0       0
   468 ;;      Temps:          0       3       0       0       0
   469 ;;      Totals:         0       3       0       0       0
   470 ;;Total ram usage:        3 bytes
   471 ;; Hardware stack levels required when called:    4
   472 ;; This function calls:
   473 ;;		_startUp
   474 ;;		_fLCD_Start
   475 ;;		_fLCD_PrintNumber
   476 ;;		_fLCD_RawSend
   477 ;;		_fLCD_Clear
   478 ;;		___awtoft
   479 ;;		___ftadd
   480 ;;		___ftdiv
   481 ;;		___ftmul
   482 ;;		___ftneg
   483 ;;		___fttol
   484 ;;		___lwtoft
   485 ;; This function is called by:
   486 ;;		Startup code after reset
   487 ;; This function uses a non-reentrant model
   488 ;;
   489                           
   490                           
   491                           ;psect for function _main
   492  0231                     _main:	
   493                           
   494                           ;chrono.c: 69: startUp();
   495                           
   496                           ;incstack = 0
   497                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   498  0231  118A  2728  118A   	fcall	_startUp
   499                           
   500                           ;chrono.c: 70: _delay((unsigned long)((120)*(19660800/4000.0)));
   501  0234  3003               	movlw	3
   502  0235  1283               	bcf	3,5	;RP0=0, select bank0
   503  0236  1303               	bcf	3,6	;RP1=0, select bank0
   504  0237  00D2               	movwf	??_main+2
   505  0238  30FE               	movlw	254
   506  0239  00D1               	movwf	??_main+1
   507  023A  30FE               	movlw	254
   508  023B  00D0               	movwf	??_main
   509  023C                     u3117:	
   510  023C  0BD0               	decfsz	??_main,f
   511  023D  2A3C               	goto	u3117
   512  023E  0BD1               	decfsz	??_main+1,f
   513  023F  2A3C               	goto	u3117
   514  0240  0BD2               	decfsz	??_main+2,f
   515  0241  2A3C               	goto	u3117
   516  0242  2A43               	nop2
   517                           
   518                           ;chrono.c: 71: fLCD_Start();
   519  0243  118A  25A9  118A   	fcall	_fLCD_Start
   520  0246                     l2105:	
   521                           ;chrono.c: 73: for(;;){
   522                           
   523                           
   524                           ;chrono.c: 74: tdist = time/(19.6608/4);
   525  0246  3049               	movlw	73
   526  0247  1283               	bcf	3,5	;RP0=0, select bank0
   527  0248  1303               	bcf	3,6	;RP1=0, select bank0
   528  0249  00A8               	movwf	?___ftdiv
   529  024A  309D               	movlw	157
   530  024B  00A9               	movwf	?___ftdiv+1
   531  024C  3040               	movlw	64
   532  024D  00AA               	movwf	?___ftdiv+2
   533  024E  085D               	movf	_time+1,w
   534  024F  01A6               	clrf	?___lwtoft+1
   535  0250  07A6               	addwf	?___lwtoft+1,f
   536  0251  085C               	movf	_time,w
   537  0252  01A5               	clrf	?___lwtoft
   538  0253  07A5               	addwf	?___lwtoft,f
   539  0254  118A  2742  118A   	fcall	___lwtoft
   540  0257  1283               	bcf	3,5	;RP0=0, select bank0
   541  0258  1303               	bcf	3,6	;RP1=0, select bank0
   542  0259  0825               	movf	?___lwtoft,w
   543  025A  00AB               	movwf	?___ftdiv+3
   544  025B  0826               	movf	?___lwtoft+1,w
   545  025C  00AC               	movwf	?___ftdiv+4
   546  025D  0827               	movf	?___lwtoft+2,w
   547  025E  00AD               	movwf	?___ftdiv+5
   548  025F  118A  23FA  118A   	fcall	___ftdiv
   549  0262  1283               	bcf	3,5	;RP0=0, select bank0
   550  0263  1303               	bcf	3,6	;RP1=0, select bank0
   551  0264  0828               	movf	?___ftdiv,w
   552  0265  00E1               	movwf	_tdist
   553  0266  0829               	movf	?___ftdiv+1,w
   554  0267  00E2               	movwf	_tdist+1
   555  0268  082A               	movf	?___ftdiv+2,w
   556  0269  00E3               	movwf	_tdist+2
   557                           
   558                           ;chrono.c: 75: speed = 20.5/tdist;
   559  026A  0861               	movf	_tdist,w
   560  026B  00A8               	movwf	?___ftdiv
   561  026C  0862               	movf	_tdist+1,w
   562  026D  00A9               	movwf	?___ftdiv+1
   563  026E  0863               	movf	_tdist+2,w
   564  026F  00AA               	movwf	?___ftdiv+2
   565  0270  3000               	movlw	0
   566  0271  00AB               	movwf	?___ftdiv+3
   567  0272  30A4               	movlw	164
   568  0273  00AC               	movwf	?___ftdiv+4
   569  0274  3041               	movlw	65
   570  0275  00AD               	movwf	?___ftdiv+5
   571  0276  118A  23FA  118A   	fcall	___ftdiv
   572  0279  1283               	bcf	3,5	;RP0=0, select bank0
   573  027A  1303               	bcf	3,6	;RP1=0, select bank0
   574  027B  0828               	movf	?___ftdiv,w
   575  027C  00DE               	movwf	_speed
   576  027D  0829               	movf	?___ftdiv+1,w
   577  027E  00DF               	movwf	_speed+1
   578  027F  082A               	movf	?___ftdiv+2,w
   579  0280  00E0               	movwf	_speed+2
   580                           
   581                           ;chrono.c: 76: fin = (speed*1000*3.280839895);
   582  0281  300D               	movlw	13
   583  0282  00C0               	movwf	?___ftmul
   584  0283  304D               	movlw	77
   585  0284  00C1               	movwf	?___ftmul+1
   586  0285  3045               	movlw	69
   587  0286  00C2               	movwf	?___ftmul+2
   588  0287  085E               	movf	_speed,w
   589  0288  00C3               	movwf	?___ftmul+3
   590  0289  085F               	movf	_speed+1,w
   591  028A  00C4               	movwf	?___ftmul+4
   592  028B  0860               	movf	_speed+2,w
   593  028C  00C5               	movwf	?___ftmul+5
   594  028D  118A  2328  118A   	fcall	___ftmul
   595  0290  1283               	bcf	3,5	;RP0=0, select bank0
   596  0291  1303               	bcf	3,6	;RP1=0, select bank0
   597  0292  0840               	movf	?___ftmul,w
   598  0293  00D9               	movwf	_fin
   599  0294  0841               	movf	?___ftmul+1,w
   600  0295  00DA               	movwf	_fin+1
   601  0296  0842               	movf	?___ftmul+2,w
   602  0297  00DB               	movwf	_fin+2
   603                           
   604                           ;chrono.c: 77: fLCD_PrintNumber((int)fin);
   605  0298  0859               	movf	_fin,w
   606  0299  00F4               	movwf	?___fttol
   607  029A  085A               	movf	_fin+1,w
   608  029B  00F5               	movwf	?___fttol+1
   609  029C  085B               	movf	_fin+2,w
   610  029D  00F6               	movwf	?___fttol+2
   611  029E  118A  24B1  118A   	fcall	___fttol
   612  02A1  0875               	movf	?___fttol+1,w
   613  02A2  1283               	bcf	3,5	;RP0=0, select bank0
   614  02A3  1303               	bcf	3,6	;RP1=0, select bank0
   615  02A4  01AB               	clrf	?_fLCD_PrintNumber+1
   616  02A5  07AB               	addwf	?_fLCD_PrintNumber+1,f
   617  02A6  0874               	movf	?___fttol,w
   618  02A7  01AA               	clrf	?_fLCD_PrintNumber
   619  02A8  07AA               	addwf	?_fLCD_PrintNumber,f
   620  02A9  118A  2013  118A   	fcall	_fLCD_PrintNumber
   621                           
   622                           ;chrono.c: 78: fLCD_RawSend('.', 0x10);
   623  02AC  3010               	movlw	16
   624  02AD  1283               	bcf	3,5	;RP0=0, select bank0
   625  02AE  1303               	bcf	3,6	;RP1=0, select bank0
   626  02AF  00D0               	movwf	??_main
   627  02B0  0850               	movf	??_main,w
   628  02B1  00F4               	movwf	?_fLCD_RawSend
   629  02B2  302E               	movlw	46
   630  02B3  118A  2670  118A   	fcall	_fLCD_RawSend
   631                           
   632                           ;chrono.c: 79: b = (fin-(int)fin)*1000;
   633  02B6  3000               	movlw	0
   634  02B7  1283               	bcf	3,5	;RP0=0, select bank0
   635  02B8  1303               	bcf	3,6	;RP1=0, select bank0
   636  02B9  00C0               	movwf	?___ftmul
   637  02BA  307A               	movlw	122
   638  02BB  00C1               	movwf	?___ftmul+1
   639  02BC  3044               	movlw	68
   640  02BD  00C2               	movwf	?___ftmul+2
   641  02BE  0859               	movf	_fin,w
   642  02BF  00B3               	movwf	?___ftadd
   643  02C0  085A               	movf	_fin+1,w
   644  02C1  00B4               	movwf	?___ftadd+1
   645  02C2  085B               	movf	_fin+2,w
   646  02C3  00B5               	movwf	?___ftadd+2
   647  02C4  0859               	movf	_fin,w
   648  02C5  00F4               	movwf	?___fttol
   649  02C6  085A               	movf	_fin+1,w
   650  02C7  00F5               	movwf	?___fttol+1
   651  02C8  085B               	movf	_fin+2,w
   652  02C9  00F6               	movwf	?___fttol+2
   653  02CA  118A  24B1  118A   	fcall	___fttol
   654  02CD  0875               	movf	?___fttol+1,w
   655  02CE  1283               	bcf	3,5	;RP0=0, select bank0
   656  02CF  1303               	bcf	3,6	;RP1=0, select bank0
   657  02D0  01AB               	clrf	?___awtoft+1
   658  02D1  07AB               	addwf	?___awtoft+1,f
   659  02D2  0874               	movf	?___fttol,w
   660  02D3  01AA               	clrf	?___awtoft
   661  02D4  07AA               	addwf	?___awtoft,f
   662  02D5  118A  26CA  118A   	fcall	___awtoft
   663  02D8  1283               	bcf	3,5	;RP0=0, select bank0
   664  02D9  1303               	bcf	3,6	;RP1=0, select bank0
   665  02DA  082A               	movf	?___awtoft,w
   666  02DB  00B0               	movwf	?___ftneg
   667  02DC  082B               	movf	?___awtoft+1,w
   668  02DD  00B1               	movwf	?___ftneg+1
   669  02DE  082C               	movf	?___awtoft+2,w
   670  02DF  00B2               	movwf	?___ftneg+2
   671  02E0  118A  2773  118A   	fcall	___ftneg
   672  02E3  1283               	bcf	3,5	;RP0=0, select bank0
   673  02E4  1303               	bcf	3,6	;RP1=0, select bank0
   674  02E5  0830               	movf	?___ftneg,w
   675  02E6  00B6               	movwf	?___ftadd+3
   676  02E7  0831               	movf	?___ftneg+1,w
   677  02E8  00B7               	movwf	?___ftadd+4
   678  02E9  0832               	movf	?___ftneg+2,w
   679  02EA  00B8               	movwf	?___ftadd+5
   680  02EB  118A  2129  118A   	fcall	___ftadd
   681  02EE  1283               	bcf	3,5	;RP0=0, select bank0
   682  02EF  1303               	bcf	3,6	;RP1=0, select bank0
   683  02F0  0833               	movf	?___ftadd,w
   684  02F1  00C3               	movwf	?___ftmul+3
   685  02F2  0834               	movf	?___ftadd+1,w
   686  02F3  00C4               	movwf	?___ftmul+4
   687  02F4  0835               	movf	?___ftadd+2,w
   688  02F5  00C5               	movwf	?___ftmul+5
   689  02F6  118A  2328  118A   	fcall	___ftmul
   690  02F9  1283               	bcf	3,5	;RP0=0, select bank0
   691  02FA  1303               	bcf	3,6	;RP1=0, select bank0
   692  02FB  0840               	movf	?___ftmul,w
   693  02FC  00D6               	movwf	_b
   694  02FD  0841               	movf	?___ftmul+1,w
   695  02FE  00D7               	movwf	_b+1
   696  02FF  0842               	movf	?___ftmul+2,w
   697  0300  00D8               	movwf	_b+2
   698                           
   699                           ;chrono.c: 80: fLCD_PrintNumber((int)b);
   700  0301  0856               	movf	_b,w
   701  0302  00F4               	movwf	?___fttol
   702  0303  0857               	movf	_b+1,w
   703  0304  00F5               	movwf	?___fttol+1
   704  0305  0858               	movf	_b+2,w
   705  0306  00F6               	movwf	?___fttol+2
   706  0307  118A  24B1  118A   	fcall	___fttol
   707  030A  0875               	movf	?___fttol+1,w
   708  030B  1283               	bcf	3,5	;RP0=0, select bank0
   709  030C  1303               	bcf	3,6	;RP1=0, select bank0
   710  030D  01AB               	clrf	?_fLCD_PrintNumber+1
   711  030E  07AB               	addwf	?_fLCD_PrintNumber+1,f
   712  030F  0874               	movf	?___fttol,w
   713  0310  01AA               	clrf	?_fLCD_PrintNumber
   714  0311  07AA               	addwf	?_fLCD_PrintNumber,f
   715  0312  118A  2013  118A   	fcall	_fLCD_PrintNumber
   716                           
   717                           ;chrono.c: 81: _delay((unsigned long)((100)*(19660800/4000.0)));
   718  0315  3003               	movlw	3
   719  0316  1283               	bcf	3,5	;RP0=0, select bank0
   720  0317  1303               	bcf	3,6	;RP1=0, select bank0
   721  0318  00D2               	movwf	??_main+2
   722  0319  307F               	movlw	127
   723  031A  00D1               	movwf	??_main+1
   724  031B  3053               	movlw	83
   725  031C  00D0               	movwf	??_main
   726  031D                     u3127:	
   727  031D  0BD0               	decfsz	??_main,f
   728  031E  2B1D               	goto	u3127
   729  031F  0BD1               	decfsz	??_main+1,f
   730  0320  2B1D               	goto	u3127
   731  0321  0BD2               	decfsz	??_main+2,f
   732  0322  2B1D               	goto	u3127
   733  0323  0000               	nop
   734                           
   735                           ;chrono.c: 83: fLCD_Clear();
   736  0324  118A  26EE  118A   	fcall	_fLCD_Clear
   737                           
   738                           ;chrono.c: 84: }
   739  0327  2A46               	goto	l2105
   740  0328                     __end_of_main:	
   741                           
   742                           	psect	text1
   743  0742                     __ptext1:	
   744 ;; *************** function ___lwtoft *****************
   745 ;; Defined at:
   746 ;;		line 29 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\lwtoft.c"
   747 ;; Parameters:    Size  Location     Type
   748 ;;  c               2    5[BANK0 ] unsigned int 
   749 ;; Auto vars:     Size  Location     Type
   750 ;;		None
   751 ;; Return value:  Size  Location     Type
   752 ;;                  3    5[BANK0 ] float 
   753 ;; Registers used:
   754 ;;		wreg, status,2, status,0, pclath, cstack
   755 ;; Tracked objects:
   756 ;;		On entry : 0/0
   757 ;;		On exit  : 0/0
   758 ;;		Unchanged: 0/0
   759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   760 ;;      Params:         0       3       0       0       0
   761 ;;      Locals:         0       0       0       0       0
   762 ;;      Temps:          1       0       0       0       0
   763 ;;      Totals:         1       3       0       0       0
   764 ;;Total ram usage:        4 bytes
   765 ;; Hardware stack levels used:    1
   766 ;; Hardware stack levels required when called:    2
   767 ;; This function calls:
   768 ;;		___ftpack
   769 ;; This function is called by:
   770 ;;		_main
   771 ;; This function uses a non-reentrant model
   772 ;;
   773                           
   774                           
   775                           ;psect for function ___lwtoft
   776  0742                     ___lwtoft:	
   777                           
   778                           ;incstack = 0
   779                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
   780  0742  1283               	bcf	3,5	;RP0=0, select bank0
   781  0743  1303               	bcf	3,6	;RP1=0, select bank0
   782  0744  0825               	movf	___lwtoft@c,w
   783  0745  00A0               	movwf	?___ftpack
   784  0746  0826               	movf	___lwtoft@c+1,w
   785  0747  00A1               	movwf	?___ftpack+1
   786  0748  01A2               	clrf	?___ftpack+2
   787  0749  308E               	movlw	142
   788  074A  00F7               	movwf	??___lwtoft
   789  074B  0877               	movf	??___lwtoft,w
   790  074C  00A3               	movwf	?___ftpack+3
   791  074D  01A4               	clrf	?___ftpack+4
   792  074E  118A  253F         	fcall	___ftpack
   793  0750  1283               	bcf	3,5	;RP0=0, select bank0
   794  0751  1303               	bcf	3,6	;RP1=0, select bank0
   795  0752  0820               	movf	?___ftpack,w
   796  0753  00A5               	movwf	?___lwtoft
   797  0754  0821               	movf	?___ftpack+1,w
   798  0755  00A6               	movwf	?___lwtoft+1
   799  0756  0822               	movf	?___ftpack+2,w
   800  0757  00A7               	movwf	?___lwtoft+2
   801  0758  0008               	return
   802  0759                     __end_of___lwtoft:	
   803                           
   804                           	psect	text2
   805  04B1                     __ptext2:	
   806 ;; *************** function ___fttol *****************
   807 ;; Defined at:
   808 ;;		line 45 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\fttol.c"
   809 ;; Parameters:    Size  Location     Type
   810 ;;  f1              3    4[COMMON] float 
   811 ;; Auto vars:     Size  Location     Type
   812 ;;  lval            4    5[BANK0 ] unsigned long 
   813 ;;  exp1            1    9[BANK0 ] unsigned char 
   814 ;;  sign1           1    4[BANK0 ] unsigned char 
   815 ;; Return value:  Size  Location     Type
   816 ;;                  4    4[COMMON] long 
   817 ;; Registers used:
   818 ;;		wreg, status,2, status,0
   819 ;; Tracked objects:
   820 ;;		On entry : 0/0
   821 ;;		On exit  : 0/0
   822 ;;		Unchanged: 0/0
   823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   824 ;;      Params:         4       0       0       0       0
   825 ;;      Locals:         0       6       0       0       0
   826 ;;      Temps:          0       4       0       0       0
   827 ;;      Totals:         4      10       0       0       0
   828 ;;Total ram usage:       14 bytes
   829 ;; Hardware stack levels used:    1
   830 ;; Hardware stack levels required when called:    1
   831 ;; This function calls:
   832 ;;		Nothing
   833 ;; This function is called by:
   834 ;;		_main
   835 ;; This function uses a non-reentrant model
   836 ;;
   837                           
   838                           
   839                           ;psect for function ___fttol
   840  04B1                     ___fttol:	
   841                           
   842                           ;incstack = 0
   843                           ; Regs used in ___fttol: [wreg+status,2+status,0]
   844  04B1  0874               	movf	___fttol@f1,w
   845  04B2  1283               	bcf	3,5	;RP0=0, select bank0
   846  04B3  1303               	bcf	3,6	;RP1=0, select bank0
   847  04B4  00A0               	movwf	??___fttol
   848  04B5  0875               	movf	___fttol@f1+1,w
   849  04B6  00A1               	movwf	??___fttol+1
   850  04B7  0876               	movf	___fttol@f1+2,w
   851  04B8  00A2               	movwf	??___fttol+2
   852  04B9  1003               	clrc
   853  04BA  0D21               	rlf	??___fttol+1,w
   854  04BB  0D22               	rlf	??___fttol+2,w
   855  04BC  00A3               	movwf	??___fttol+3
   856  04BD  0823               	movf	??___fttol+3,w
   857  04BE  00A9               	movwf	___fttol@exp1
   858  04BF  08A9               	movf	___fttol@exp1,f
   859  04C0  1D03               	skipz
   860  04C1  2CCB               	goto	l2027
   861  04C2  3000               	movlw	0
   862  04C3  00F7               	movwf	?___fttol+3
   863  04C4  3000               	movlw	0
   864  04C5  00F6               	movwf	?___fttol+2
   865  04C6  3000               	movlw	0
   866  04C7  00F5               	movwf	?___fttol+1
   867  04C8  3000               	movlw	0
   868  04C9  00F4               	movwf	?___fttol
   869  04CA  0008               	return
   870  04CB                     l2027:	
   871  04CB  0874               	movf	___fttol@f1,w
   872  04CC  00A0               	movwf	??___fttol
   873  04CD  0875               	movf	___fttol@f1+1,w
   874  04CE  00A1               	movwf	??___fttol+1
   875  04CF  0876               	movf	___fttol@f1+2,w
   876  04D0  00A2               	movwf	??___fttol+2
   877  04D1  3017               	movlw	23
   878  04D2                     u2085:	
   879  04D2  1003               	clrc
   880  04D3  0CA2               	rrf	??___fttol+2,f
   881  04D4  0CA1               	rrf	??___fttol+1,f
   882  04D5  0CA0               	rrf	??___fttol,f
   883  04D6  3EFF               	addlw	-1
   884  04D7  1D03               	skipz
   885  04D8  2CD2               	goto	u2085
   886  04D9  0820               	movf	??___fttol,w
   887  04DA  00A3               	movwf	??___fttol+3
   888  04DB  0823               	movf	??___fttol+3,w
   889  04DC  00A4               	movwf	___fttol@sign1
   890  04DD  17F5               	bsf	___fttol@f1+1,7
   891  04DE  30FF               	movlw	255
   892  04DF  05F4               	andwf	___fttol@f1,f
   893  04E0  30FF               	movlw	255
   894  04E1  05F5               	andwf	___fttol@f1+1,f
   895  04E2  3000               	movlw	0
   896  04E3  05F6               	andwf	___fttol@f1+2,f
   897  04E4  0874               	movf	___fttol@f1,w
   898  04E5  00A5               	movwf	___fttol@lval
   899  04E6  0875               	movf	___fttol@f1+1,w
   900  04E7  00A6               	movwf	___fttol@lval+1
   901  04E8  0876               	movf	___fttol@f1+2,w
   902  04E9  00A7               	movwf	___fttol@lval+2
   903  04EA  01A8               	clrf	___fttol@lval+3
   904  04EB  308E               	movlw	142
   905  04EC  02A9               	subwf	___fttol@exp1,f
   906  04ED  1FA9               	btfss	___fttol@exp1,7
   907  04EE  2D0D               	goto	l2047
   908  04EF  0829               	movf	___fttol@exp1,w
   909  04F0  3A80               	xorlw	128
   910  04F1  3E8F               	addlw	143
   911  04F2  1803               	skipnc
   912  04F3  2CFD               	goto	l2045
   913  04F4  3000               	movlw	0
   914  04F5  00F7               	movwf	?___fttol+3
   915  04F6  3000               	movlw	0
   916  04F7  00F6               	movwf	?___fttol+2
   917  04F8  3000               	movlw	0
   918  04F9  00F5               	movwf	?___fttol+1
   919  04FA  3000               	movlw	0
   920  04FB  00F4               	movwf	?___fttol
   921  04FC  0008               	return
   922  04FD                     l2045:	
   923  04FD  3001               	movlw	1
   924  04FE                     u2115:	
   925  04FE  1003               	clrc
   926  04FF  0CA8               	rrf	___fttol@lval+3,f
   927  0500  0CA7               	rrf	___fttol@lval+2,f
   928  0501  0CA6               	rrf	___fttol@lval+1,f
   929  0502  0CA5               	rrf	___fttol@lval,f
   930  0503  3EFF               	addlw	-1
   931  0504  1D03               	skipz
   932  0505  2CFE               	goto	u2115
   933  0506  3001               	movlw	1
   934  0507  00A0               	movwf	??___fttol
   935  0508  0820               	movf	??___fttol,w
   936  0509  07A9               	addwf	___fttol@exp1,f
   937  050A  1903               	btfsc	3,2
   938  050B  2D28               	goto	l2057
   939  050C  2CFD               	goto	l2045
   940  050D                     l2047:	
   941  050D  3018               	movlw	24
   942  050E  0229               	subwf	___fttol@exp1,w
   943  050F  1C03               	skipc
   944  0510  2D25               	goto	l2055
   945  0511  3000               	movlw	0
   946  0512  00F7               	movwf	?___fttol+3
   947  0513  3000               	movlw	0
   948  0514  00F6               	movwf	?___fttol+2
   949  0515  3000               	movlw	0
   950  0516  00F5               	movwf	?___fttol+1
   951  0517  3000               	movlw	0
   952  0518  00F4               	movwf	?___fttol
   953  0519  0008               	return
   954  051A                     l2053:	
   955  051A  3001               	movlw	1
   956  051B  00A0               	movwf	??___fttol
   957  051C                     u2145:	
   958  051C  1003               	clrc
   959  051D  0DA5               	rlf	___fttol@lval,f
   960  051E  0DA6               	rlf	___fttol@lval+1,f
   961  051F  0DA7               	rlf	___fttol@lval+2,f
   962  0520  0DA8               	rlf	___fttol@lval+3,f
   963  0521  0BA0               	decfsz	??___fttol,f
   964  0522  2D1C               	goto	u2145
   965  0523  3001               	movlw	1
   966  0524  02A9               	subwf	___fttol@exp1,f
   967  0525                     l2055:	
   968  0525  08A9               	movf	___fttol@exp1,f
   969  0526  1D03               	skipz
   970  0527  2D1A               	goto	l2053
   971  0528                     l2057:	
   972  0528  0824               	movf	___fttol@sign1,w
   973  0529  1903               	btfsc	3,2
   974  052A  2D36               	goto	l2061
   975  052B  09A5               	comf	___fttol@lval,f
   976  052C  09A6               	comf	___fttol@lval+1,f
   977  052D  09A7               	comf	___fttol@lval+2,f
   978  052E  09A8               	comf	___fttol@lval+3,f
   979  052F  0AA5               	incf	___fttol@lval,f
   980  0530  1903               	skipnz
   981  0531  0AA6               	incf	___fttol@lval+1,f
   982  0532  1903               	skipnz
   983  0533  0AA7               	incf	___fttol@lval+2,f
   984  0534  1903               	skipnz
   985  0535  0AA8               	incf	___fttol@lval+3,f
   986  0536                     l2061:	
   987  0536  0828               	movf	___fttol@lval+3,w
   988  0537  00F7               	movwf	?___fttol+3
   989  0538  0827               	movf	___fttol@lval+2,w
   990  0539  00F6               	movwf	?___fttol+2
   991  053A  0826               	movf	___fttol@lval+1,w
   992  053B  00F5               	movwf	?___fttol+1
   993  053C  0825               	movf	___fttol@lval,w
   994  053D  00F4               	movwf	?___fttol
   995  053E  0008               	return
   996  053F                     __end_of___fttol:	
   997                           
   998                           	psect	text3
   999  0773                     __ptext3:	
  1000 ;; *************** function ___ftneg *****************
  1001 ;; Defined at:
  1002 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\ftneg.c"
  1003 ;; Parameters:    Size  Location     Type
  1004 ;;  f1              3   16[BANK0 ] float 
  1005 ;; Auto vars:     Size  Location     Type
  1006 ;;		None
  1007 ;; Return value:  Size  Location     Type
  1008 ;;                  3   16[BANK0 ] float 
  1009 ;; Registers used:
  1010 ;;		wreg
  1011 ;; Tracked objects:
  1012 ;;		On entry : 0/0
  1013 ;;		On exit  : 0/0
  1014 ;;		Unchanged: 0/0
  1015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1016 ;;      Params:         0       3       0       0       0
  1017 ;;      Locals:         0       0       0       0       0
  1018 ;;      Temps:          0       0       0       0       0
  1019 ;;      Totals:         0       3       0       0       0
  1020 ;;Total ram usage:        3 bytes
  1021 ;; Hardware stack levels used:    1
  1022 ;; Hardware stack levels required when called:    1
  1023 ;; This function calls:
  1024 ;;		Nothing
  1025 ;; This function is called by:
  1026 ;;		_main
  1027 ;; This function uses a non-reentrant model
  1028 ;;
  1029                           
  1030                           
  1031                           ;psect for function ___ftneg
  1032  0773                     ___ftneg:	
  1033                           
  1034                           ;incstack = 0
  1035                           ; Regs used in ___ftneg: [wreg]
  1036  0773  1283               	bcf	3,5	;RP0=0, select bank0
  1037  0774  1303               	bcf	3,6	;RP1=0, select bank0
  1038  0775  0832               	movf	___ftneg@f1+2,w
  1039  0776  0431               	iorwf	___ftneg@f1+1,w
  1040  0777  0430               	iorwf	___ftneg@f1,w
  1041  0778  1903               	skipnz
  1042  0779  0008               	return
  1043  077A  3080               	movlw	128
  1044  077B  06B2               	xorwf	___ftneg@f1+2,f
  1045  077C  0008               	return
  1046  077D                     __end_of___ftneg:	
  1047                           
  1048                           	psect	text4
  1049  0328                     __ptext4:	
  1050 ;; *************** function ___ftmul *****************
  1051 ;; Defined at:
  1052 ;;		line 52 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\ftmul.c"
  1053 ;; Parameters:    Size  Location     Type
  1054 ;;  f1              3   32[BANK0 ] float 
  1055 ;;  f2              3   35[BANK0 ] float 
  1056 ;; Auto vars:     Size  Location     Type
  1057 ;;  f3_as_produc    3   43[BANK0 ] unsigned um
  1058 ;;  sign            1   47[BANK0 ] unsigned char 
  1059 ;;  cntr            1   46[BANK0 ] unsigned char 
  1060 ;;  exp             1   42[BANK0 ] unsigned char 
  1061 ;; Return value:  Size  Location     Type
  1062 ;;                  3   32[BANK0 ] float 
  1063 ;; Registers used:
  1064 ;;		wreg, status,2, status,0, pclath, cstack
  1065 ;; Tracked objects:
  1066 ;;		On entry : 0/0
  1067 ;;		On exit  : 0/0
  1068 ;;		Unchanged: 0/0
  1069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1070 ;;      Params:         0       6       0       0       0
  1071 ;;      Locals:         0       6       0       0       0
  1072 ;;      Temps:          0       4       0       0       0
  1073 ;;      Totals:         0      16       0       0       0
  1074 ;;Total ram usage:       16 bytes
  1075 ;; Hardware stack levels used:    1
  1076 ;; Hardware stack levels required when called:    2
  1077 ;; This function calls:
  1078 ;;		___ftpack
  1079 ;; This function is called by:
  1080 ;;		_main
  1081 ;; This function uses a non-reentrant model
  1082 ;;
  1083                           
  1084                           
  1085                           ;psect for function ___ftmul
  1086  0328                     ___ftmul:	
  1087                           
  1088                           ;incstack = 0
  1089                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  1090  0328  1283               	bcf	3,5	;RP0=0, select bank0
  1091  0329  1303               	bcf	3,6	;RP1=0, select bank0
  1092  032A  0840               	movf	___ftmul@f1,w
  1093  032B  00C6               	movwf	??___ftmul
  1094  032C  0841               	movf	___ftmul@f1+1,w
  1095  032D  00C7               	movwf	??___ftmul+1
  1096  032E  0842               	movf	___ftmul@f1+2,w
  1097  032F  00C8               	movwf	??___ftmul+2
  1098  0330  1003               	clrc
  1099  0331  0D47               	rlf	??___ftmul+1,w
  1100  0332  0D48               	rlf	??___ftmul+2,w
  1101  0333  00C9               	movwf	??___ftmul+3
  1102  0334  0849               	movf	??___ftmul+3,w
  1103  0335  00CA               	movwf	___ftmul@exp
  1104  0336  08CA               	movf	___ftmul@exp,f
  1105  0337  1D03               	skipz
  1106  0338  2B40               	goto	l2527
  1107  0339  3000               	movlw	0
  1108  033A  00C0               	movwf	?___ftmul
  1109  033B  3000               	movlw	0
  1110  033C  00C1               	movwf	?___ftmul+1
  1111  033D  3000               	movlw	0
  1112  033E  00C2               	movwf	?___ftmul+2
  1113  033F  0008               	return
  1114  0340                     l2527:	
  1115  0340  0843               	movf	___ftmul@f2,w
  1116  0341  00C6               	movwf	??___ftmul
  1117  0342  0844               	movf	___ftmul@f2+1,w
  1118  0343  00C7               	movwf	??___ftmul+1
  1119  0344  0845               	movf	___ftmul@f2+2,w
  1120  0345  00C8               	movwf	??___ftmul+2
  1121  0346  1003               	clrc
  1122  0347  0D47               	rlf	??___ftmul+1,w
  1123  0348  0D48               	rlf	??___ftmul+2,w
  1124  0349  00C9               	movwf	??___ftmul+3
  1125  034A  0849               	movf	??___ftmul+3,w
  1126  034B  00CF               	movwf	___ftmul@sign
  1127  034C  08CF               	movf	___ftmul@sign,f
  1128  034D  1D03               	skipz
  1129  034E  2B56               	goto	l2533
  1130  034F  3000               	movlw	0
  1131  0350  00C0               	movwf	?___ftmul
  1132  0351  3000               	movlw	0
  1133  0352  00C1               	movwf	?___ftmul+1
  1134  0353  3000               	movlw	0
  1135  0354  00C2               	movwf	?___ftmul+2
  1136  0355  0008               	return
  1137  0356                     l2533:	
  1138  0356  084F               	movf	___ftmul@sign,w
  1139  0357  3E7B               	addlw	123
  1140  0358  00C6               	movwf	??___ftmul
  1141  0359  0846               	movf	??___ftmul,w
  1142  035A  07CA               	addwf	___ftmul@exp,f
  1143  035B  0840               	movf	___ftmul@f1,w
  1144  035C  00C6               	movwf	??___ftmul
  1145  035D  0841               	movf	___ftmul@f1+1,w
  1146  035E  00C7               	movwf	??___ftmul+1
  1147  035F  0842               	movf	___ftmul@f1+2,w
  1148  0360  00C8               	movwf	??___ftmul+2
  1149  0361  3010               	movlw	16
  1150  0362                     u2995:	
  1151  0362  1003               	clrc
  1152  0363  0CC8               	rrf	??___ftmul+2,f
  1153  0364  0CC7               	rrf	??___ftmul+1,f
  1154  0365  0CC6               	rrf	??___ftmul,f
  1155  0366  3EFF               	addlw	-1
  1156  0367  1D03               	skipz
  1157  0368  2B62               	goto	u2995
  1158  0369  0846               	movf	??___ftmul,w
  1159  036A  00C9               	movwf	??___ftmul+3
  1160  036B  0849               	movf	??___ftmul+3,w
  1161  036C  00CF               	movwf	___ftmul@sign
  1162  036D  0843               	movf	___ftmul@f2,w
  1163  036E  00C6               	movwf	??___ftmul
  1164  036F  0844               	movf	___ftmul@f2+1,w
  1165  0370  00C7               	movwf	??___ftmul+1
  1166  0371  0845               	movf	___ftmul@f2+2,w
  1167  0372  00C8               	movwf	??___ftmul+2
  1168  0373  3010               	movlw	16
  1169  0374                     u3005:	
  1170  0374  1003               	clrc
  1171  0375  0CC8               	rrf	??___ftmul+2,f
  1172  0376  0CC7               	rrf	??___ftmul+1,f
  1173  0377  0CC6               	rrf	??___ftmul,f
  1174  0378  3EFF               	addlw	-1
  1175  0379  1D03               	skipz
  1176  037A  2B74               	goto	u3005
  1177  037B  0846               	movf	??___ftmul,w
  1178  037C  00C9               	movwf	??___ftmul+3
  1179  037D  0849               	movf	??___ftmul+3,w
  1180  037E  06CF               	xorwf	___ftmul@sign,f
  1181  037F  3080               	movlw	128
  1182  0380  00C6               	movwf	??___ftmul
  1183  0381  0846               	movf	??___ftmul,w
  1184  0382  05CF               	andwf	___ftmul@sign,f
  1185  0383  17C1               	bsf	___ftmul@f1+1,7
  1186  0384  17C4               	bsf	___ftmul@f2+1,7
  1187  0385  30FF               	movlw	255
  1188  0386  05C3               	andwf	___ftmul@f2,f
  1189  0387  30FF               	movlw	255
  1190  0388  05C4               	andwf	___ftmul@f2+1,f
  1191  0389  3000               	movlw	0
  1192  038A  05C5               	andwf	___ftmul@f2+2,f
  1193  038B  3000               	movlw	0
  1194  038C  00CB               	movwf	___ftmul@f3_as_product
  1195  038D  3000               	movlw	0
  1196  038E  00CC               	movwf	___ftmul@f3_as_product+1
  1197  038F  3000               	movlw	0
  1198  0390  00CD               	movwf	___ftmul@f3_as_product+2
  1199  0391  3007               	movlw	7
  1200  0392  00C6               	movwf	??___ftmul
  1201  0393  0846               	movf	??___ftmul,w
  1202  0394  00CE               	movwf	___ftmul@cntr
  1203  0395                     l2545:	
  1204  0395  1C40               	btfss	___ftmul@f1,0
  1205  0396  2BA5               	goto	l2549
  1206  0397  0843               	movf	___ftmul@f2,w
  1207  0398  07CB               	addwf	___ftmul@f3_as_product,f
  1208  0399  0844               	movf	___ftmul@f2+1,w
  1209  039A  1103               	clrz
  1210  039B  1803               	skipnc
  1211  039C  0A44               	incf	___ftmul@f2+1,w
  1212  039D  1D03               	btfss	3,2
  1213  039E  07CC               	addwf	___ftmul@f3_as_product+1,f
  1214  039F  0845               	movf	___ftmul@f2+2,w
  1215  03A0  1103               	clrz
  1216  03A1  1803               	skipnc
  1217  03A2  0A45               	incf	___ftmul@f2+2,w
  1218  03A3  1D03               	btfss	3,2
  1219  03A4  07CD               	addwf	___ftmul@f3_as_product+2,f
  1220  03A5                     l2549:	
  1221  03A5  3001               	movlw	1
  1222  03A6                     u3035:	
  1223  03A6  1003               	clrc
  1224  03A7  0CC2               	rrf	___ftmul@f1+2,f
  1225  03A8  0CC1               	rrf	___ftmul@f1+1,f
  1226  03A9  0CC0               	rrf	___ftmul@f1,f
  1227  03AA  3EFF               	addlw	-1
  1228  03AB  1D03               	skipz
  1229  03AC  2BA6               	goto	u3035
  1230  03AD  3001               	movlw	1
  1231  03AE                     u3045:	
  1232  03AE  1003               	clrc
  1233  03AF  0DC3               	rlf	___ftmul@f2,f
  1234  03B0  0DC4               	rlf	___ftmul@f2+1,f
  1235  03B1  0DC5               	rlf	___ftmul@f2+2,f
  1236  03B2  3EFF               	addlw	-1
  1237  03B3  1D03               	skipz
  1238  03B4  2BAE               	goto	u3045
  1239  03B5  3001               	movlw	1
  1240  03B6  02CE               	subwf	___ftmul@cntr,f
  1241  03B7  1D03               	btfss	3,2
  1242  03B8  2B95               	goto	l2545
  1243  03B9  3009               	movlw	9
  1244  03BA  00C6               	movwf	??___ftmul
  1245  03BB  0846               	movf	??___ftmul,w
  1246  03BC  00CE               	movwf	___ftmul@cntr
  1247  03BD                     l2557:	
  1248  03BD  1C40               	btfss	___ftmul@f1,0
  1249  03BE  2BCD               	goto	l2561
  1250  03BF  0843               	movf	___ftmul@f2,w
  1251  03C0  07CB               	addwf	___ftmul@f3_as_product,f
  1252  03C1  0844               	movf	___ftmul@f2+1,w
  1253  03C2  1103               	clrz
  1254  03C3  1803               	skipnc
  1255  03C4  0A44               	incf	___ftmul@f2+1,w
  1256  03C5  1D03               	btfss	3,2
  1257  03C6  07CC               	addwf	___ftmul@f3_as_product+1,f
  1258  03C7  0845               	movf	___ftmul@f2+2,w
  1259  03C8  1103               	clrz
  1260  03C9  1803               	skipnc
  1261  03CA  0A45               	incf	___ftmul@f2+2,w
  1262  03CB  1D03               	btfss	3,2
  1263  03CC  07CD               	addwf	___ftmul@f3_as_product+2,f
  1264  03CD                     l2561:	
  1265  03CD  3001               	movlw	1
  1266  03CE                     u3085:	
  1267  03CE  1003               	clrc
  1268  03CF  0CC2               	rrf	___ftmul@f1+2,f
  1269  03D0  0CC1               	rrf	___ftmul@f1+1,f
  1270  03D1  0CC0               	rrf	___ftmul@f1,f
  1271  03D2  3EFF               	addlw	-1
  1272  03D3  1D03               	skipz
  1273  03D4  2BCE               	goto	u3085
  1274  03D5  3001               	movlw	1
  1275  03D6                     u3095:	
  1276  03D6  1003               	clrc
  1277  03D7  0CCD               	rrf	___ftmul@f3_as_product+2,f
  1278  03D8  0CCC               	rrf	___ftmul@f3_as_product+1,f
  1279  03D9  0CCB               	rrf	___ftmul@f3_as_product,f
  1280  03DA  3EFF               	addlw	-1
  1281  03DB  1D03               	skipz
  1282  03DC  2BD6               	goto	u3095
  1283  03DD  3001               	movlw	1
  1284  03DE  02CE               	subwf	___ftmul@cntr,f
  1285  03DF  1D03               	btfss	3,2
  1286  03E0  2BBD               	goto	l2557
  1287  03E1  084B               	movf	___ftmul@f3_as_product,w
  1288  03E2  00A0               	movwf	?___ftpack
  1289  03E3  084C               	movf	___ftmul@f3_as_product+1,w
  1290  03E4  00A1               	movwf	?___ftpack+1
  1291  03E5  084D               	movf	___ftmul@f3_as_product+2,w
  1292  03E6  00A2               	movwf	?___ftpack+2
  1293  03E7  084A               	movf	___ftmul@exp,w
  1294  03E8  00C6               	movwf	??___ftmul
  1295  03E9  0846               	movf	??___ftmul,w
  1296  03EA  00A3               	movwf	?___ftpack+3
  1297  03EB  084F               	movf	___ftmul@sign,w
  1298  03EC  00C7               	movwf	??___ftmul+1
  1299  03ED  0847               	movf	??___ftmul+1,w
  1300  03EE  00A4               	movwf	?___ftpack+4
  1301  03EF  118A  253F         	fcall	___ftpack
  1302  03F1  1283               	bcf	3,5	;RP0=0, select bank0
  1303  03F2  1303               	bcf	3,6	;RP1=0, select bank0
  1304  03F3  0820               	movf	?___ftpack,w
  1305  03F4  00C0               	movwf	?___ftmul
  1306  03F5  0821               	movf	?___ftpack+1,w
  1307  03F6  00C1               	movwf	?___ftmul+1
  1308  03F7  0822               	movf	?___ftpack+2,w
  1309  03F8  00C2               	movwf	?___ftmul+2
  1310  03F9  0008               	return
  1311  03FA                     __end_of___ftmul:	
  1312                           
  1313                           	psect	text5
  1314  03FA                     __ptext5:	
  1315 ;; *************** function ___ftdiv *****************
  1316 ;; Defined at:
  1317 ;;		line 50 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\ftdiv.c"
  1318 ;; Parameters:    Size  Location     Type
  1319 ;;  f2              3    8[BANK0 ] float 
  1320 ;;  f1              3   11[BANK0 ] float 
  1321 ;; Auto vars:     Size  Location     Type
  1322 ;;  f3              3   19[BANK0 ] float 
  1323 ;;  sign            1   23[BANK0 ] unsigned char 
  1324 ;;  exp             1   22[BANK0 ] unsigned char 
  1325 ;;  cntr            1   18[BANK0 ] unsigned char 
  1326 ;; Return value:  Size  Location     Type
  1327 ;;                  3    8[BANK0 ] float 
  1328 ;; Registers used:
  1329 ;;		wreg, status,2, status,0, pclath, cstack
  1330 ;; Tracked objects:
  1331 ;;		On entry : 0/0
  1332 ;;		On exit  : 0/0
  1333 ;;		Unchanged: 0/0
  1334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1335 ;;      Params:         0       6       0       0       0
  1336 ;;      Locals:         0       6       0       0       0
  1337 ;;      Temps:          0       4       0       0       0
  1338 ;;      Totals:         0      16       0       0       0
  1339 ;;Total ram usage:       16 bytes
  1340 ;; Hardware stack levels used:    1
  1341 ;; Hardware stack levels required when called:    2
  1342 ;; This function calls:
  1343 ;;		___ftpack
  1344 ;; This function is called by:
  1345 ;;		_main
  1346 ;; This function uses a non-reentrant model
  1347 ;;
  1348                           
  1349                           
  1350                           ;psect for function ___ftdiv
  1351  03FA                     ___ftdiv:	
  1352                           
  1353                           ;incstack = 0
  1354                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  1355  03FA  1283               	bcf	3,5	;RP0=0, select bank0
  1356  03FB  1303               	bcf	3,6	;RP1=0, select bank0
  1357  03FC  082B               	movf	___ftdiv@f1,w
  1358  03FD  00AE               	movwf	??___ftdiv
  1359  03FE  082C               	movf	___ftdiv@f1+1,w
  1360  03FF  00AF               	movwf	??___ftdiv+1
  1361  0400  082D               	movf	___ftdiv@f1+2,w
  1362  0401  00B0               	movwf	??___ftdiv+2
  1363  0402  1003               	clrc
  1364  0403  0D2F               	rlf	??___ftdiv+1,w
  1365  0404  0D30               	rlf	??___ftdiv+2,w
  1366  0405  00B1               	movwf	??___ftdiv+3
  1367  0406  0831               	movf	??___ftdiv+3,w
  1368  0407  00B6               	movwf	___ftdiv@exp
  1369  0408  08B6               	movf	___ftdiv@exp,f
  1370  0409  1D03               	skipz
  1371  040A  2C12               	goto	l2485
  1372  040B  3000               	movlw	0
  1373  040C  00A8               	movwf	?___ftdiv
  1374  040D  3000               	movlw	0
  1375  040E  00A9               	movwf	?___ftdiv+1
  1376  040F  3000               	movlw	0
  1377  0410  00AA               	movwf	?___ftdiv+2
  1378  0411  0008               	return
  1379  0412                     l2485:	
  1380  0412  0828               	movf	___ftdiv@f2,w
  1381  0413  00AE               	movwf	??___ftdiv
  1382  0414  0829               	movf	___ftdiv@f2+1,w
  1383  0415  00AF               	movwf	??___ftdiv+1
  1384  0416  082A               	movf	___ftdiv@f2+2,w
  1385  0417  00B0               	movwf	??___ftdiv+2
  1386  0418  1003               	clrc
  1387  0419  0D2F               	rlf	??___ftdiv+1,w
  1388  041A  0D30               	rlf	??___ftdiv+2,w
  1389  041B  00B1               	movwf	??___ftdiv+3
  1390  041C  0831               	movf	??___ftdiv+3,w
  1391  041D  00B7               	movwf	___ftdiv@sign
  1392  041E  08B7               	movf	___ftdiv@sign,f
  1393  041F  1D03               	skipz
  1394  0420  2C28               	goto	l2491
  1395  0421  3000               	movlw	0
  1396  0422  00A8               	movwf	?___ftdiv
  1397  0423  3000               	movlw	0
  1398  0424  00A9               	movwf	?___ftdiv+1
  1399  0425  3000               	movlw	0
  1400  0426  00AA               	movwf	?___ftdiv+2
  1401  0427  0008               	return
  1402  0428                     l2491:	
  1403  0428  3000               	movlw	0
  1404  0429  00B3               	movwf	___ftdiv@f3
  1405  042A  3000               	movlw	0
  1406  042B  00B4               	movwf	___ftdiv@f3+1
  1407  042C  3000               	movlw	0
  1408  042D  00B5               	movwf	___ftdiv@f3+2
  1409  042E  3089               	movlw	137
  1410  042F  0737               	addwf	___ftdiv@sign,w
  1411  0430  00AE               	movwf	??___ftdiv
  1412  0431  082E               	movf	??___ftdiv,w
  1413  0432  02B6               	subwf	___ftdiv@exp,f
  1414  0433  082B               	movf	___ftdiv@f1,w
  1415  0434  00AE               	movwf	??___ftdiv
  1416  0435  082C               	movf	___ftdiv@f1+1,w
  1417  0436  00AF               	movwf	??___ftdiv+1
  1418  0437  082D               	movf	___ftdiv@f1+2,w
  1419  0438  00B0               	movwf	??___ftdiv+2
  1420  0439  3010               	movlw	16
  1421  043A                     u2915:	
  1422  043A  1003               	clrc
  1423  043B  0CB0               	rrf	??___ftdiv+2,f
  1424  043C  0CAF               	rrf	??___ftdiv+1,f
  1425  043D  0CAE               	rrf	??___ftdiv,f
  1426  043E  3EFF               	addlw	-1
  1427  043F  1D03               	skipz
  1428  0440  2C3A               	goto	u2915
  1429  0441  082E               	movf	??___ftdiv,w
  1430  0442  00B1               	movwf	??___ftdiv+3
  1431  0443  0831               	movf	??___ftdiv+3,w
  1432  0444  00B7               	movwf	___ftdiv@sign
  1433  0445  0828               	movf	___ftdiv@f2,w
  1434  0446  00AE               	movwf	??___ftdiv
  1435  0447  0829               	movf	___ftdiv@f2+1,w
  1436  0448  00AF               	movwf	??___ftdiv+1
  1437  0449  082A               	movf	___ftdiv@f2+2,w
  1438  044A  00B0               	movwf	??___ftdiv+2
  1439  044B  3010               	movlw	16
  1440  044C                     u2925:	
  1441  044C  1003               	clrc
  1442  044D  0CB0               	rrf	??___ftdiv+2,f
  1443  044E  0CAF               	rrf	??___ftdiv+1,f
  1444  044F  0CAE               	rrf	??___ftdiv,f
  1445  0450  3EFF               	addlw	-1
  1446  0451  1D03               	skipz
  1447  0452  2C4C               	goto	u2925
  1448  0453  082E               	movf	??___ftdiv,w
  1449  0454  00B1               	movwf	??___ftdiv+3
  1450  0455  0831               	movf	??___ftdiv+3,w
  1451  0456  06B7               	xorwf	___ftdiv@sign,f
  1452  0457  3080               	movlw	128
  1453  0458  00AE               	movwf	??___ftdiv
  1454  0459  082E               	movf	??___ftdiv,w
  1455  045A  05B7               	andwf	___ftdiv@sign,f
  1456  045B  17AC               	bsf	___ftdiv@f1+1,7
  1457  045C  30FF               	movlw	255
  1458  045D  05AB               	andwf	___ftdiv@f1,f
  1459  045E  30FF               	movlw	255
  1460  045F  05AC               	andwf	___ftdiv@f1+1,f
  1461  0460  3000               	movlw	0
  1462  0461  05AD               	andwf	___ftdiv@f1+2,f
  1463  0462  17A9               	bsf	___ftdiv@f2+1,7
  1464  0463  30FF               	movlw	255
  1465  0464  05A8               	andwf	___ftdiv@f2,f
  1466  0465  30FF               	movlw	255
  1467  0466  05A9               	andwf	___ftdiv@f2+1,f
  1468  0467  3000               	movlw	0
  1469  0468  05AA               	andwf	___ftdiv@f2+2,f
  1470  0469  3018               	movlw	24
  1471  046A  00AE               	movwf	??___ftdiv
  1472  046B  082E               	movf	??___ftdiv,w
  1473  046C  00B2               	movwf	___ftdiv@cntr
  1474  046D                     l2505:	
  1475  046D  3001               	movlw	1
  1476  046E                     u2935:	
  1477  046E  1003               	clrc
  1478  046F  0DB3               	rlf	___ftdiv@f3,f
  1479  0470  0DB4               	rlf	___ftdiv@f3+1,f
  1480  0471  0DB5               	rlf	___ftdiv@f3+2,f
  1481  0472  3EFF               	addlw	-1
  1482  0473  1D03               	skipz
  1483  0474  2C6E               	goto	u2935
  1484  0475  082A               	movf	___ftdiv@f2+2,w
  1485  0476  022D               	subwf	___ftdiv@f1+2,w
  1486  0477  1D03               	skipz
  1487  0478  2C7F               	goto	u2945
  1488  0479  0829               	movf	___ftdiv@f2+1,w
  1489  047A  022C               	subwf	___ftdiv@f1+1,w
  1490  047B  1D03               	skipz
  1491  047C  2C7F               	goto	u2945
  1492  047D  0828               	movf	___ftdiv@f2,w
  1493  047E  022B               	subwf	___ftdiv@f1,w
  1494  047F                     u2945:	
  1495  047F  1C03               	skipc
  1496  0480  2C8C               	goto	l2513
  1497  0481  0828               	movf	___ftdiv@f2,w
  1498  0482  02AB               	subwf	___ftdiv@f1,f
  1499  0483  0829               	movf	___ftdiv@f2+1,w
  1500  0484  1C03               	skipc
  1501  0485  0F29               	incfsz	___ftdiv@f2+1,w
  1502  0486  02AC               	subwf	___ftdiv@f1+1,f
  1503  0487  082A               	movf	___ftdiv@f2+2,w
  1504  0488  1C03               	skipc
  1505  0489  0A2A               	incf	___ftdiv@f2+2,w
  1506  048A  02AD               	subwf	___ftdiv@f1+2,f
  1507  048B  1433               	bsf	___ftdiv@f3,0
  1508  048C                     l2513:	
  1509  048C  3001               	movlw	1
  1510  048D                     u2955:	
  1511  048D  1003               	clrc
  1512  048E  0DAB               	rlf	___ftdiv@f1,f
  1513  048F  0DAC               	rlf	___ftdiv@f1+1,f
  1514  0490  0DAD               	rlf	___ftdiv@f1+2,f
  1515  0491  3EFF               	addlw	-1
  1516  0492  1D03               	skipz
  1517  0493  2C8D               	goto	u2955
  1518  0494  3001               	movlw	1
  1519  0495  02B2               	subwf	___ftdiv@cntr,f
  1520  0496  1D03               	btfss	3,2
  1521  0497  2C6D               	goto	l2505
  1522  0498  0833               	movf	___ftdiv@f3,w
  1523  0499  00A0               	movwf	?___ftpack
  1524  049A  0834               	movf	___ftdiv@f3+1,w
  1525  049B  00A1               	movwf	?___ftpack+1
  1526  049C  0835               	movf	___ftdiv@f3+2,w
  1527  049D  00A2               	movwf	?___ftpack+2
  1528  049E  0836               	movf	___ftdiv@exp,w
  1529  049F  00AE               	movwf	??___ftdiv
  1530  04A0  082E               	movf	??___ftdiv,w
  1531  04A1  00A3               	movwf	?___ftpack+3
  1532  04A2  0837               	movf	___ftdiv@sign,w
  1533  04A3  00AF               	movwf	??___ftdiv+1
  1534  04A4  082F               	movf	??___ftdiv+1,w
  1535  04A5  00A4               	movwf	?___ftpack+4
  1536  04A6  118A  253F         	fcall	___ftpack
  1537  04A8  1283               	bcf	3,5	;RP0=0, select bank0
  1538  04A9  1303               	bcf	3,6	;RP1=0, select bank0
  1539  04AA  0820               	movf	?___ftpack,w
  1540  04AB  00A8               	movwf	?___ftdiv
  1541  04AC  0821               	movf	?___ftpack+1,w
  1542  04AD  00A9               	movwf	?___ftdiv+1
  1543  04AE  0822               	movf	?___ftpack+2,w
  1544  04AF  00AA               	movwf	?___ftdiv+2
  1545  04B0  0008               	return
  1546  04B1                     __end_of___ftdiv:	
  1547                           
  1548                           	psect	text6
  1549  0129                     __ptext6:	
  1550 ;; *************** function ___ftadd *****************
  1551 ;; Defined at:
  1552 ;;		line 87 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\ftadd.c"
  1553 ;; Parameters:    Size  Location     Type
  1554 ;;  f1              3   19[BANK0 ] float 
  1555 ;;  f2              3   22[BANK0 ] float 
  1556 ;; Auto vars:     Size  Location     Type
  1557 ;;  exp1            1   31[BANK0 ] unsigned char 
  1558 ;;  exp2            1   30[BANK0 ] unsigned char 
  1559 ;;  sign            1   29[BANK0 ] unsigned char 
  1560 ;; Return value:  Size  Location     Type
  1561 ;;                  3   19[BANK0 ] float 
  1562 ;; Registers used:
  1563 ;;		wreg, status,2, status,0, pclath, cstack
  1564 ;; Tracked objects:
  1565 ;;		On entry : 0/0
  1566 ;;		On exit  : 0/0
  1567 ;;		Unchanged: 0/0
  1568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1569 ;;      Params:         0       6       0       0       0
  1570 ;;      Locals:         0       3       0       0       0
  1571 ;;      Temps:          0       4       0       0       0
  1572 ;;      Totals:         0      13       0       0       0
  1573 ;;Total ram usage:       13 bytes
  1574 ;; Hardware stack levels used:    1
  1575 ;; Hardware stack levels required when called:    2
  1576 ;; This function calls:
  1577 ;;		___ftpack
  1578 ;; This function is called by:
  1579 ;;		_main
  1580 ;; This function uses a non-reentrant model
  1581 ;;
  1582                           
  1583                           
  1584                           ;psect for function ___ftadd
  1585  0129                     ___ftadd:	
  1586                           
  1587                           ;incstack = 0
  1588                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  1589  0129  1283               	bcf	3,5	;RP0=0, select bank0
  1590  012A  1303               	bcf	3,6	;RP1=0, select bank0
  1591  012B  0833               	movf	___ftadd@f1,w
  1592  012C  00B9               	movwf	??___ftadd
  1593  012D  0834               	movf	___ftadd@f1+1,w
  1594  012E  00BA               	movwf	??___ftadd+1
  1595  012F  0835               	movf	___ftadd@f1+2,w
  1596  0130  00BB               	movwf	??___ftadd+2
  1597  0131  1003               	clrc
  1598  0132  0D3A               	rlf	??___ftadd+1,w
  1599  0133  0D3B               	rlf	??___ftadd+2,w
  1600  0134  00BC               	movwf	??___ftadd+3
  1601  0135  083C               	movf	??___ftadd+3,w
  1602  0136  00BF               	movwf	___ftadd@exp1
  1603  0137  0836               	movf	___ftadd@f2,w
  1604  0138  00B9               	movwf	??___ftadd
  1605  0139  0837               	movf	___ftadd@f2+1,w
  1606  013A  00BA               	movwf	??___ftadd+1
  1607  013B  0838               	movf	___ftadd@f2+2,w
  1608  013C  00BB               	movwf	??___ftadd+2
  1609  013D  1003               	clrc
  1610  013E  0D3A               	rlf	??___ftadd+1,w
  1611  013F  0D3B               	rlf	??___ftadd+2,w
  1612  0140  00BC               	movwf	??___ftadd+3
  1613  0141  083C               	movf	??___ftadd+3,w
  1614  0142  00BE               	movwf	___ftadd@exp2
  1615  0143  083F               	movf	___ftadd@exp1,w
  1616  0144  1903               	btfsc	3,2
  1617  0145  2952               	goto	l2415
  1618  0146  083E               	movf	___ftadd@exp2,w
  1619  0147  023F               	subwf	___ftadd@exp1,w
  1620  0148  1803               	skipnc
  1621  0149  2959               	goto	l2419
  1622  014A  033F               	decf	___ftadd@exp1,w
  1623  014B  3AFF               	xorlw	255
  1624  014C  073E               	addwf	___ftadd@exp2,w
  1625  014D  00B9               	movwf	??___ftadd
  1626  014E  3019               	movlw	25
  1627  014F  0239               	subwf	??___ftadd,w
  1628  0150  1C03               	skipc
  1629  0151  2959               	goto	l2419
  1630  0152                     l2415:	
  1631  0152  0836               	movf	___ftadd@f2,w
  1632  0153  00B3               	movwf	?___ftadd
  1633  0154  0837               	movf	___ftadd@f2+1,w
  1634  0155  00B4               	movwf	?___ftadd+1
  1635  0156  0838               	movf	___ftadd@f2+2,w
  1636  0157  00B5               	movwf	?___ftadd+2
  1637  0158  0008               	return
  1638  0159                     l2419:	
  1639  0159  083E               	movf	___ftadd@exp2,w
  1640  015A  1903               	btfsc	3,2
  1641  015B  0008               	return
  1642  015C  083F               	movf	___ftadd@exp1,w
  1643  015D  023E               	subwf	___ftadd@exp2,w
  1644  015E  1803               	skipnc
  1645  015F  2968               	goto	l2425
  1646  0160  033E               	decf	___ftadd@exp2,w
  1647  0161  3AFF               	xorlw	255
  1648  0162  073F               	addwf	___ftadd@exp1,w
  1649  0163  00B9               	movwf	??___ftadd
  1650  0164  3019               	movlw	25
  1651  0165  0239               	subwf	??___ftadd,w
  1652  0166  1803               	btfsc	3,0
  1653  0167  0008               	return
  1654  0168                     l2425:	
  1655  0168  3006               	movlw	6
  1656  0169  00B9               	movwf	??___ftadd
  1657  016A  0839               	movf	??___ftadd,w
  1658  016B  00BD               	movwf	___ftadd@sign
  1659  016C  1BB5               	btfsc	___ftadd@f1+2,7
  1660  016D  17BD               	bsf	___ftadd@sign,7
  1661  016E  1BB8               	btfsc	___ftadd@f2+2,7
  1662  016F  173D               	bsf	___ftadd@sign,6
  1663  0170  17B4               	bsf	___ftadd@f1+1,7
  1664  0171  30FF               	movlw	255
  1665  0172  05B3               	andwf	___ftadd@f1,f
  1666  0173  30FF               	movlw	255
  1667  0174  05B4               	andwf	___ftadd@f1+1,f
  1668  0175  3000               	movlw	0
  1669  0176  05B5               	andwf	___ftadd@f1+2,f
  1670  0177  17B7               	bsf	___ftadd@f2+1,7
  1671  0178  30FF               	movlw	255
  1672  0179  05B6               	andwf	___ftadd@f2,f
  1673  017A  30FF               	movlw	255
  1674  017B  05B7               	andwf	___ftadd@f2+1,f
  1675  017C  3000               	movlw	0
  1676  017D  05B8               	andwf	___ftadd@f2+2,f
  1677  017E  083E               	movf	___ftadd@exp2,w
  1678  017F  023F               	subwf	___ftadd@exp1,w
  1679  0180  1803               	skipnc
  1680  0181  29A8               	goto	l2447
  1681  0182                     l2437:	
  1682  0182  3001               	movlw	1
  1683  0183                     u2745:	
  1684  0183  1003               	clrc
  1685  0184  0DB6               	rlf	___ftadd@f2,f
  1686  0185  0DB7               	rlf	___ftadd@f2+1,f
  1687  0186  0DB8               	rlf	___ftadd@f2+2,f
  1688  0187  3EFF               	addlw	-1
  1689  0188  1D03               	skipz
  1690  0189  2983               	goto	u2745
  1691  018A  3001               	movlw	1
  1692  018B  02BE               	subwf	___ftadd@exp2,f
  1693  018C  083E               	movf	___ftadd@exp2,w
  1694  018D  063F               	xorwf	___ftadd@exp1,w
  1695  018E  1903               	skipnz
  1696  018F  29A3               	goto	l2445
  1697  0190  3001               	movlw	1
  1698  0191  02BD               	subwf	___ftadd@sign,f
  1699  0192  083D               	movf	___ftadd@sign,w
  1700  0193  3907               	andlw	7
  1701  0194  1903               	btfsc	3,2
  1702  0195  29A3               	goto	l2445
  1703  0196  2982               	goto	l2437
  1704  0197                     l2443:	
  1705  0197  3001               	movlw	1
  1706  0198                     u2775:	
  1707  0198  1003               	clrc
  1708  0199  0CB5               	rrf	___ftadd@f1+2,f
  1709  019A  0CB4               	rrf	___ftadd@f1+1,f
  1710  019B  0CB3               	rrf	___ftadd@f1,f
  1711  019C  3EFF               	addlw	-1
  1712  019D  1D03               	skipz
  1713  019E  2998               	goto	u2775
  1714  019F  3001               	movlw	1
  1715  01A0  00B9               	movwf	??___ftadd
  1716  01A1  0839               	movf	??___ftadd,w
  1717  01A2  07BF               	addwf	___ftadd@exp1,f
  1718  01A3                     l2445:	
  1719  01A3  083F               	movf	___ftadd@exp1,w
  1720  01A4  063E               	xorwf	___ftadd@exp2,w
  1721  01A5  1903               	btfsc	3,2
  1722  01A6  29D1               	goto	l438
  1723  01A7  2997               	goto	l2443
  1724  01A8                     l2447:	
  1725  01A8  083F               	movf	___ftadd@exp1,w
  1726  01A9  023E               	subwf	___ftadd@exp2,w
  1727  01AA  1803               	skipnc
  1728  01AB  29D1               	goto	l438
  1729  01AC                     l2449:	
  1730  01AC  3001               	movlw	1
  1731  01AD                     u2805:	
  1732  01AD  1003               	clrc
  1733  01AE  0DB3               	rlf	___ftadd@f1,f
  1734  01AF  0DB4               	rlf	___ftadd@f1+1,f
  1735  01B0  0DB5               	rlf	___ftadd@f1+2,f
  1736  01B1  3EFF               	addlw	-1
  1737  01B2  1D03               	skipz
  1738  01B3  29AD               	goto	u2805
  1739  01B4  3001               	movlw	1
  1740  01B5  02BF               	subwf	___ftadd@exp1,f
  1741  01B6  083E               	movf	___ftadd@exp2,w
  1742  01B7  063F               	xorwf	___ftadd@exp1,w
  1743  01B8  1903               	skipnz
  1744  01B9  29CD               	goto	l2457
  1745  01BA  3001               	movlw	1
  1746  01BB  02BD               	subwf	___ftadd@sign,f
  1747  01BC  083D               	movf	___ftadd@sign,w
  1748  01BD  3907               	andlw	7
  1749  01BE  1903               	btfsc	3,2
  1750  01BF  29CD               	goto	l2457
  1751  01C0  29AC               	goto	l2449
  1752  01C1                     l2455:	
  1753  01C1  3001               	movlw	1
  1754  01C2                     u2835:	
  1755  01C2  1003               	clrc
  1756  01C3  0CB8               	rrf	___ftadd@f2+2,f
  1757  01C4  0CB7               	rrf	___ftadd@f2+1,f
  1758  01C5  0CB6               	rrf	___ftadd@f2,f
  1759  01C6  3EFF               	addlw	-1
  1760  01C7  1D03               	skipz
  1761  01C8  29C2               	goto	u2835
  1762  01C9  3001               	movlw	1
  1763  01CA  00B9               	movwf	??___ftadd
  1764  01CB  0839               	movf	??___ftadd,w
  1765  01CC  07BE               	addwf	___ftadd@exp2,f
  1766  01CD                     l2457:	
  1767  01CD  083F               	movf	___ftadd@exp1,w
  1768  01CE  063E               	xorwf	___ftadd@exp2,w
  1769  01CF  1D03               	skipz
  1770  01D0  29C1               	goto	l2455
  1771  01D1                     l438:	
  1772  01D1  1FBD               	btfss	___ftadd@sign,7
  1773  01D2  29E3               	goto	l2461
  1774  01D3  30FF               	movlw	255
  1775  01D4  06B3               	xorwf	___ftadd@f1,f
  1776  01D5  30FF               	movlw	255
  1777  01D6  06B4               	xorwf	___ftadd@f1+1,f
  1778  01D7  30FF               	movlw	255
  1779  01D8  06B5               	xorwf	___ftadd@f1+2,f
  1780  01D9  3001               	movlw	1
  1781  01DA  07B3               	addwf	___ftadd@f1,f
  1782  01DB  3000               	movlw	0
  1783  01DC  1803               	skipnc
  1784  01DD  3001               	movlw	1
  1785  01DE  07B4               	addwf	___ftadd@f1+1,f
  1786  01DF  3000               	movlw	0
  1787  01E0  1803               	skipnc
  1788  01E1  3001               	movlw	1
  1789  01E2  07B5               	addwf	___ftadd@f1+2,f
  1790  01E3                     l2461:	
  1791  01E3  1F3D               	btfss	___ftadd@sign,6
  1792  01E4  29F5               	goto	l2465
  1793  01E5  30FF               	movlw	255
  1794  01E6  06B6               	xorwf	___ftadd@f2,f
  1795  01E7  30FF               	movlw	255
  1796  01E8  06B7               	xorwf	___ftadd@f2+1,f
  1797  01E9  30FF               	movlw	255
  1798  01EA  06B8               	xorwf	___ftadd@f2+2,f
  1799  01EB  3001               	movlw	1
  1800  01EC  07B6               	addwf	___ftadd@f2,f
  1801  01ED  3000               	movlw	0
  1802  01EE  1803               	skipnc
  1803  01EF  3001               	movlw	1
  1804  01F0  07B7               	addwf	___ftadd@f2+1,f
  1805  01F1  3000               	movlw	0
  1806  01F2  1803               	skipnc
  1807  01F3  3001               	movlw	1
  1808  01F4  07B8               	addwf	___ftadd@f2+2,f
  1809  01F5                     l2465:	
  1810  01F5  01BD               	clrf	___ftadd@sign
  1811  01F6  0833               	movf	___ftadd@f1,w
  1812  01F7  07B6               	addwf	___ftadd@f2,f
  1813  01F8  0834               	movf	___ftadd@f1+1,w
  1814  01F9  1103               	clrz
  1815  01FA  1803               	skipnc
  1816  01FB  0A34               	incf	___ftadd@f1+1,w
  1817  01FC  1D03               	btfss	3,2
  1818  01FD  07B7               	addwf	___ftadd@f2+1,f
  1819  01FE  0835               	movf	___ftadd@f1+2,w
  1820  01FF  1103               	clrz
  1821  0200  1803               	skipnc
  1822  0201  0A35               	incf	___ftadd@f1+2,w
  1823  0202  1D03               	btfss	3,2
  1824  0203  07B8               	addwf	___ftadd@f2+2,f
  1825  0204  1FB8               	btfss	___ftadd@f2+2,7
  1826  0205  2A18               	goto	l2475
  1827  0206  30FF               	movlw	255
  1828  0207  06B6               	xorwf	___ftadd@f2,f
  1829  0208  30FF               	movlw	255
  1830  0209  06B7               	xorwf	___ftadd@f2+1,f
  1831  020A  30FF               	movlw	255
  1832  020B  06B8               	xorwf	___ftadd@f2+2,f
  1833  020C  3001               	movlw	1
  1834  020D  07B6               	addwf	___ftadd@f2,f
  1835  020E  3000               	movlw	0
  1836  020F  1803               	skipnc
  1837  0210  3001               	movlw	1
  1838  0211  07B7               	addwf	___ftadd@f2+1,f
  1839  0212  3000               	movlw	0
  1840  0213  1803               	skipnc
  1841  0214  3001               	movlw	1
  1842  0215  07B8               	addwf	___ftadd@f2+2,f
  1843  0216  01BD               	clrf	___ftadd@sign
  1844  0217  0ABD               	incf	___ftadd@sign,f
  1845  0218                     l2475:	
  1846  0218  0836               	movf	___ftadd@f2,w
  1847  0219  00A0               	movwf	?___ftpack
  1848  021A  0837               	movf	___ftadd@f2+1,w
  1849  021B  00A1               	movwf	?___ftpack+1
  1850  021C  0838               	movf	___ftadd@f2+2,w
  1851  021D  00A2               	movwf	?___ftpack+2
  1852  021E  083F               	movf	___ftadd@exp1,w
  1853  021F  00B9               	movwf	??___ftadd
  1854  0220  0839               	movf	??___ftadd,w
  1855  0221  00A3               	movwf	?___ftpack+3
  1856  0222  083D               	movf	___ftadd@sign,w
  1857  0223  00BA               	movwf	??___ftadd+1
  1858  0224  083A               	movf	??___ftadd+1,w
  1859  0225  00A4               	movwf	?___ftpack+4
  1860  0226  118A  253F         	fcall	___ftpack
  1861  0228  1283               	bcf	3,5	;RP0=0, select bank0
  1862  0229  1303               	bcf	3,6	;RP1=0, select bank0
  1863  022A  0820               	movf	?___ftpack,w
  1864  022B  00B3               	movwf	?___ftadd
  1865  022C  0821               	movf	?___ftpack+1,w
  1866  022D  00B4               	movwf	?___ftadd+1
  1867  022E  0822               	movf	?___ftpack+2,w
  1868  022F  00B5               	movwf	?___ftadd+2
  1869  0230  0008               	return
  1870  0231                     __end_of___ftadd:	
  1871                           
  1872                           	psect	text7
  1873  06CA                     __ptext7:	
  1874 ;; *************** function ___awtoft *****************
  1875 ;; Defined at:
  1876 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\awtoft.c"
  1877 ;; Parameters:    Size  Location     Type
  1878 ;;  c               2   10[BANK0 ] int 
  1879 ;; Auto vars:     Size  Location     Type
  1880 ;;  sign            1   15[BANK0 ] unsigned char 
  1881 ;; Return value:  Size  Location     Type
  1882 ;;                  3   10[BANK0 ] float 
  1883 ;; Registers used:
  1884 ;;		wreg, status,2, status,0, pclath, cstack
  1885 ;; Tracked objects:
  1886 ;;		On entry : 0/0
  1887 ;;		On exit  : 0/0
  1888 ;;		Unchanged: 0/0
  1889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1890 ;;      Params:         0       3       0       0       0
  1891 ;;      Locals:         0       1       0       0       0
  1892 ;;      Temps:          0       2       0       0       0
  1893 ;;      Totals:         0       6       0       0       0
  1894 ;;Total ram usage:        6 bytes
  1895 ;; Hardware stack levels used:    1
  1896 ;; Hardware stack levels required when called:    2
  1897 ;; This function calls:
  1898 ;;		___ftpack
  1899 ;; This function is called by:
  1900 ;;		_main
  1901 ;; This function uses a non-reentrant model
  1902 ;;
  1903                           
  1904                           
  1905                           ;psect for function ___awtoft
  1906  06CA                     ___awtoft:	
  1907                           
  1908                           ;incstack = 0
  1909                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  1910  06CA  1283               	bcf	3,5	;RP0=0, select bank0
  1911  06CB  1303               	bcf	3,6	;RP1=0, select bank0
  1912  06CC  01AF               	clrf	___awtoft@sign
  1913  06CD  1FAB               	btfss	___awtoft@c+1,7
  1914  06CE  2ED6               	goto	l2403
  1915  06CF  09AA               	comf	___awtoft@c,f
  1916  06D0  09AB               	comf	___awtoft@c+1,f
  1917  06D1  0AAA               	incf	___awtoft@c,f
  1918  06D2  1903               	skipnz
  1919  06D3  0AAB               	incf	___awtoft@c+1,f
  1920  06D4  01AF               	clrf	___awtoft@sign
  1921  06D5  0AAF               	incf	___awtoft@sign,f
  1922  06D6                     l2403:	
  1923  06D6  082A               	movf	___awtoft@c,w
  1924  06D7  00A0               	movwf	?___ftpack
  1925  06D8  082B               	movf	___awtoft@c+1,w
  1926  06D9  00A1               	movwf	?___ftpack+1
  1927  06DA  01A2               	clrf	?___ftpack+2
  1928  06DB  308E               	movlw	142
  1929  06DC  00AD               	movwf	??___awtoft
  1930  06DD  082D               	movf	??___awtoft,w
  1931  06DE  00A3               	movwf	?___ftpack+3
  1932  06DF  082F               	movf	___awtoft@sign,w
  1933  06E0  00AE               	movwf	??___awtoft+1
  1934  06E1  082E               	movf	??___awtoft+1,w
  1935  06E2  00A4               	movwf	?___ftpack+4
  1936  06E3  118A  253F         	fcall	___ftpack
  1937  06E5  1283               	bcf	3,5	;RP0=0, select bank0
  1938  06E6  1303               	bcf	3,6	;RP1=0, select bank0
  1939  06E7  0820               	movf	?___ftpack,w
  1940  06E8  00AA               	movwf	?___awtoft
  1941  06E9  0821               	movf	?___ftpack+1,w
  1942  06EA  00AB               	movwf	?___awtoft+1
  1943  06EB  0822               	movf	?___ftpack+2,w
  1944  06EC  00AC               	movwf	?___awtoft+2
  1945  06ED  0008               	return
  1946  06EE                     __end_of___awtoft:	
  1947                           
  1948                           	psect	text8
  1949  053F                     __ptext8:	
  1950 ;; *************** function ___ftpack *****************
  1951 ;; Defined at:
  1952 ;;		line 63 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\float.c"
  1953 ;; Parameters:    Size  Location     Type
  1954 ;;  arg             3    0[BANK0 ] unsigned um
  1955 ;;  exp             1    3[BANK0 ] unsigned char 
  1956 ;;  sign            1    4[BANK0 ] unsigned char 
  1957 ;; Auto vars:     Size  Location     Type
  1958 ;;		None
  1959 ;; Return value:  Size  Location     Type
  1960 ;;                  3    0[BANK0 ] float 
  1961 ;; Registers used:
  1962 ;;		wreg, status,2, status,0
  1963 ;; Tracked objects:
  1964 ;;		On entry : 0/0
  1965 ;;		On exit  : 0/0
  1966 ;;		Unchanged: 0/0
  1967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1968 ;;      Params:         0       5       0       0       0
  1969 ;;      Locals:         0       0       0       0       0
  1970 ;;      Temps:          3       0       0       0       0
  1971 ;;      Totals:         3       5       0       0       0
  1972 ;;Total ram usage:        8 bytes
  1973 ;; Hardware stack levels used:    1
  1974 ;; Hardware stack levels required when called:    1
  1975 ;; This function calls:
  1976 ;;		Nothing
  1977 ;; This function is called by:
  1978 ;;		___awtoft
  1979 ;;		___ftadd
  1980 ;;		___ftdiv
  1981 ;;		___ftmul
  1982 ;;		___lwtoft
  1983 ;; This function uses a non-reentrant model
  1984 ;;
  1985                           
  1986                           
  1987                           ;psect for function ___ftpack
  1988  053F                     ___ftpack:	
  1989                           
  1990                           ;incstack = 0
  1991                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  1992  053F  1283               	bcf	3,5	;RP0=0, select bank0
  1993  0540  1303               	bcf	3,6	;RP1=0, select bank0
  1994  0541  0823               	movf	___ftpack@exp,w
  1995  0542  1903               	btfsc	3,2
  1996  0543  2D49               	goto	l2325
  1997  0544  0822               	movf	___ftpack@arg+2,w
  1998  0545  0421               	iorwf	___ftpack@arg+1,w
  1999  0546  0420               	iorwf	___ftpack@arg,w
  2000  0547  1D03               	skipz
  2001  0548  2D5C               	goto	l2331
  2002  0549                     l2325:	
  2003  0549  3000               	movlw	0
  2004  054A  00A0               	movwf	?___ftpack
  2005  054B  3000               	movlw	0
  2006  054C  00A1               	movwf	?___ftpack+1
  2007  054D  3000               	movlw	0
  2008  054E  00A2               	movwf	?___ftpack+2
  2009  054F  0008               	return
  2010  0550                     l2329:	
  2011  0550  3001               	movlw	1
  2012  0551  00F4               	movwf	??___ftpack
  2013  0552  0874               	movf	??___ftpack,w
  2014  0553  07A3               	addwf	___ftpack@exp,f
  2015  0554  3001               	movlw	1
  2016  0555                     u2455:	
  2017  0555  1003               	clrc
  2018  0556  0CA2               	rrf	___ftpack@arg+2,f
  2019  0557  0CA1               	rrf	___ftpack@arg+1,f
  2020  0558  0CA0               	rrf	___ftpack@arg,f
  2021  0559  3EFF               	addlw	-1
  2022  055A  1D03               	skipz
  2023  055B  2D55               	goto	u2455
  2024  055C                     l2331:	
  2025  055C  30FE               	movlw	254
  2026  055D  0522               	andwf	___ftpack@arg+2,w
  2027  055E  1903               	btfsc	3,2
  2028  055F  2D77               	goto	l409
  2029  0560  2D50               	goto	l2329
  2030  0561                     l2333:	
  2031  0561  3001               	movlw	1
  2032  0562  00F4               	movwf	??___ftpack
  2033  0563  0874               	movf	??___ftpack,w
  2034  0564  07A3               	addwf	___ftpack@exp,f
  2035  0565  3001               	movlw	1
  2036  0566  07A0               	addwf	___ftpack@arg,f
  2037  0567  3000               	movlw	0
  2038  0568  1803               	skipnc
  2039  0569  3001               	movlw	1
  2040  056A  07A1               	addwf	___ftpack@arg+1,f
  2041  056B  3000               	movlw	0
  2042  056C  1803               	skipnc
  2043  056D  3001               	movlw	1
  2044  056E  07A2               	addwf	___ftpack@arg+2,f
  2045  056F  3001               	movlw	1
  2046  0570                     u2475:	
  2047  0570  1003               	clrc
  2048  0571  0CA2               	rrf	___ftpack@arg+2,f
  2049  0572  0CA1               	rrf	___ftpack@arg+1,f
  2050  0573  0CA0               	rrf	___ftpack@arg,f
  2051  0574  3EFF               	addlw	-1
  2052  0575  1D03               	skipz
  2053  0576  2D70               	goto	u2475
  2054  0577                     l409:	
  2055  0577  30FF               	movlw	255
  2056  0578  0522               	andwf	___ftpack@arg+2,w
  2057  0579  1903               	btfsc	3,2
  2058  057A  2D86               	goto	l2341
  2059  057B  2D61               	goto	l2333
  2060  057C                     l2339:	
  2061  057C  3001               	movlw	1
  2062  057D  02A3               	subwf	___ftpack@exp,f
  2063  057E  3001               	movlw	1
  2064  057F                     u2495:	
  2065  057F  1003               	clrc
  2066  0580  0DA0               	rlf	___ftpack@arg,f
  2067  0581  0DA1               	rlf	___ftpack@arg+1,f
  2068  0582  0DA2               	rlf	___ftpack@arg+2,f
  2069  0583  3EFF               	addlw	-1
  2070  0584  1D03               	skipz
  2071  0585  2D7F               	goto	u2495
  2072  0586                     l2341:	
  2073  0586  1FA1               	btfss	___ftpack@arg+1,7
  2074  0587  2D7C               	goto	l2339
  2075  0588  1823               	btfsc	___ftpack@exp,0
  2076  0589  2D90               	goto	l415
  2077  058A  30FF               	movlw	255
  2078  058B  05A0               	andwf	___ftpack@arg,f
  2079  058C  307F               	movlw	127
  2080  058D  05A1               	andwf	___ftpack@arg+1,f
  2081  058E  30FF               	movlw	255
  2082  058F  05A2               	andwf	___ftpack@arg+2,f
  2083  0590                     l415:	
  2084  0590  1003               	clrc
  2085  0591  0CA3               	rrf	___ftpack@exp,f
  2086  0592  0823               	movf	___ftpack@exp,w
  2087  0593  00F4               	movwf	??___ftpack
  2088  0594  01F5               	clrf	??___ftpack+1
  2089  0595  01F6               	clrf	??___ftpack+2
  2090  0596  3010               	movlw	16
  2091  0597                     u2525:	
  2092  0597  1003               	clrc
  2093  0598  0DF4               	rlf	??___ftpack,f
  2094  0599  0DF5               	rlf	??___ftpack+1,f
  2095  059A  0DF6               	rlf	??___ftpack+2,f
  2096  059B  3EFF               	addlw	-1
  2097  059C  1D03               	skipz
  2098  059D  2D97               	goto	u2525
  2099  059E  0874               	movf	??___ftpack,w
  2100  059F  04A0               	iorwf	___ftpack@arg,f
  2101  05A0  0875               	movf	??___ftpack+1,w
  2102  05A1  04A1               	iorwf	___ftpack@arg+1,f
  2103  05A2  0876               	movf	??___ftpack+2,w
  2104  05A3  04A2               	iorwf	___ftpack@arg+2,f
  2105  05A4  0824               	movf	___ftpack@sign,w
  2106  05A5  1903               	btfsc	3,2
  2107  05A6  0008               	return
  2108  05A7  17A2               	bsf	___ftpack@arg+2,7
  2109  05A8  0008               	return
  2110  05A9                     __end_of___ftpack:	
  2111                           
  2112                           	psect	text9
  2113  0013                     __ptext9:	
  2114 ;; *************** function _fLCD_PrintNumber *****************
  2115 ;; Defined at:
  2116 ;;		line 207 in file "chrono.c"
  2117 ;; Parameters:    Size  Location     Type
  2118 ;;  Number          2   10[BANK0 ] short 
  2119 ;; Auto vars:     Size  Location     Type
  2120 ;;  tmp_int         2   13[BANK0 ] short 
  2121 ;;  tmp_byte        1   15[BANK0 ] unsigned char 
  2122 ;; Return value:  Size  Location     Type
  2123 ;;		None               void
  2124 ;; Registers used:
  2125 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2126 ;; Tracked objects:
  2127 ;;		On entry : 0/0
  2128 ;;		On exit  : 0/0
  2129 ;;		Unchanged: 0/0
  2130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2131 ;;      Params:         0       2       0       0       0
  2132 ;;      Locals:         0       3       0       0       0
  2133 ;;      Temps:          0       1       0       0       0
  2134 ;;      Totals:         0       6       0       0       0
  2135 ;;Total ram usage:        6 bytes
  2136 ;; Hardware stack levels used:    1
  2137 ;; Hardware stack levels required when called:    2
  2138 ;; This function calls:
  2139 ;;		_fLCD_RawSend
  2140 ;;		___awdiv
  2141 ;; This function is called by:
  2142 ;;		_main
  2143 ;; This function uses a non-reentrant model
  2144 ;;
  2145                           
  2146                           
  2147                           ;psect for function _fLCD_PrintNumber
  2148  0013                     _fLCD_PrintNumber:	
  2149                           
  2150                           ;chrono.c: 208: short tmp_int;
  2151                           ;chrono.c: 209: char tmp_byte;
  2152                           ;chrono.c: 210: if(Number < 0){
  2153                           
  2154                           ;incstack = 0
  2155                           ; Regs used in _fLCD_PrintNumber: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2156  0013  1283               	bcf	3,5	;RP0=0, select bank0
  2157  0014  1303               	bcf	3,6	;RP1=0, select bank0
  2158  0015  1FAB               	btfss	fLCD_PrintNumber@Number+1,7
  2159  0016  2826               	goto	l2157
  2160                           
  2161                           ;chrono.c: 211: fLCD_RawSend('-', 0x10);
  2162  0017  3010               	movlw	16
  2163  0018  00AC               	movwf	??_fLCD_PrintNumber
  2164  0019  082C               	movf	??_fLCD_PrintNumber,w
  2165  001A  00F4               	movwf	?_fLCD_RawSend
  2166  001B  302D               	movlw	45
  2167  001C  118A  2670  118A   	fcall	_fLCD_RawSend
  2168                           
  2169                           ;chrono.c: 212: Number = 0 - Number;
  2170  001F  1283               	bcf	3,5	;RP0=0, select bank0
  2171  0020  1303               	bcf	3,6	;RP1=0, select bank0
  2172  0021  09AA               	comf	fLCD_PrintNumber@Number,f
  2173  0022  09AB               	comf	fLCD_PrintNumber@Number+1,f
  2174  0023  0AAA               	incf	fLCD_PrintNumber@Number,f
  2175  0024  1903               	skipnz
  2176  0025  0AAB               	incf	fLCD_PrintNumber@Number+1,f
  2177  0026                     l2157:	
  2178                           
  2179                           ;chrono.c: 213: }
  2180                           ;chrono.c: 215: tmp_int = Number;
  2181  0026  082B               	movf	fLCD_PrintNumber@Number+1,w
  2182  0027  01AE               	clrf	fLCD_PrintNumber@tmp_int+1
  2183  0028  07AE               	addwf	fLCD_PrintNumber@tmp_int+1,f
  2184  0029  082A               	movf	fLCD_PrintNumber@Number,w
  2185  002A  01AD               	clrf	fLCD_PrintNumber@tmp_int
  2186  002B  07AD               	addwf	fLCD_PrintNumber@tmp_int,f
  2187                           
  2188                           ;chrono.c: 216: if(Number >= 10000){
  2189  002C  082B               	movf	fLCD_PrintNumber@Number+1,w
  2190  002D  3A80               	xorlw	128
  2191  002E  00FF               	movwf	127
  2192  002F  30A7               	movlw	167
  2193  0030  027F               	subwf	127,w
  2194  0031  1D03               	skipz
  2195  0032  2835               	goto	u2185
  2196  0033  3010               	movlw	16
  2197  0034  022A               	subwf	fLCD_PrintNumber@Number,w
  2198  0035                     u2185:	
  2199  0035  1C03               	skipc
  2200  0036  2867               	goto	l2167
  2201                           
  2202                           ;chrono.c: 217: tmp_byte = tmp_int/10000;
  2203  0037  3010               	movlw	16
  2204  0038  00F4               	movwf	?___awdiv
  2205  0039  3027               	movlw	39
  2206  003A  00F5               	movwf	?___awdiv+1
  2207  003B  1283               	bcf	3,5	;RP0=0, select bank0
  2208  003C  1303               	bcf	3,6	;RP1=0, select bank0
  2209  003D  082E               	movf	fLCD_PrintNumber@tmp_int+1,w
  2210  003E  01F7               	clrf	?___awdiv+3
  2211  003F  07F7               	addwf	?___awdiv+3,f
  2212  0040  082D               	movf	fLCD_PrintNumber@tmp_int,w
  2213  0041  01F6               	clrf	?___awdiv+2
  2214  0042  07F6               	addwf	?___awdiv+2,f
  2215  0043  118A  2613  118A   	fcall	___awdiv
  2216  0046  0874               	movf	?___awdiv,w
  2217  0047  1283               	bcf	3,5	;RP0=0, select bank0
  2218  0048  1303               	bcf	3,6	;RP1=0, select bank0
  2219  0049  00AC               	movwf	??_fLCD_PrintNumber
  2220  004A  082C               	movf	??_fLCD_PrintNumber,w
  2221  004B  00AF               	movwf	fLCD_PrintNumber@tmp_byte
  2222                           
  2223                           ;chrono.c: 218: fLCD_RawSend('0' + tmp_byte, 0x10);
  2224  004C  3010               	movlw	16
  2225  004D  00AC               	movwf	??_fLCD_PrintNumber
  2226  004E  082C               	movf	??_fLCD_PrintNumber,w
  2227  004F  00F4               	movwf	?_fLCD_RawSend
  2228  0050  082F               	movf	fLCD_PrintNumber@tmp_byte,w
  2229  0051  3E30               	addlw	48
  2230  0052  118A  2670  118A   	fcall	_fLCD_RawSend
  2231  0055                     l2165:	
  2232                           ;chrono.c: 220: while(tmp_byte > 0){
  2233                           
  2234  0055  1283               	bcf	3,5	;RP0=0, select bank0
  2235  0056  1303               	bcf	3,6	;RP1=0, select bank0
  2236  0057  08AF               	movf	fLCD_PrintNumber@tmp_byte,f
  2237  0058  1903               	btfsc	3,2
  2238  0059  2867               	goto	l2167
  2239                           
  2240                           ;chrono.c: 221: tmp_int = tmp_int - 10000;
  2241  005A  1283               	bcf	3,5	;RP0=0, select bank0
  2242  005B  1303               	bcf	3,6	;RP1=0, select bank0
  2243  005C  082D               	movf	fLCD_PrintNumber@tmp_int,w
  2244  005D  3EF0               	addlw	240
  2245  005E  00AD               	movwf	fLCD_PrintNumber@tmp_int
  2246  005F  082E               	movf	fLCD_PrintNumber@tmp_int+1,w
  2247  0060  1803               	skipnc
  2248  0061  3E01               	addlw	1
  2249  0062  3ED8               	addlw	216
  2250  0063  00AE               	movwf	fLCD_PrintNumber@tmp_int+1
  2251                           
  2252                           ;chrono.c: 222: tmp_byte--;
  2253  0064  3001               	movlw	1
  2254  0065  02AF               	subwf	fLCD_PrintNumber@tmp_byte,f
  2255  0066  2855               	goto	l2165
  2256  0067                     l2167:	
  2257                           
  2258                           ;chrono.c: 223: }
  2259                           ;chrono.c: 224: }
  2260                           ;chrono.c: 226: if(Number >= 1000){
  2261  0067  1283               	bcf	3,5	;RP0=0, select bank0
  2262  0068  1303               	bcf	3,6	;RP1=0, select bank0
  2263  0069  082B               	movf	fLCD_PrintNumber@Number+1,w
  2264  006A  3A80               	xorlw	128
  2265  006B  00FF               	movwf	127
  2266  006C  3083               	movlw	131
  2267  006D  027F               	subwf	127,w
  2268  006E  1D03               	skipz
  2269  006F  2872               	goto	u2205
  2270  0070  30E8               	movlw	232
  2271  0071  022A               	subwf	fLCD_PrintNumber@Number,w
  2272  0072                     u2205:	
  2273  0072  1C03               	skipc
  2274  0073  28A4               	goto	l2175
  2275                           
  2276                           ;chrono.c: 227: tmp_byte = tmp_int/1000;
  2277  0074  30E8               	movlw	232
  2278  0075  00F4               	movwf	?___awdiv
  2279  0076  3003               	movlw	3
  2280  0077  00F5               	movwf	?___awdiv+1
  2281  0078  1283               	bcf	3,5	;RP0=0, select bank0
  2282  0079  1303               	bcf	3,6	;RP1=0, select bank0
  2283  007A  082E               	movf	fLCD_PrintNumber@tmp_int+1,w
  2284  007B  01F7               	clrf	?___awdiv+3
  2285  007C  07F7               	addwf	?___awdiv+3,f
  2286  007D  082D               	movf	fLCD_PrintNumber@tmp_int,w
  2287  007E  01F6               	clrf	?___awdiv+2
  2288  007F  07F6               	addwf	?___awdiv+2,f
  2289  0080  118A  2613  118A   	fcall	___awdiv
  2290  0083  0874               	movf	?___awdiv,w
  2291  0084  1283               	bcf	3,5	;RP0=0, select bank0
  2292  0085  1303               	bcf	3,6	;RP1=0, select bank0
  2293  0086  00AC               	movwf	??_fLCD_PrintNumber
  2294  0087  082C               	movf	??_fLCD_PrintNumber,w
  2295  0088  00AF               	movwf	fLCD_PrintNumber@tmp_byte
  2296                           
  2297                           ;chrono.c: 228: fLCD_RawSend('0' + tmp_byte, 0x10);
  2298  0089  3010               	movlw	16
  2299  008A  00AC               	movwf	??_fLCD_PrintNumber
  2300  008B  082C               	movf	??_fLCD_PrintNumber,w
  2301  008C  00F4               	movwf	?_fLCD_RawSend
  2302  008D  082F               	movf	fLCD_PrintNumber@tmp_byte,w
  2303  008E  3E30               	addlw	48
  2304  008F  118A  2670  118A   	fcall	_fLCD_RawSend
  2305  0092                     l2173:	
  2306                           ;chrono.c: 230: while(tmp_byte > 0){
  2307                           
  2308  0092  1283               	bcf	3,5	;RP0=0, select bank0
  2309  0093  1303               	bcf	3,6	;RP1=0, select bank0
  2310  0094  08AF               	movf	fLCD_PrintNumber@tmp_byte,f
  2311  0095  1903               	btfsc	3,2
  2312  0096  28A4               	goto	l2175
  2313                           
  2314                           ;chrono.c: 231: tmp_int = tmp_int - 1000;
  2315  0097  1283               	bcf	3,5	;RP0=0, select bank0
  2316  0098  1303               	bcf	3,6	;RP1=0, select bank0
  2317  0099  082D               	movf	fLCD_PrintNumber@tmp_int,w
  2318  009A  3E18               	addlw	24
  2319  009B  00AD               	movwf	fLCD_PrintNumber@tmp_int
  2320  009C  082E               	movf	fLCD_PrintNumber@tmp_int+1,w
  2321  009D  1803               	skipnc
  2322  009E  3E01               	addlw	1
  2323  009F  3EFC               	addlw	252
  2324  00A0  00AE               	movwf	fLCD_PrintNumber@tmp_int+1
  2325                           
  2326                           ;chrono.c: 232: tmp_byte--;
  2327  00A1  3001               	movlw	1
  2328  00A2  02AF               	subwf	fLCD_PrintNumber@tmp_byte,f
  2329  00A3  2892               	goto	l2173
  2330  00A4                     l2175:	
  2331                           
  2332                           ;chrono.c: 233: }
  2333                           ;chrono.c: 234: }
  2334                           ;chrono.c: 236: if(Number >= 100){
  2335  00A4  1283               	bcf	3,5	;RP0=0, select bank0
  2336  00A5  1303               	bcf	3,6	;RP1=0, select bank0
  2337  00A6  082B               	movf	fLCD_PrintNumber@Number+1,w
  2338  00A7  3A80               	xorlw	128
  2339  00A8  00FF               	movwf	127
  2340  00A9  3080               	movlw	128
  2341  00AA  027F               	subwf	127,w
  2342  00AB  1D03               	skipz
  2343  00AC  28AF               	goto	u2225
  2344  00AD  3064               	movlw	100
  2345  00AE  022A               	subwf	fLCD_PrintNumber@Number,w
  2346  00AF                     u2225:	
  2347  00AF  1C03               	skipc
  2348  00B0  28E1               	goto	l2183
  2349                           
  2350                           ;chrono.c: 237: tmp_byte = tmp_int/100;
  2351  00B1  3064               	movlw	100
  2352  00B2  00F4               	movwf	?___awdiv
  2353  00B3  3000               	movlw	0
  2354  00B4  00F5               	movwf	?___awdiv+1
  2355  00B5  1283               	bcf	3,5	;RP0=0, select bank0
  2356  00B6  1303               	bcf	3,6	;RP1=0, select bank0
  2357  00B7  082E               	movf	fLCD_PrintNumber@tmp_int+1,w
  2358  00B8  01F7               	clrf	?___awdiv+3
  2359  00B9  07F7               	addwf	?___awdiv+3,f
  2360  00BA  082D               	movf	fLCD_PrintNumber@tmp_int,w
  2361  00BB  01F6               	clrf	?___awdiv+2
  2362  00BC  07F6               	addwf	?___awdiv+2,f
  2363  00BD  118A  2613  118A   	fcall	___awdiv
  2364  00C0  0874               	movf	?___awdiv,w
  2365  00C1  1283               	bcf	3,5	;RP0=0, select bank0
  2366  00C2  1303               	bcf	3,6	;RP1=0, select bank0
  2367  00C3  00AC               	movwf	??_fLCD_PrintNumber
  2368  00C4  082C               	movf	??_fLCD_PrintNumber,w
  2369  00C5  00AF               	movwf	fLCD_PrintNumber@tmp_byte
  2370                           
  2371                           ;chrono.c: 238: fLCD_RawSend('0' + tmp_byte, 0x10);
  2372  00C6  3010               	movlw	16
  2373  00C7  00AC               	movwf	??_fLCD_PrintNumber
  2374  00C8  082C               	movf	??_fLCD_PrintNumber,w
  2375  00C9  00F4               	movwf	?_fLCD_RawSend
  2376  00CA  082F               	movf	fLCD_PrintNumber@tmp_byte,w
  2377  00CB  3E30               	addlw	48
  2378  00CC  118A  2670  118A   	fcall	_fLCD_RawSend
  2379  00CF                     l2181:	
  2380                           ;chrono.c: 240: while(tmp_byte > 0){
  2381                           
  2382  00CF  1283               	bcf	3,5	;RP0=0, select bank0
  2383  00D0  1303               	bcf	3,6	;RP1=0, select bank0
  2384  00D1  08AF               	movf	fLCD_PrintNumber@tmp_byte,f
  2385  00D2  1903               	btfsc	3,2
  2386  00D3  28E1               	goto	l2183
  2387                           
  2388                           ;chrono.c: 241: tmp_int = tmp_int - 100;
  2389  00D4  1283               	bcf	3,5	;RP0=0, select bank0
  2390  00D5  1303               	bcf	3,6	;RP1=0, select bank0
  2391  00D6  082D               	movf	fLCD_PrintNumber@tmp_int,w
  2392  00D7  3E9C               	addlw	156
  2393  00D8  00AD               	movwf	fLCD_PrintNumber@tmp_int
  2394  00D9  082E               	movf	fLCD_PrintNumber@tmp_int+1,w
  2395  00DA  1803               	skipnc
  2396  00DB  3E01               	addlw	1
  2397  00DC  3EFF               	addlw	255
  2398  00DD  00AE               	movwf	fLCD_PrintNumber@tmp_int+1
  2399                           
  2400                           ;chrono.c: 242: tmp_byte--;
  2401  00DE  3001               	movlw	1
  2402  00DF  02AF               	subwf	fLCD_PrintNumber@tmp_byte,f
  2403  00E0  28CF               	goto	l2181
  2404  00E1                     l2183:	
  2405                           
  2406                           ;chrono.c: 243: }
  2407                           ;chrono.c: 244: }
  2408                           ;chrono.c: 246: if(Number >= 10){
  2409  00E1  1283               	bcf	3,5	;RP0=0, select bank0
  2410  00E2  1303               	bcf	3,6	;RP1=0, select bank0
  2411  00E3  082B               	movf	fLCD_PrintNumber@Number+1,w
  2412  00E4  3A80               	xorlw	128
  2413  00E5  00FF               	movwf	127
  2414  00E6  3080               	movlw	128
  2415  00E7  027F               	subwf	127,w
  2416  00E8  1D03               	skipz
  2417  00E9  28EC               	goto	u2245
  2418  00EA  300A               	movlw	10
  2419  00EB  022A               	subwf	fLCD_PrintNumber@Number,w
  2420  00EC                     u2245:	
  2421  00EC  1C03               	skipc
  2422  00ED  291E               	goto	l2191
  2423                           
  2424                           ;chrono.c: 247: tmp_byte = tmp_int/10;
  2425  00EE  300A               	movlw	10
  2426  00EF  00F4               	movwf	?___awdiv
  2427  00F0  3000               	movlw	0
  2428  00F1  00F5               	movwf	?___awdiv+1
  2429  00F2  1283               	bcf	3,5	;RP0=0, select bank0
  2430  00F3  1303               	bcf	3,6	;RP1=0, select bank0
  2431  00F4  082E               	movf	fLCD_PrintNumber@tmp_int+1,w
  2432  00F5  01F7               	clrf	?___awdiv+3
  2433  00F6  07F7               	addwf	?___awdiv+3,f
  2434  00F7  082D               	movf	fLCD_PrintNumber@tmp_int,w
  2435  00F8  01F6               	clrf	?___awdiv+2
  2436  00F9  07F6               	addwf	?___awdiv+2,f
  2437  00FA  118A  2613  118A   	fcall	___awdiv
  2438  00FD  0874               	movf	?___awdiv,w
  2439  00FE  1283               	bcf	3,5	;RP0=0, select bank0
  2440  00FF  1303               	bcf	3,6	;RP1=0, select bank0
  2441  0100  00AC               	movwf	??_fLCD_PrintNumber
  2442  0101  082C               	movf	??_fLCD_PrintNumber,w
  2443  0102  00AF               	movwf	fLCD_PrintNumber@tmp_byte
  2444                           
  2445                           ;chrono.c: 248: fLCD_RawSend('0' + tmp_byte, 0x10);
  2446  0103  3010               	movlw	16
  2447  0104  00AC               	movwf	??_fLCD_PrintNumber
  2448  0105  082C               	movf	??_fLCD_PrintNumber,w
  2449  0106  00F4               	movwf	?_fLCD_RawSend
  2450  0107  082F               	movf	fLCD_PrintNumber@tmp_byte,w
  2451  0108  3E30               	addlw	48
  2452  0109  118A  2670  118A   	fcall	_fLCD_RawSend
  2453  010C                     l2189:	
  2454                           ;chrono.c: 250: while(tmp_byte > 0){
  2455                           
  2456  010C  1283               	bcf	3,5	;RP0=0, select bank0
  2457  010D  1303               	bcf	3,6	;RP1=0, select bank0
  2458  010E  08AF               	movf	fLCD_PrintNumber@tmp_byte,f
  2459  010F  1903               	btfsc	3,2
  2460  0110  291E               	goto	l2191
  2461                           
  2462                           ;chrono.c: 251: tmp_int = tmp_int - 10;
  2463  0111  1283               	bcf	3,5	;RP0=0, select bank0
  2464  0112  1303               	bcf	3,6	;RP1=0, select bank0
  2465  0113  082D               	movf	fLCD_PrintNumber@tmp_int,w
  2466  0114  3EF6               	addlw	246
  2467  0115  00AD               	movwf	fLCD_PrintNumber@tmp_int
  2468  0116  082E               	movf	fLCD_PrintNumber@tmp_int+1,w
  2469  0117  1803               	skipnc
  2470  0118  3E01               	addlw	1
  2471  0119  3EFF               	addlw	255
  2472  011A  00AE               	movwf	fLCD_PrintNumber@tmp_int+1
  2473                           
  2474                           ;chrono.c: 252: tmp_byte--;
  2475  011B  3001               	movlw	1
  2476  011C  02AF               	subwf	fLCD_PrintNumber@tmp_byte,f
  2477  011D  290C               	goto	l2189
  2478  011E                     l2191:	
  2479                           
  2480                           ;chrono.c: 253: }
  2481                           ;chrono.c: 254: }
  2482                           ;chrono.c: 255: fLCD_RawSend('0' + tmp_int, 0x10);
  2483  011E  3010               	movlw	16
  2484  011F  1283               	bcf	3,5	;RP0=0, select bank0
  2485  0120  1303               	bcf	3,6	;RP1=0, select bank0
  2486  0121  00AC               	movwf	??_fLCD_PrintNumber
  2487  0122  082C               	movf	??_fLCD_PrintNumber,w
  2488  0123  00F4               	movwf	?_fLCD_RawSend
  2489  0124  082D               	movf	fLCD_PrintNumber@tmp_int,w
  2490  0125  3E30               	addlw	48
  2491  0126  118A  2670         	fcall	_fLCD_RawSend
  2492  0128  0008               	return
  2493  0129                     __end_of_fLCD_PrintNumber:	
  2494                           
  2495                           	psect	text10
  2496  0613                     __ptext10:	
  2497 ;; *************** function ___awdiv *****************
  2498 ;; Defined at:
  2499 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\awdiv.c"
  2500 ;; Parameters:    Size  Location     Type
  2501 ;;  divisor         2    4[COMMON] int 
  2502 ;;  dividend        2    6[COMMON] int 
  2503 ;; Auto vars:     Size  Location     Type
  2504 ;;  quotient        2    3[BANK0 ] int 
  2505 ;;  sign            1    2[BANK0 ] unsigned char 
  2506 ;;  counter         1    1[BANK0 ] unsigned char 
  2507 ;; Return value:  Size  Location     Type
  2508 ;;                  2    4[COMMON] int 
  2509 ;; Registers used:
  2510 ;;		wreg, status,2, status,0
  2511 ;; Tracked objects:
  2512 ;;		On entry : 0/0
  2513 ;;		On exit  : 0/0
  2514 ;;		Unchanged: 0/0
  2515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2516 ;;      Params:         4       0       0       0       0
  2517 ;;      Locals:         0       4       0       0       0
  2518 ;;      Temps:          0       1       0       0       0
  2519 ;;      Totals:         4       5       0       0       0
  2520 ;;Total ram usage:        9 bytes
  2521 ;; Hardware stack levels used:    1
  2522 ;; Hardware stack levels required when called:    1
  2523 ;; This function calls:
  2524 ;;		Nothing
  2525 ;; This function is called by:
  2526 ;;		_fLCD_PrintNumber
  2527 ;; This function uses a non-reentrant model
  2528 ;;
  2529                           
  2530                           
  2531                           ;psect for function ___awdiv
  2532  0613                     ___awdiv:	
  2533                           
  2534                           ;incstack = 0
  2535                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2536  0613  1283               	bcf	3,5	;RP0=0, select bank0
  2537  0614  1303               	bcf	3,6	;RP1=0, select bank0
  2538  0615  01A2               	clrf	___awdiv@sign
  2539  0616  1FF5               	btfss	___awdiv@divisor+1,7
  2540  0617  2E1F               	goto	l2359
  2541  0618  09F4               	comf	___awdiv@divisor,f
  2542  0619  09F5               	comf	___awdiv@divisor+1,f
  2543  061A  0AF4               	incf	___awdiv@divisor,f
  2544  061B  1903               	skipnz
  2545  061C  0AF5               	incf	___awdiv@divisor+1,f
  2546  061D  01A2               	clrf	___awdiv@sign
  2547  061E  0AA2               	incf	___awdiv@sign,f
  2548  061F                     l2359:	
  2549  061F  1FF7               	btfss	___awdiv@dividend+1,7
  2550  0620  2E2A               	goto	l2365
  2551  0621  09F6               	comf	___awdiv@dividend,f
  2552  0622  09F7               	comf	___awdiv@dividend+1,f
  2553  0623  0AF6               	incf	___awdiv@dividend,f
  2554  0624  1903               	skipnz
  2555  0625  0AF7               	incf	___awdiv@dividend+1,f
  2556  0626  3001               	movlw	1
  2557  0627  00A0               	movwf	??___awdiv
  2558  0628  0820               	movf	??___awdiv,w
  2559  0629  06A2               	xorwf	___awdiv@sign,f
  2560  062A                     l2365:	
  2561  062A  01A3               	clrf	___awdiv@quotient
  2562  062B  01A4               	clrf	___awdiv@quotient+1
  2563  062C  0875               	movf	___awdiv@divisor+1,w
  2564  062D  0474               	iorwf	___awdiv@divisor,w
  2565  062E  1903               	skipnz
  2566  062F  2E61               	goto	l2387
  2567  0630  01A1               	clrf	___awdiv@counter
  2568  0631  0AA1               	incf	___awdiv@counter,f
  2569  0632                     l2375:	
  2570  0632  1BF5               	btfsc	___awdiv@divisor+1,7
  2571  0633  2E40               	goto	l2377
  2572  0634  3001               	movlw	1
  2573  0635                     u2575:	
  2574  0635  1003               	clrc
  2575  0636  0DF4               	rlf	___awdiv@divisor,f
  2576  0637  0DF5               	rlf	___awdiv@divisor+1,f
  2577  0638  3EFF               	addlw	-1
  2578  0639  1D03               	skipz
  2579  063A  2E35               	goto	u2575
  2580  063B  3001               	movlw	1
  2581  063C  00A0               	movwf	??___awdiv
  2582  063D  0820               	movf	??___awdiv,w
  2583  063E  07A1               	addwf	___awdiv@counter,f
  2584  063F  2E32               	goto	l2375
  2585  0640                     l2377:	
  2586  0640  3001               	movlw	1
  2587  0641                     u2595:	
  2588  0641  1003               	clrc
  2589  0642  0DA3               	rlf	___awdiv@quotient,f
  2590  0643  0DA4               	rlf	___awdiv@quotient+1,f
  2591  0644  3EFF               	addlw	-1
  2592  0645  1D03               	skipz
  2593  0646  2E41               	goto	u2595
  2594  0647  0875               	movf	___awdiv@divisor+1,w
  2595  0648  0277               	subwf	___awdiv@dividend+1,w
  2596  0649  1D03               	skipz
  2597  064A  2E4D               	goto	u2605
  2598  064B  0874               	movf	___awdiv@divisor,w
  2599  064C  0276               	subwf	___awdiv@dividend,w
  2600  064D                     u2605:	
  2601  064D  1C03               	skipc
  2602  064E  2E56               	goto	l2383
  2603  064F  0874               	movf	___awdiv@divisor,w
  2604  0650  02F6               	subwf	___awdiv@dividend,f
  2605  0651  0875               	movf	___awdiv@divisor+1,w
  2606  0652  1C03               	skipc
  2607  0653  03F7               	decf	___awdiv@dividend+1,f
  2608  0654  02F7               	subwf	___awdiv@dividend+1,f
  2609  0655  1423               	bsf	___awdiv@quotient,0
  2610  0656                     l2383:	
  2611  0656  3001               	movlw	1
  2612  0657                     u2615:	
  2613  0657  1003               	clrc
  2614  0658  0CF5               	rrf	___awdiv@divisor+1,f
  2615  0659  0CF4               	rrf	___awdiv@divisor,f
  2616  065A  3EFF               	addlw	-1
  2617  065B  1D03               	skipz
  2618  065C  2E57               	goto	u2615
  2619  065D  3001               	movlw	1
  2620  065E  02A1               	subwf	___awdiv@counter,f
  2621  065F  1D03               	btfss	3,2
  2622  0660  2E40               	goto	l2377
  2623  0661                     l2387:	
  2624  0661  0822               	movf	___awdiv@sign,w
  2625  0662  1903               	btfsc	3,2
  2626  0663  2E69               	goto	l2391
  2627  0664  09A3               	comf	___awdiv@quotient,f
  2628  0665  09A4               	comf	___awdiv@quotient+1,f
  2629  0666  0AA3               	incf	___awdiv@quotient,f
  2630  0667  1903               	skipnz
  2631  0668  0AA4               	incf	___awdiv@quotient+1,f
  2632  0669                     l2391:	
  2633  0669  0824               	movf	___awdiv@quotient+1,w
  2634  066A  01F5               	clrf	?___awdiv+1
  2635  066B  07F5               	addwf	?___awdiv+1,f
  2636  066C  0823               	movf	___awdiv@quotient,w
  2637  066D  01F4               	clrf	?___awdiv
  2638  066E  07F4               	addwf	?___awdiv,f
  2639  066F  0008               	return
  2640  0670                     __end_of___awdiv:	
  2641                           
  2642                           	psect	text11
  2643  05A9                     __ptext11:	
  2644 ;; *************** function _fLCD_Start *****************
  2645 ;; Defined at:
  2646 ;;		line 89 in file "chrono.c"
  2647 ;; Parameters:    Size  Location     Type
  2648 ;;		None
  2649 ;; Auto vars:     Size  Location     Type
  2650 ;;		None
  2651 ;; Return value:  Size  Location     Type
  2652 ;;		None               void
  2653 ;; Registers used:
  2654 ;;		wreg, status,2, status,0, pclath, cstack
  2655 ;; Tracked objects:
  2656 ;;		On entry : 0/0
  2657 ;;		On exit  : 0/0
  2658 ;;		Unchanged: 0/0
  2659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2660 ;;      Params:         0       0       0       0       0
  2661 ;;      Locals:         0       0       0       0       0
  2662 ;;      Temps:          0       2       0       0       0
  2663 ;;      Totals:         0       2       0       0       0
  2664 ;;Total ram usage:        2 bytes
  2665 ;; Hardware stack levels used:    1
  2666 ;; Hardware stack levels required when called:    3
  2667 ;; This function calls:
  2668 ;;		_fLCD_RawSend
  2669 ;;		_fLCD_Clear
  2670 ;; This function is called by:
  2671 ;;		_main
  2672 ;; This function uses a non-reentrant model
  2673 ;;
  2674                           
  2675                           
  2676                           ;psect for function _fLCD_Start
  2677  05A9                     _fLCD_Start:	
  2678                           
  2679                           ;chrono.c: 90: PORTB = 0;
  2680                           
  2681                           ;incstack = 0
  2682                           ; Regs used in _fLCD_Start: [wreg+status,2+status,0+pclath+cstack]
  2683  05A9  1283               	bcf	3,5	;RP0=0, select bank0
  2684  05AA  1303               	bcf	3,6	;RP1=0, select bank0
  2685  05AB  0186               	clrf	6	;volatile
  2686                           
  2687                           ;chrono.c: 91: PORTA = 0;
  2688  05AC  0185               	clrf	5	;volatile
  2689                           
  2690                           ;chrono.c: 92: _delay((unsigned long)((12)*(19660800/4000.0)));
  2691  05AD  304D               	movlw	77
  2692  05AE  00A5               	movwf	??_fLCD_Start+1
  2693  05AF  3098               	movlw	152
  2694  05B0  00A4               	movwf	??_fLCD_Start
  2695  05B1                     u3137:	
  2696  05B1  0BA4               	decfsz	??_fLCD_Start,f
  2697  05B2  2DB1               	goto	u3137
  2698  05B3  0BA5               	decfsz	??_fLCD_Start+1,f
  2699  05B4  2DB1               	goto	u3137
  2700  05B5  0000               	nop
  2701                           
  2702                           ;chrono.c: 93: fLCD_RawSend(0x33, 0);
  2703  05B6  01F4               	clrf	?_fLCD_RawSend
  2704  05B7  3033               	movlw	51
  2705  05B8  118A  2670  118A   	fcall	_fLCD_RawSend
  2706                           
  2707                           ;chrono.c: 94: _delay((unsigned long)((2)*(19660800/4000.0)));
  2708  05BB  300D               	movlw	13
  2709  05BC  1283               	bcf	3,5	;RP0=0, select bank0
  2710  05BD  1303               	bcf	3,6	;RP1=0, select bank0
  2711  05BE  00A5               	movwf	??_fLCD_Start+1
  2712  05BF  30C3               	movlw	195
  2713  05C0  00A4               	movwf	??_fLCD_Start
  2714  05C1                     u3147:	
  2715  05C1  0BA4               	decfsz	??_fLCD_Start,f
  2716  05C2  2DC1               	goto	u3147
  2717  05C3  0BA5               	decfsz	??_fLCD_Start+1,f
  2718  05C4  2DC1               	goto	u3147
  2719                           
  2720                           ;chrono.c: 95: fLCD_RawSend(0x33, 0);
  2721  05C5  01F4               	clrf	?_fLCD_RawSend
  2722  05C6  3033               	movlw	51
  2723  05C7  118A  2670  118A   	fcall	_fLCD_RawSend
  2724                           
  2725                           ;chrono.c: 96: _delay((unsigned long)((2)*(19660800/4000.0)));
  2726  05CA  300D               	movlw	13
  2727  05CB  1283               	bcf	3,5	;RP0=0, select bank0
  2728  05CC  1303               	bcf	3,6	;RP1=0, select bank0
  2729  05CD  00A5               	movwf	??_fLCD_Start+1
  2730  05CE  30C3               	movlw	195
  2731  05CF  00A4               	movwf	??_fLCD_Start
  2732  05D0                     u3157:	
  2733  05D0  0BA4               	decfsz	??_fLCD_Start,f
  2734  05D1  2DD0               	goto	u3157
  2735  05D2  0BA5               	decfsz	??_fLCD_Start+1,f
  2736  05D3  2DD0               	goto	u3157
  2737                           
  2738                           ;chrono.c: 97: fLCD_RawSend(0x32, 0);
  2739  05D4  01F4               	clrf	?_fLCD_RawSend
  2740  05D5  3032               	movlw	50
  2741  05D6  118A  2670  118A   	fcall	_fLCD_RawSend
  2742                           
  2743                           ;chrono.c: 98: _delay((unsigned long)((2)*(19660800/4000.0)));
  2744  05D9  300D               	movlw	13
  2745  05DA  1283               	bcf	3,5	;RP0=0, select bank0
  2746  05DB  1303               	bcf	3,6	;RP1=0, select bank0
  2747  05DC  00A5               	movwf	??_fLCD_Start+1
  2748  05DD  30C3               	movlw	195
  2749  05DE  00A4               	movwf	??_fLCD_Start
  2750  05DF                     u3167:	
  2751  05DF  0BA4               	decfsz	??_fLCD_Start,f
  2752  05E0  2DDF               	goto	u3167
  2753  05E1  0BA5               	decfsz	??_fLCD_Start+1,f
  2754  05E2  2DDF               	goto	u3167
  2755                           
  2756                           ;chrono.c: 99: fLCD_RawSend(0x2c, 0);
  2757  05E3  01F4               	clrf	?_fLCD_RawSend
  2758  05E4  302C               	movlw	44
  2759  05E5  118A  2670  118A   	fcall	_fLCD_RawSend
  2760                           
  2761                           ;chrono.c: 100: _delay((unsigned long)((2)*(19660800/4000.0)));
  2762  05E8  300D               	movlw	13
  2763  05E9  1283               	bcf	3,5	;RP0=0, select bank0
  2764  05EA  1303               	bcf	3,6	;RP1=0, select bank0
  2765  05EB  00A5               	movwf	??_fLCD_Start+1
  2766  05EC  30C3               	movlw	195
  2767  05ED  00A4               	movwf	??_fLCD_Start
  2768  05EE                     u3177:	
  2769  05EE  0BA4               	decfsz	??_fLCD_Start,f
  2770  05EF  2DEE               	goto	u3177
  2771  05F0  0BA5               	decfsz	??_fLCD_Start+1,f
  2772  05F1  2DEE               	goto	u3177
  2773                           
  2774                           ;chrono.c: 101: fLCD_RawSend(0x06, 0);
  2775  05F2  01F4               	clrf	?_fLCD_RawSend
  2776  05F3  3006               	movlw	6
  2777  05F4  118A  2670  118A   	fcall	_fLCD_RawSend
  2778                           
  2779                           ;chrono.c: 102: _delay((unsigned long)((2)*(19660800/4000.0)));
  2780  05F7  300D               	movlw	13
  2781  05F8  1283               	bcf	3,5	;RP0=0, select bank0
  2782  05F9  1303               	bcf	3,6	;RP1=0, select bank0
  2783  05FA  00A5               	movwf	??_fLCD_Start+1
  2784  05FB  30C3               	movlw	195
  2785  05FC  00A4               	movwf	??_fLCD_Start
  2786  05FD                     u3187:	
  2787  05FD  0BA4               	decfsz	??_fLCD_Start,f
  2788  05FE  2DFD               	goto	u3187
  2789  05FF  0BA5               	decfsz	??_fLCD_Start+1,f
  2790  0600  2DFD               	goto	u3187
  2791                           
  2792                           ;chrono.c: 103: fLCD_RawSend(0x0c, 0);
  2793  0601  01F4               	clrf	?_fLCD_RawSend
  2794  0602  300C               	movlw	12
  2795  0603  118A  2670  118A   	fcall	_fLCD_RawSend
  2796                           
  2797                           ;chrono.c: 104: _delay((unsigned long)((2)*(19660800/4000.0)));
  2798  0606  300D               	movlw	13
  2799  0607  1283               	bcf	3,5	;RP0=0, select bank0
  2800  0608  1303               	bcf	3,6	;RP1=0, select bank0
  2801  0609  00A5               	movwf	??_fLCD_Start+1
  2802  060A  30C3               	movlw	195
  2803  060B  00A4               	movwf	??_fLCD_Start
  2804  060C                     u3197:	
  2805  060C  0BA4               	decfsz	??_fLCD_Start,f
  2806  060D  2E0C               	goto	u3197
  2807  060E  0BA5               	decfsz	??_fLCD_Start+1,f
  2808  060F  2E0C               	goto	u3197
  2809                           
  2810                           ;chrono.c: 106: fLCD_Clear();
  2811  0610  118A  26EE         	fcall	_fLCD_Clear
  2812  0612  0008               	return
  2813  0613                     __end_of_fLCD_Start:	
  2814                           
  2815                           	psect	text12
  2816  06EE                     __ptext12:	
  2817 ;; *************** function _fLCD_Clear *****************
  2818 ;; Defined at:
  2819 ;;		line 153 in file "chrono.c"
  2820 ;; Parameters:    Size  Location     Type
  2821 ;;		None
  2822 ;; Auto vars:     Size  Location     Type
  2823 ;;		None
  2824 ;; Return value:  Size  Location     Type
  2825 ;;		None               void
  2826 ;; Registers used:
  2827 ;;		wreg, status,2, status,0, pclath, cstack
  2828 ;; Tracked objects:
  2829 ;;		On entry : 0/0
  2830 ;;		On exit  : 0/0
  2831 ;;		Unchanged: 0/0
  2832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2833 ;;      Params:         0       0       0       0       0
  2834 ;;      Locals:         0       0       0       0       0
  2835 ;;      Temps:          0       2       0       0       0
  2836 ;;      Totals:         0       2       0       0       0
  2837 ;;Total ram usage:        2 bytes
  2838 ;; Hardware stack levels used:    1
  2839 ;; Hardware stack levels required when called:    2
  2840 ;; This function calls:
  2841 ;;		_fLCD_RawSend
  2842 ;; This function is called by:
  2843 ;;		_main
  2844 ;;		_fLCD_Start
  2845 ;; This function uses a non-reentrant model
  2846 ;;
  2847                           
  2848                           
  2849                           ;psect for function _fLCD_Clear
  2850  06EE                     _fLCD_Clear:	
  2851                           
  2852                           ;chrono.c: 155: fLCD_RawSend(0x01, 0);
  2853                           
  2854                           ;incstack = 0
  2855                           ; Regs used in _fLCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  2856  06EE  01F4               	clrf	?_fLCD_RawSend
  2857  06EF  3001               	movlw	1
  2858  06F0  118A  2670  118A   	fcall	_fLCD_RawSend
  2859                           
  2860                           ;chrono.c: 156: _delay((unsigned long)((2)*(19660800/4000.0)));
  2861  06F3  300D               	movlw	13
  2862  06F4  1283               	bcf	3,5	;RP0=0, select bank0
  2863  06F5  1303               	bcf	3,6	;RP1=0, select bank0
  2864  06F6  00A3               	movwf	??_fLCD_Clear+1
  2865  06F7  30C3               	movlw	195
  2866  06F8  00A2               	movwf	??_fLCD_Clear
  2867  06F9                     u3207:	
  2868  06F9  0BA2               	decfsz	??_fLCD_Clear,f
  2869  06FA  2EF9               	goto	u3207
  2870  06FB  0BA3               	decfsz	??_fLCD_Clear+1,f
  2871  06FC  2EF9               	goto	u3207
  2872                           
  2873                           ;chrono.c: 157: fLCD_RawSend(0x02, 0);
  2874  06FD  01F4               	clrf	?_fLCD_RawSend
  2875  06FE  3002               	movlw	2
  2876  06FF  118A  2670  118A   	fcall	_fLCD_RawSend
  2877                           
  2878                           ;chrono.c: 158: _delay((unsigned long)((2)*(19660800/4000.0)));
  2879  0702  300D               	movlw	13
  2880  0703  1283               	bcf	3,5	;RP0=0, select bank0
  2881  0704  1303               	bcf	3,6	;RP1=0, select bank0
  2882  0705  00A3               	movwf	??_fLCD_Clear+1
  2883  0706  30C3               	movlw	195
  2884  0707  00A2               	movwf	??_fLCD_Clear
  2885  0708                     u3217:	
  2886  0708  0BA2               	decfsz	??_fLCD_Clear,f
  2887  0709  2F08               	goto	u3217
  2888  070A  0BA3               	decfsz	??_fLCD_Clear+1,f
  2889  070B  2F08               	goto	u3217
  2890  070C  0008               	return
  2891  070D                     __end_of_fLCD_Clear:	
  2892                           
  2893                           	psect	text13
  2894  0670                     __ptext13:	
  2895 ;; *************** function _fLCD_RawSend *****************
  2896 ;; Defined at:
  2897 ;;		line 109 in file "chrono.c"
  2898 ;; Parameters:    Size  Location     Type
  2899 ;;  in              1    wreg     unsigned char 
  2900 ;;  mask            1    4[COMMON] unsigned char 
  2901 ;; Auto vars:     Size  Location     Type
  2902 ;;  in              1    0[BANK0 ] unsigned char 
  2903 ;;  pt              1    1[BANK0 ] unsigned char 
  2904 ;; Return value:  Size  Location     Type
  2905 ;;		None               void
  2906 ;; Registers used:
  2907 ;;		wreg, status,2, status,0
  2908 ;; Tracked objects:
  2909 ;;		On entry : 0/0
  2910 ;;		On exit  : 0/0
  2911 ;;		Unchanged: 0/0
  2912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2913 ;;      Params:         1       0       0       0       0
  2914 ;;      Locals:         0       2       0       0       0
  2915 ;;      Temps:          2       0       0       0       0
  2916 ;;      Totals:         3       2       0       0       0
  2917 ;;Total ram usage:        5 bytes
  2918 ;; Hardware stack levels used:    1
  2919 ;; Hardware stack levels required when called:    1
  2920 ;; This function calls:
  2921 ;;		Nothing
  2922 ;; This function is called by:
  2923 ;;		_main
  2924 ;;		_fLCD_Start
  2925 ;;		_fLCD_Clear
  2926 ;;		_fLCD_PrintNumber
  2927 ;;		_fLCD_PrintASCII
  2928 ;;		_fLCD_Command
  2929 ;;		_fLCD_Cursor
  2930 ;;		_fLCD_PrintString
  2931 ;;		_fLCD_ClearLine
  2932 ;; This function uses a non-reentrant model
  2933 ;;
  2934                           
  2935                           
  2936                           ;psect for function _fLCD_RawSend
  2937  0670                     _fLCD_RawSend:	
  2938                           
  2939                           ;incstack = 0
  2940                           ; Regs used in _fLCD_RawSend: [wreg+status,2+status,0]
  2941                           ;fLCD_RawSend@in stored from wreg
  2942  0670  1283               	bcf	3,5	;RP0=0, select bank0
  2943  0671  1303               	bcf	3,6	;RP1=0, select bank0
  2944  0672  00A0               	movwf	fLCD_RawSend@in
  2945                           
  2946                           ;chrono.c: 110: unsigned char pt;
  2947                           ;chrono.c: 111: PORTB = 0;
  2948  0673  0186               	clrf	6	;volatile
  2949                           
  2950                           ;chrono.c: 112: PORTA = 0;
  2951  0674  0185               	clrf	5	;volatile
  2952                           
  2953                           ;chrono.c: 113: pt = ((in >> 4) & 0x0f);
  2954  0675  0820               	movf	fLCD_RawSend@in,w
  2955  0676  00F5               	movwf	??_fLCD_RawSend
  2956  0677  3004               	movlw	4
  2957  0678                     u2265:	
  2958  0678  1003               	clrc
  2959  0679  0CF5               	rrf	??_fLCD_RawSend,f
  2960  067A  3EFF               	addlw	-1
  2961  067B  1D03               	skipz
  2962  067C  2E78               	goto	u2265
  2963  067D  0875               	movf	??_fLCD_RawSend,w
  2964  067E  390F               	andlw	15
  2965  067F  00F6               	movwf	??_fLCD_RawSend+1
  2966  0680  0876               	movf	??_fLCD_RawSend+1,w
  2967  0681  00A1               	movwf	fLCD_RawSend@pt
  2968                           
  2969                           ;chrono.c: 114: if(pt & 0x01)
  2970  0682  1821               	btfsc	fLCD_RawSend@pt,0
  2971                           
  2972                           ;chrono.c: 115: PORTBbits.RB4 = 1;
  2973  0683  1606               	bsf	6,4	;volatile
  2974                           
  2975                           ;chrono.c: 116: if(pt & 0x02)
  2976  0684  18A1               	btfsc	fLCD_RawSend@pt,1
  2977                           
  2978                           ;chrono.c: 117: PORTBbits.RB1 = 1;
  2979  0685  1486               	bsf	6,1	;volatile
  2980                           
  2981                           ;chrono.c: 118: if(pt & 0x04)
  2982  0686  1921               	btfsc	fLCD_RawSend@pt,2
  2983                           
  2984                           ;chrono.c: 119: PORTBbits.RB2 = 1;
  2985  0687  1506               	bsf	6,2	;volatile
  2986                           
  2987                           ;chrono.c: 120: if(pt & 0x08)
  2988  0688  19A1               	btfsc	fLCD_RawSend@pt,3
  2989                           
  2990                           ;chrono.c: 121: PORTBbits.RB3 = 1;
  2991  0689  1586               	bsf	6,3	;volatile
  2992                           
  2993                           ;chrono.c: 122: if(mask)
  2994  068A  0874               	movf	fLCD_RawSend@mask,w
  2995  068B  1D03               	skipz
  2996                           
  2997                           ;chrono.c: 123: PORTAbits.RA1 = 1;
  2998  068C  1485               	bsf	5,1	;volatile
  2999                           
  3000                           ;chrono.c: 124: _delay((unsigned long)((120)*(19660800/4000000.0)));
  3001  068D  30C4               	movlw	196
  3002  068E  00F5               	movwf	??_fLCD_RawSend
  3003  068F                     u3227:	
  3004  068F  0BF5               	decfsz	??_fLCD_RawSend,f
  3005  0690  2E8F               	goto	u3227
  3006                           
  3007                           ;chrono.c: 125: PORTAbits.RA0 = 1;
  3008  0691  1283               	bcf	3,5	;RP0=0, select bank0
  3009  0692  1303               	bcf	3,6	;RP1=0, select bank0
  3010  0693  1405               	bsf	5,0	;volatile
  3011                           
  3012                           ;chrono.c: 126: _delay((unsigned long)((120)*(19660800/4000000.0)));
  3013  0694  30C4               	movlw	196
  3014  0695  00F5               	movwf	??_fLCD_RawSend
  3015  0696                     u3237:	
  3016  0696  0BF5               	decfsz	??_fLCD_RawSend,f
  3017  0697  2E96               	goto	u3237
  3018                           
  3019                           ;chrono.c: 127: PORTAbits.RA0 = 0;
  3020  0698  1283               	bcf	3,5	;RP0=0, select bank0
  3021  0699  1303               	bcf	3,6	;RP1=0, select bank0
  3022  069A  1005               	bcf	5,0	;volatile
  3023                           
  3024                           ;chrono.c: 128: pt = (in & 0x0f);
  3025  069B  0820               	movf	fLCD_RawSend@in,w
  3026  069C  390F               	andlw	15
  3027  069D  00F5               	movwf	??_fLCD_RawSend
  3028  069E  0875               	movf	??_fLCD_RawSend,w
  3029  069F  00A1               	movwf	fLCD_RawSend@pt
  3030                           
  3031                           ;chrono.c: 129: _delay((unsigned long)((120)*(19660800/4000000.0)));
  3032  06A0  30C4               	movlw	196
  3033  06A1  00F5               	movwf	??_fLCD_RawSend
  3034  06A2                     u3247:	
  3035  06A2  0BF5               	decfsz	??_fLCD_RawSend,f
  3036  06A3  2EA2               	goto	u3247
  3037                           
  3038                           ;chrono.c: 130: PORTBbits.RB4 = 0;
  3039  06A4  1283               	bcf	3,5	;RP0=0, select bank0
  3040  06A5  1303               	bcf	3,6	;RP1=0, select bank0
  3041  06A6  1206               	bcf	6,4	;volatile
  3042                           
  3043                           ;chrono.c: 131: PORTBbits.RB1 = 0;
  3044  06A7  1086               	bcf	6,1	;volatile
  3045                           
  3046                           ;chrono.c: 132: PORTBbits.RB2 = 0;
  3047  06A8  1106               	bcf	6,2	;volatile
  3048                           
  3049                           ;chrono.c: 133: PORTBbits.RB3 = 0;
  3050  06A9  1186               	bcf	6,3	;volatile
  3051                           
  3052                           ;chrono.c: 134: PORTAbits.RA1 = 0;
  3053  06AA  1085               	bcf	5,1	;volatile
  3054                           
  3055                           ;chrono.c: 135: PORTAbits.RA0 = 0;
  3056  06AB  1005               	bcf	5,0	;volatile
  3057                           
  3058                           ;chrono.c: 136: if(pt & 0x01)
  3059  06AC  1821               	btfsc	fLCD_RawSend@pt,0
  3060                           
  3061                           ;chrono.c: 137: PORTBbits.RB4 = 1;
  3062  06AD  1606               	bsf	6,4	;volatile
  3063                           
  3064                           ;chrono.c: 138: if(pt & 0x02)
  3065  06AE  18A1               	btfsc	fLCD_RawSend@pt,1
  3066                           
  3067                           ;chrono.c: 139: PORTBbits.RB1 = 1;
  3068  06AF  1486               	bsf	6,1	;volatile
  3069                           
  3070                           ;chrono.c: 140: if(pt & 0x04)
  3071  06B0  1921               	btfsc	fLCD_RawSend@pt,2
  3072                           
  3073                           ;chrono.c: 141: PORTBbits.RB2 = 1;
  3074  06B1  1506               	bsf	6,2	;volatile
  3075                           
  3076                           ;chrono.c: 142: if(pt & 0x08)
  3077  06B2  19A1               	btfsc	fLCD_RawSend@pt,3
  3078                           
  3079                           ;chrono.c: 143: PORTBbits.RB3 = 1;
  3080  06B3  1586               	bsf	6,3	;volatile
  3081                           
  3082                           ;chrono.c: 144: if(mask)
  3083  06B4  0874               	movf	fLCD_RawSend@mask,w
  3084  06B5  1D03               	skipz
  3085                           
  3086                           ;chrono.c: 145: PORTAbits.RA1 = 1;
  3087  06B6  1485               	bsf	5,1	;volatile
  3088                           
  3089                           ;chrono.c: 146: _delay((unsigned long)((120)*(19660800/4000000.0)));
  3090  06B7  30C4               	movlw	196
  3091  06B8  00F5               	movwf	??_fLCD_RawSend
  3092  06B9                     u3257:	
  3093  06B9  0BF5               	decfsz	??_fLCD_RawSend,f
  3094  06BA  2EB9               	goto	u3257
  3095                           
  3096                           ;chrono.c: 147: PORTAbits.RA0 = 1;
  3097  06BB  1283               	bcf	3,5	;RP0=0, select bank0
  3098  06BC  1303               	bcf	3,6	;RP1=0, select bank0
  3099  06BD  1405               	bsf	5,0	;volatile
  3100                           
  3101                           ;chrono.c: 148: _delay((unsigned long)((120)*(19660800/4000000.0)));
  3102  06BE  30C4               	movlw	196
  3103  06BF  00F5               	movwf	??_fLCD_RawSend
  3104  06C0                     u3267:	
  3105  06C0  0BF5               	decfsz	??_fLCD_RawSend,f
  3106  06C1  2EC0               	goto	u3267
  3107                           
  3108                           ;chrono.c: 149: PORTAbits.RA0 = 0;
  3109  06C2  1283               	bcf	3,5	;RP0=0, select bank0
  3110  06C3  1303               	bcf	3,6	;RP1=0, select bank0
  3111  06C4  1005               	bcf	5,0	;volatile
  3112                           
  3113                           ;chrono.c: 150: _delay((unsigned long)((120)*(19660800/4000000.0)));
  3114  06C5  30C4               	movlw	196
  3115  06C6  00F5               	movwf	??_fLCD_RawSend
  3116  06C7                     u3277:	
  3117  06C7  0BF5               	decfsz	??_fLCD_RawSend,f
  3118  06C8  2EC7               	goto	u3277
  3119  06C9  0008               	return
  3120  06CA                     __end_of_fLCD_RawSend:	
  3121                           
  3122                           	psect	text14
  3123  0728                     __ptext14:	
  3124 ;; *************** function _startUp *****************
  3125 ;; Defined at:
  3126 ;;		line 319 in file "chrono.c"
  3127 ;; Parameters:    Size  Location     Type
  3128 ;;		None
  3129 ;; Auto vars:     Size  Location     Type
  3130 ;;		None
  3131 ;; Return value:  Size  Location     Type
  3132 ;;		None               void
  3133 ;; Registers used:
  3134 ;;		wreg, status,2, status,0, pclath, cstack
  3135 ;; Tracked objects:
  3136 ;;		On entry : 0/0
  3137 ;;		On exit  : 0/0
  3138 ;;		Unchanged: 0/0
  3139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3140 ;;      Params:         0       0       0       0       0
  3141 ;;      Locals:         0       0       0       0       0
  3142 ;;      Temps:          0       0       0       0       0
  3143 ;;      Totals:         0       0       0       0       0
  3144 ;;Total ram usage:        0 bytes
  3145 ;; Hardware stack levels used:    1
  3146 ;; Hardware stack levels required when called:    2
  3147 ;; This function calls:
  3148 ;;		_initializeInt
  3149 ;;		_initializeTimer0
  3150 ;;		_initializeTimer1
  3151 ;; This function is called by:
  3152 ;;		_main
  3153 ;; This function uses a non-reentrant model
  3154 ;;
  3155                           
  3156                           
  3157                           ;psect for function _startUp
  3158  0728                     _startUp:	
  3159                           
  3160                           ;chrono.c: 320: OSCCON = 0x70;
  3161                           
  3162                           ;incstack = 0
  3163                           ; Regs used in _startUp: [wreg+status,2+status,0+pclath+cstack]
  3164  0728  3070               	movlw	112
  3165  0729  1683               	bsf	3,5	;RP0=1, select bank1
  3166  072A  1303               	bcf	3,6	;RP1=0, select bank1
  3167  072B  008F               	movwf	15	;volatile
  3168                           
  3169                           ;chrono.c: 322: ANSEL = 0;
  3170  072C  019B               	clrf	27	;volatile
  3171                           
  3172                           ;chrono.c: 323: CMCON = 0x07;
  3173  072D  3007               	movlw	7
  3174  072E  009C               	movwf	28	;volatile
  3175                           
  3176                           ;chrono.c: 325: OPTION_REG = 0xc0;
  3177  072F  30C0               	movlw	192
  3178  0730  0081               	movwf	1	;volatile
  3179                           
  3180                           ;chrono.c: 327: TRISB = 0b00100001;
  3181  0731  3021               	movlw	33
  3182  0732  0086               	movwf	6	;volatile
  3183                           
  3184                           ;chrono.c: 328: TRISA = 0b11000000;
  3185  0733  30C0               	movlw	192
  3186  0734  0085               	movwf	5	;volatile
  3187                           
  3188                           ;chrono.c: 329: PORTB = 0;
  3189  0735  1283               	bcf	3,5	;RP0=0, select bank0
  3190  0736  1303               	bcf	3,6	;RP1=0, select bank0
  3191  0737  0186               	clrf	6	;volatile
  3192                           
  3193                           ;chrono.c: 330: PORTA = 0;
  3194  0738  0185               	clrf	5	;volatile
  3195                           
  3196                           ;chrono.c: 332: initializeInt();
  3197  0739  118A  2759  118A   	fcall	_initializeInt
  3198                           
  3199                           ;chrono.c: 333: initializeTimer0();
  3200  073C  118A  277D  118A   	fcall	_initializeTimer0
  3201                           
  3202                           ;chrono.c: 334: initializeTimer1();
  3203  073F  118A  278E         	fcall	_initializeTimer1
  3204  0741  0008               	return
  3205  0742                     __end_of_startUp:	
  3206                           
  3207                           	psect	text15
  3208  078E                     __ptext15:	
  3209 ;; *************** function _initializeTimer1 *****************
  3210 ;; Defined at:
  3211 ;;		line 389 in file "chrono.c"
  3212 ;; Parameters:    Size  Location     Type
  3213 ;;		None
  3214 ;; Auto vars:     Size  Location     Type
  3215 ;;		None
  3216 ;; Return value:  Size  Location     Type
  3217 ;;		None               void
  3218 ;; Registers used:
  3219 ;;		wreg, status,2, status,0
  3220 ;; Tracked objects:
  3221 ;;		On entry : 0/0
  3222 ;;		On exit  : 0/0
  3223 ;;		Unchanged: 0/0
  3224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3225 ;;      Params:         0       0       0       0       0
  3226 ;;      Locals:         0       0       0       0       0
  3227 ;;      Temps:          0       0       0       0       0
  3228 ;;      Totals:         0       0       0       0       0
  3229 ;;Total ram usage:        0 bytes
  3230 ;; Hardware stack levels used:    1
  3231 ;; Hardware stack levels required when called:    1
  3232 ;; This function calls:
  3233 ;;		Nothing
  3234 ;; This function is called by:
  3235 ;;		_startUp
  3236 ;; This function uses a non-reentrant model
  3237 ;;
  3238                           
  3239                           
  3240                           ;psect for function _initializeTimer1
  3241  078E                     _initializeTimer1:	
  3242                           
  3243                           ;chrono.c: 390: T1CONbits.T1CKPS = 0b11;
  3244                           
  3245                           ;incstack = 0
  3246                           ; Regs used in _initializeTimer1: [wreg+status,2+status,0]
  3247  078E  3030               	movlw	48
  3248  078F  1283               	bcf	3,5	;RP0=0, select bank0
  3249  0790  1303               	bcf	3,6	;RP1=0, select bank0
  3250  0791  0490               	iorwf	16,f	;volatile
  3251                           
  3252                           ;chrono.c: 391: T1CONbits.T1OSCEN = 1;
  3253  0792  1590               	bsf	16,3	;volatile
  3254                           
  3255                           ;chrono.c: 392: T1CONbits.TMR1CS = 0;
  3256  0793  1090               	bcf	16,1	;volatile
  3257                           
  3258                           ;chrono.c: 393: T1CONbits.TMR1ON = 1;
  3259  0794  1410               	bsf	16,0	;volatile
  3260  0795  0008               	return
  3261  0796                     __end_of_initializeTimer1:	
  3262                           
  3263                           	psect	text16
  3264  077D                     __ptext16:	
  3265 ;; *************** function _initializeTimer0 *****************
  3266 ;; Defined at:
  3267 ;;		line 397 in file "chrono.c"
  3268 ;; Parameters:    Size  Location     Type
  3269 ;;		None
  3270 ;; Auto vars:     Size  Location     Type
  3271 ;;		None
  3272 ;; Return value:  Size  Location     Type
  3273 ;;		None               void
  3274 ;; Registers used:
  3275 ;;		wreg, status,2, status,0
  3276 ;; Tracked objects:
  3277 ;;		On entry : 0/0
  3278 ;;		On exit  : 0/0
  3279 ;;		Unchanged: 0/0
  3280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3281 ;;      Params:         0       0       0       0       0
  3282 ;;      Locals:         0       0       0       0       0
  3283 ;;      Temps:          0       0       0       0       0
  3284 ;;      Totals:         0       0       0       0       0
  3285 ;;Total ram usage:        0 bytes
  3286 ;; Hardware stack levels used:    1
  3287 ;; Hardware stack levels required when called:    1
  3288 ;; This function calls:
  3289 ;;		Nothing
  3290 ;; This function is called by:
  3291 ;;		_startUp
  3292 ;; This function uses a non-reentrant model
  3293 ;;
  3294                           
  3295                           
  3296                           ;psect for function _initializeTimer0
  3297  077D                     _initializeTimer0:	
  3298                           
  3299                           ;chrono.c: 398: OPTION_REGbits.T0CS = 0;
  3300                           
  3301                           ;incstack = 0
  3302                           ; Regs used in _initializeTimer0: [wreg+status,2+status,0]
  3303  077D  1683               	bsf	3,5	;RP0=1, select bank1
  3304  077E  1303               	bcf	3,6	;RP1=0, select bank1
  3305  077F  1281               	bcf	1,5	;volatile
  3306                           
  3307                           ;chrono.c: 399: OPTION_REGbits.PSA = 0;
  3308  0780  1181               	bcf	1,3	;volatile
  3309                           
  3310                           ;chrono.c: 400: OPTION_REGbits.PS = 0b100;
  3311  0781  0801               	movf	1,w	;volatile
  3312  0782  39F8               	andlw	-8
  3313  0783  3804               	iorlw	4
  3314  0784  0081               	movwf	1	;volatile
  3315  0785  0008               	return
  3316  0786                     __end_of_initializeTimer0:	
  3317                           
  3318                           	psect	text17
  3319  0759                     __ptext17:	
  3320 ;; *************** function _initializeInt *****************
  3321 ;; Defined at:
  3322 ;;		line 378 in file "chrono.c"
  3323 ;; Parameters:    Size  Location     Type
  3324 ;;		None
  3325 ;; Auto vars:     Size  Location     Type
  3326 ;;		None
  3327 ;; Return value:  Size  Location     Type
  3328 ;;		None               void
  3329 ;; Registers used:
  3330 ;;		None
  3331 ;; Tracked objects:
  3332 ;;		On entry : 0/0
  3333 ;;		On exit  : 0/0
  3334 ;;		Unchanged: 0/0
  3335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3336 ;;      Params:         0       0       0       0       0
  3337 ;;      Locals:         0       0       0       0       0
  3338 ;;      Temps:          0       0       0       0       0
  3339 ;;      Totals:         0       0       0       0       0
  3340 ;;Total ram usage:        0 bytes
  3341 ;; Hardware stack levels used:    1
  3342 ;; Hardware stack levels required when called:    1
  3343 ;; This function calls:
  3344 ;;		Nothing
  3345 ;; This function is called by:
  3346 ;;		_startUp
  3347 ;; This function uses a non-reentrant model
  3348 ;;
  3349                           
  3350                           
  3351                           ;psect for function _initializeInt
  3352  0759                     _initializeInt:	
  3353                           
  3354                           ;chrono.c: 379: TMR1IE = 1;
  3355                           
  3356                           ;incstack = 0
  3357                           ; Regs used in _initializeInt: []
  3358  0759  1683               	bsf	3,5	;RP0=1, select bank1
  3359  075A  1303               	bcf	3,6	;RP1=0, select bank1
  3360  075B  140C               	bsf	12,0	;volatile
  3361                           
  3362                           ;chrono.c: 380: TMR0IE = 0;
  3363  075C  128B               	bcf	11,5	;volatile
  3364                           
  3365                           ;chrono.c: 381: (GIE = 1);
  3366  075D  178B               	bsf	11,7	;volatile
  3367                           
  3368                           ;chrono.c: 382: INTCONbits.PEIE = 1;
  3369  075E  170B               	bsf	11,6	;volatile
  3370                           
  3371                           ;chrono.c: 383: PIR1bits.RCIF = 0;
  3372  075F  1283               	bcf	3,5	;RP0=0, select bank0
  3373  0760  1303               	bcf	3,6	;RP1=0, select bank0
  3374  0761  128C               	bcf	12,5	;volatile
  3375                           
  3376                           ;chrono.c: 384: PIE1bits.RCIE = 0;
  3377  0762  1683               	bsf	3,5	;RP0=1, select bank1
  3378  0763  1303               	bcf	3,6	;RP1=0, select bank1
  3379  0764  128C               	bcf	12,5	;volatile
  3380                           
  3381                           ;chrono.c: 385: RBIE = 1;
  3382  0765  158B               	bsf	11,3	;volatile
  3383                           
  3384                           ;chrono.c: 386: INT0IE = 1;
  3385  0766  160B               	bsf	11,4	;volatile
  3386  0767  0008               	return
  3387  0768                     __end_of_initializeInt:	
  3388                           
  3389                           	psect	text18
  3390  070D                     __ptext18:	
  3391 ;; *************** function _isr *****************
  3392 ;; Defined at:
  3393 ;;		line 341 in file "chrono.c"
  3394 ;; Parameters:    Size  Location     Type
  3395 ;;		None
  3396 ;; Auto vars:     Size  Location     Type
  3397 ;;		None
  3398 ;; Return value:  Size  Location     Type
  3399 ;;		None               void
  3400 ;; Registers used:
  3401 ;;		wreg, status,2, status,0
  3402 ;; Tracked objects:
  3403 ;;		On entry : 0/0
  3404 ;;		On exit  : 0/0
  3405 ;;		Unchanged: 0/0
  3406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3407 ;;      Params:         0       0       0       0       0
  3408 ;;      Locals:         0       0       0       0       0
  3409 ;;      Temps:          4       0       0       0       0
  3410 ;;      Totals:         4       0       0       0       0
  3411 ;;Total ram usage:        4 bytes
  3412 ;; Hardware stack levels used:    1
  3413 ;; This function calls:
  3414 ;;		Nothing
  3415 ;; This function is called by:
  3416 ;;		Interrupt level 1
  3417 ;; This function uses a non-reentrant model
  3418 ;;
  3419                           
  3420                           
  3421                           ;psect for function _isr
  3422  070D                     _isr:	
  3423                           
  3424                           ;chrono.c: 343: if(RBIF){
  3425  070D  1C0B               	btfss	11,0	;volatile
  3426  070E  2F16               	goto	i1l1753
  3427                           
  3428                           ;chrono.c: 344: time = TMR1;
  3429  070F  080F               	movf	15,w	;volatile
  3430  0710  01DD               	clrf	_time+1
  3431  0711  07DD               	addwf	_time+1,f
  3432  0712  080E               	movf	14,w	;volatile
  3433  0713  01DC               	clrf	_time
  3434  0714  07DC               	addwf	_time,f
  3435                           
  3436                           ;chrono.c: 345: RBIF = 0;
  3437  0715  100B               	bcf	11,0	;volatile
  3438  0716                     i1l1753:	
  3439                           
  3440                           ;chrono.c: 358: }
  3441                           ;chrono.c: 359: if(INT0IF){
  3442  0716  1C8B               	btfss	11,1	;volatile
  3443  0717  2F1B               	goto	i1l1759
  3444                           
  3445                           ;chrono.c: 360: TMR1 = 0;
  3446  0718  018E               	clrf	14	;volatile
  3447  0719  018F               	clrf	15	;volatile
  3448                           
  3449                           ;chrono.c: 361: INT0IF = 0;
  3450  071A  108B               	bcf	11,1	;volatile
  3451  071B                     i1l1759:	
  3452                           
  3453                           ;chrono.c: 364: }
  3454                           ;chrono.c: 366: if(TMR1IF){
  3455  071B  180C               	btfsc	12,0	;volatile
  3456                           
  3457                           ;chrono.c: 367: TMR1IF = 0;
  3458  071C  100C               	bcf	12,0	;volatile
  3459  071D  0873               	movf	??_isr+3,w
  3460  071E  00FF               	movwf	127
  3461  071F  0872               	movf	??_isr+2,w
  3462  0720  008A               	movwf	10
  3463  0721  0871               	movf	??_isr+1,w
  3464  0722  0084               	movwf	4
  3465  0723  0E70               	swapf	??_isr^(0+-128),w
  3466  0724  0083               	movwf	3
  3467  0725  0EFE               	swapf	126,f
  3468  0726  0E7E               	swapf	126,w
  3469  0727  0009               	retfie
  3470  0728                     __end_of_isr:	
  3471  007E                     btemp	set	126	;btemp
  3472  007E                     wtemp0	set	126
  3473                           
  3474                           	psect	intentry
  3475  0004                     __pintentry:	
  3476                           ;incstack = 0
  3477                           ; Regs used in _isr: [wreg+status,2+status,0]
  3478                           
  3479  0004                     interrupt_function:	
  3480  007E                     saved_w	set	btemp
  3481  0004  00FE               	movwf	btemp
  3482  0005  0E03               	swapf	3,w
  3483  0006  00F0               	movwf	??_isr
  3484  0007  0804               	movf	4,w
  3485  0008  00F1               	movwf	??_isr+1
  3486  0009  080A               	movf	10,w
  3487  000A  00F2               	movwf	??_isr+2
  3488  000B  1283               	bcf	3,5	;RP0=0, select bank0
  3489  000C  1303               	bcf	3,6	;RP1=0, select bank0
  3490  000D  087F               	movf	btemp+1,w
  3491  000E  00F3               	movwf	??_isr+3
  3492  000F  118A  2F0D         	ljmp	_isr


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         19
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      10
    BANK0            80     51      68
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    ?___ftpack	float  size(1) Largest target is 0

    ?___awdiv	int  size(1) Largest target is 0

    ?___ftadd	float  size(1) Largest target is 3
		 -> tdist(BANK0[3]), 

    ?___ftneg	float  size(1) Largest target is 0

    ?___awtoft	float  size(1) Largest target is 0

    ?___fttol	long  size(1) Largest target is 3
		 -> tdist(BANK0[3]), 

    ?___ftmul	float  size(1) Largest target is 0

    ?___ftdiv	float  size(1) Largest target is 0

    ?___lwtoft	float  size(1) Largest target is 0


Critical Paths under _main in COMMON

    _main->___fttol
    _main->___lwtoft
    ___lwtoft->___ftpack
    ___ftneg->___fttol
    ___ftmul->___fttol
    ___ftdiv->___lwtoft
    ___ftadd->___fttol
    ___awtoft->___fttol
    _fLCD_PrintNumber->___awdiv
    _fLCD_PrintNumber->___fttol
    _fLCD_Start->_fLCD_RawSend
    _fLCD_Clear->_fLCD_RawSend

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___ftmul
    ___lwtoft->___ftpack
    ___ftneg->___awtoft
    ___ftmul->___ftadd
    ___ftdiv->___lwtoft
    ___ftadd->___ftneg
    ___awtoft->___fttol
    _fLCD_PrintNumber->___fttol
    _fLCD_Start->_fLCD_Clear
    _fLCD_Clear->_fLCD_RawSend

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    7275
                                             48 BANK0      3     3      0
                            _startUp
                         _fLCD_Start
                   _fLCD_PrintNumber
                       _fLCD_RawSend
                         _fLCD_Clear
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             4     1      3     343
                                              7 COMMON     1     1      0
                                              5 BANK0      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             14    10      4     252
                                              4 COMMON     4     0      4
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (1) ___ftneg                                              3     0      3      45
                                             16 BANK0      3     0      3
                           ___awtoft (ARG)
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             16    10      6     800
                                             32 BANK0     16    10      6
                           ___ftpack
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             16    10      6     732
                                              8 BANK0     16    10      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftadd                                             13     7      6    1537
                                             19 BANK0     13     7      6
                           ___ftpack
                           ___awtoft (ARG)
                            ___ftneg (ARG)
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             6     3      3     445
                                             10 BANK0      6     3      3
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5     312
                                              4 COMMON     3     3      0
                                              0 BANK0      5     0      5
 ---------------------------------------------------------------------------------
 (1) _fLCD_PrintNumber                                     6     4      2    1609
                                             10 BANK0      6     4      2
                       _fLCD_RawSend
                            ___awdiv
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     445
                                              4 COMMON     4     0      4
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _fLCD_Start                                           2     2      0     756
                                              4 BANK0      2     2      0
                       _fLCD_RawSend
                         _fLCD_Clear
 ---------------------------------------------------------------------------------
 (1) _fLCD_Clear                                           2     2      0     378
                                              2 BANK0      2     2      0
                       _fLCD_RawSend
 ---------------------------------------------------------------------------------
 (2) _fLCD_RawSend                                         5     4      1     378
                                              4 COMMON     3     2      1
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _startUp                                              0     0      0       0
                      _initializeInt
                   _initializeTimer0
                   _initializeTimer1
 ---------------------------------------------------------------------------------
 (2) _initializeTimer1                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initializeTimer0                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initializeInt                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _startUp
     _initializeInt
     _initializeTimer0
     _initializeTimer1
   _fLCD_Start
     _fLCD_RawSend
     _fLCD_Clear
       _fLCD_RawSend
   _fLCD_PrintNumber
     _fLCD_RawSend
     ___awdiv
     ___fttol (ARG)
   _fLCD_RawSend
   _fLCD_Clear
     _fLCD_RawSend
   ___awtoft
     ___ftpack
     ___fttol (ARG)
   ___ftadd
     ___ftpack
     ___awtoft (ARG)
       ___ftpack
       ___fttol (ARG)
     ___ftneg (ARG)
       ___awtoft (ARG)
         ___ftpack
         ___fttol (ARG)
       ___fttol (ARG)
     ___fttol (ARG)
   ___ftdiv
     ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   ___ftmul
     ___ftpack
     ___awtoft (ARG)
       ___ftpack
       ___fttol (ARG)
     ___ftadd (ARG)
       ___ftpack
       ___awtoft (ARG)
         ___ftpack
         ___fttol (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
           ___fttol (ARG)
         ___fttol (ARG)
       ___fttol (ARG)
     ___ftneg (ARG)
       ___awtoft (ARG)
         ___ftpack
         ___fttol (ARG)
       ___fttol (ARG)
     ___fttol (ARG)
   ___ftneg
     ___awtoft (ARG)
       ___ftpack
       ___fttol (ARG)
     ___fttol (ARG)
   ___fttol
   ___lwtoft
     ___ftpack

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       3       2        0.0%
ABS                  0      0      4E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     33      44       5       85.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      51      12        0.0%


Microchip Technology PIC Macro Assembler V1.20 build 52243 
Symbol Table                                                                                   Sat Aug 16 08:47:08 2014

                        _a 0053                          _b 0056                __CFG_CP$OFF 0000  
             ___awdiv@sign 0022                         fsr 0004             ??_fLCD_RawSend 0075  
             ___ftadd@exp1 003F               ___ftadd@exp2 003E               ___ftadd@sign 003D  
                      l415 0590                        l409 0577                        l438 01D1  
                      _GIE 005F               __CFG_CPD$OFF 0000                        _fin 0059  
                      _isr 070D                        fsr0 0004                        indf 0000  
             __CFG_IESO$ON 0000               __CFG_FOSC$HS 0000               __CFG_LVP$OFF 0000  
             ___ftdiv@cntr 0032               ___ftdiv@sign 0037                       l2105 0246  
                     l2027 04CB                       l2061 0536                       l2053 051A  
                     l2045 04FD                       l2055 0525                       l2047 050D  
                     l2057 0528                       l2331 055C                       l2403 06D6  
                     l2181 00CF                       l2173 0092                       l2165 0055  
                     l2157 0026                       l2341 0586                       l2333 0561  
                     l2325 0549                       l2191 011E                       l2183 00E1  
                     l2175 00A4                       l2167 0067                       l2415 0152  
                     l2329 0550                       l2425 0168                       l2513 048C  
                     l2505 046D                       l2339 057C                       l2443 0197  
                     l2419 0159                       l2365 062A                       l2189 010C  
                     l2461 01E3                       l2445 01A3                       l2437 0182  
                     l2533 0356                       l2391 0669                       l2383 0656  
                     l2375 0632                       l2359 061F                       l2455 01C1  
                     l2447 01A8                       l2527 0340                       l2377 0640  
                     l2465 01F5                       l2457 01CD                       l2449 01AC  
                     l2561 03CD                       l2545 0395                       l2387 0661  
                     l2475 0218                       l2491 0428                       l2485 0412  
                     l2557 03BD                       l2549 03A5                       ?_isr 0070  
                     u2115 04FE                       u2205 0072                       u3005 0374  
                     u2225 00AF                       u2145 051C                       u3035 03A6  
                     u2245 00EC                       u3045 03AE                       u2085 04D2  
                     u3117 023C                       u3207 06F9                       u3127 031D  
                     u2265 0678                       u3217 0708                       u3137 05B1  
                     u2185 0035                       u3227 068F                       u3147 05C1  
                     u3237 0696                       u3157 05D0                       u2605 064D  
                     u2525 0597                       u3085 03CE                       u3247 06A2  
                     u3167 05DF                       u2615 0657                       u2455 0555  
                     u3095 03D6                       u3257 06B9                       u3177 05EE  
                     u3267 06C0                       u3187 05FD                       u2475 0570  
                     u3277 06C7                       u3197 060C                       u2805 01AD  
                     u2575 0635                       u2495 057F                       u2745 0183  
                     u2595 0641                       u2835 01C2                       u2915 043A  
                     u2925 044C                       u2775 0198                       u2935 046E  
                     _RBIE 005B                       _RBIF 0058                       u2945 047F  
                     u2955 048D                       u2995 0362                       _TMR1 000E  
             __CFG_WRT$OFF 0000              __CFG_FCMEN$ON 0000                       _main 0231  
             ___ftpack@arg 0020               ___ftpack@exp 0023                       _time 005C  
                     btemp 007E              __CFG_BOREN$ON 0000                       start 0011  
            __CFG_MCLRE$ON 0000               ___ftmul@cntr 004E               ___ftmul@sign 004F  
             ___fttol@exp1 0029               ___fttol@lval 0025                      ??_isr 0070  
                    ?_main 0070            __end_of___awdiv 0670            __end_of___ftadd 0231  
            __CFG_WDTE$OFF 0000            __end_of___ftdiv 04B1                      _CMCON 009C  
          __end_of___ftneg 077D                      _ANSEL 009B            __end_of___ftmul 03FA  
          ___awdiv@divisor 0074            __end_of___fttol 053F            ___awdiv@counter 0021  
                    _PORTA 0005                      _PORTB 0006                      _TRISA 0085  
                    _TRISB 0086             __CFG_CCPMX$RB0 0000   __end_of_fLCD_PrintNumber 0129  
               _fLCD_Clear 06EE              ___awtoft@sign 002F                 _fLCD_Start 05A9  
                    _tflag 0078                      _tdist 0061              ___ftpack@sign 0024  
                    _speed 005E                      pclath 000A            __end_of_startUp 0742  
                    status 0003                      wtemp0 007E            __initialization 0768  
             __end_of_main 0328                     ??_main 0050              ___fttol@sign1 0024  
         ___awdiv@dividend 0076           __end_of___awtoft 06EE           __end_of___ftpack 05A9  
                   _INT0IE 005C                     _INT0IF 0059                     i1l1753 0716  
                   i1l1759 071B           __end_of___lwtoft 0759                     _OSCCON 008F  
                   _TMR0IE 005D                     _TMR1IE 0460                     _TMR1IF 0060  
        ?_initializeTimer0 0070          ?_initializeTimer1 0070       __end_of_fLCD_RawSend 06CA  
       ??_initializeTimer0 0074         ??_initializeTimer1 0074             __CFG_PWRTE$OFF 0000  
                ??___awdiv 0020                  ??___ftadd 0039                  ??___ftdiv 002E  
                ??___ftneg 0078                  ??___ftmul 0046                  ??___fttol 0020  
         ___awdiv@quotient 0023      ___ftmul@f3_as_product 004B                     saved_w 007E  
              ?_fLCD_Clear 0070     __size_of_initializeInt 000F                  ??_startUp 0074  
              ?_fLCD_Start 0070    __end_of__initialization 0770                 ___ftadd@f1 0033  
               ___ftadd@f2 0036                 ___ftdiv@f1 002B                 ___ftdiv@f2 0028  
               ___ftdiv@f3 0033                 ___ftneg@f1 0030                 ___awtoft@c 002A  
               ___ftmul@f1 0040                 ___ftmul@f2 0043                 ___fttol@f1 0074  
           __pcstackCOMMON 0070                 ___lwtoft@c 0025             _OPTION_REGbits 0081  
               __pbssBANK0 0053     fLCD_PrintNumber@Number 002A                 __pmaintext 0231  
            _initializeInt 0759        __size_of_fLCD_Clear 001F                 __pintentry 0004  
      __size_of_fLCD_Start 006A                  ?___awtoft 002A                  ?___ftpack 0020  
                ?___lwtoft 0025   fLCD_PrintNumber@tmp_byte 002F          ?_fLCD_PrintNumber 002A  
    __size_of_fLCD_RawSend 005A         ??_fLCD_PrintNumber 002C             ?_initializeInt 0070  
                  ___awdiv 0613                    ___ftadd 0129                    ___ftdiv 03FA  
                  ___ftneg 0773                    ___ftmul 0328                    ___fttol 04B1  
               ??___awtoft 002D                 ??___ftpack 0074                    __ptext0 0000  
                  __ptext1 0742                    __ptext2 04B1                    __ptext3 0773  
                  __ptext4 0328                    __ptext5 03FA                    __ptext6 0129  
                  __ptext7 06CA                    __ptext8 053F                    __ptext9 0013  
               ??___lwtoft 0077               _fLCD_RawSend 0670                  _T1CONbits 0010  
             __size_of_isr 001B                    _startUp 0728                    clrloop0 0787  
     end_of_initialization 0770  __size_of_initializeTimer0 0009  __size_of_initializeTimer1 0008  
                _PORTAbits 0005                  _PORTBbits 0006               ??_fLCD_Clear 0022  
             ??_fLCD_Start 0024                ___ftdiv@exp 0036            ??_initializeInt 0074  
              ___ftmul@exp 004A         __end_of_fLCD_Clear 070D         __end_of_fLCD_Start 0613  
      start_initialization 0768                __end_of_isr 0728          __size_of___awtoft 0024  
        __size_of___ftpack 006A                __pbssCOMMON 0078          __size_of___lwtoft 0017  
            __pcstackBANK0 0020           fLCD_RawSend@mask 0074  __size_of_fLCD_PrintNumber 0116  
                 ?___awdiv 0074                   ?___ftadd 0033                   ?___ftdiv 0028  
                 ?___ftneg 0030                   ?___ftmul 0040                   ?___fttol 0074  
  fLCD_PrintNumber@tmp_int 002D           _initializeTimer0 077D           _initializeTimer1 078E  
                 ?_startUp 0070          interrupt_function 0004                  clear_ram0 0786  
                 _PIE1bits 008C                   _PIR1bits 000C           __size_of___awdiv 005D  
         __size_of___ftadd 0108           __size_of___ftdiv 00B7           __size_of___ftneg 000A  
         __size_of___ftmul 00D2           __size_of___fttol 008E                   ___awtoft 06CA  
                 ___ftpack 053F                   ___lwtoft 0742                   __ptext10 0613  
                 __ptext11 05A9                   __ptext12 06EE                   __ptext13 0670  
                 __ptext14 0728                   __ptext15 078E                   __ptext16 077D  
                 __ptext17 0759                   __ptext18 070D           __size_of_startUp 001A  
            __size_of_main 00F7      __end_of_initializeInt 0768           _fLCD_PrintNumber 0013  
               _INTCONbits 000B                   intlevel1 0000             fLCD_RawSend@in 0020  
           fLCD_RawSend@pt 0021   __end_of_initializeTimer0 0786   __end_of_initializeTimer1 0796  
            ?_fLCD_RawSend 0074                 _OPTION_REG 0081  
