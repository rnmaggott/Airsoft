

Microchip Technology PIC LITE Macro Assembler V1.20 build 52243 
                                                                                               Mon Aug 18 20:53:59 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 52243
     1                           	processor	16F88
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	intentry,global,class=CODE,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	dabs	1,0x7E,2
    29  0000                     	;# 
    30  0001                     	;# 
    31  0002                     	;# 
    32  0003                     	;# 
    33  0004                     	;# 
    34  0005                     	;# 
    35  0006                     	;# 
    36  000A                     	;# 
    37  000B                     	;# 
    38  000C                     	;# 
    39  000D                     	;# 
    40  000E                     	;# 
    41  000E                     	;# 
    42  000F                     	;# 
    43  0010                     	;# 
    44  0011                     	;# 
    45  0012                     	;# 
    46  0013                     	;# 
    47  0014                     	;# 
    48  0015                     	;# 
    49  0015                     	;# 
    50  0016                     	;# 
    51  0017                     	;# 
    52  0018                     	;# 
    53  0019                     	;# 
    54  001A                     	;# 
    55  001E                     	;# 
    56  001F                     	;# 
    57  0081                     	;# 
    58  0085                     	;# 
    59  0086                     	;# 
    60  008C                     	;# 
    61  008D                     	;# 
    62  008E                     	;# 
    63  008F                     	;# 
    64  0090                     	;# 
    65  0092                     	;# 
    66  0093                     	;# 
    67  0094                     	;# 
    68  0098                     	;# 
    69  0099                     	;# 
    70  009B                     	;# 
    71  009C                     	;# 
    72  009D                     	;# 
    73  009E                     	;# 
    74  009F                     	;# 
    75  0105                     	;# 
    76  010C                     	;# 
    77  010D                     	;# 
    78  010E                     	;# 
    79  010F                     	;# 
    80  018C                     	;# 
    81  018D                     	;# 
    82  000E                     _TMR1	set	14
    83  000B                     _INTCONbits	set	11
    84  000C                     _PIR1bits	set	12
    85  0005                     _PORTA	set	5
    86  0005                     _PORTAbits	set	5
    87  0006                     _PORTB	set	6
    88  0006                     _PORTBbits	set	6
    89  0010                     _T1CONbits	set	16
    90  005F                     _GIE	set	95
    91  005C                     _INT0IE	set	92
    92  0059                     _INT0IF	set	89
    93  005B                     _RBIE	set	91
    94  0058                     _RBIF	set	88
    95  005D                     _TMR0IE	set	93
    96  0060                     _TMR1IF	set	96
    97  009B                     _ANSEL	set	155
    98  009C                     _CMCON	set	156
    99  0081                     _OPTION_REG	set	129
   100  0081                     _OPTION_REGbits	set	129
   101  008F                     _OSCCON	set	143
   102  008C                     _PIE1bits	set	140
   103  0085                     _TRISA	set	133
   104  0086                     _TRISB	set	134
   105  0460                     _TMR1IE	set	1120
   106                           
   107                           	psect	text0
   108  0000                     __ptext0:	
   109                           
   110                           ;psect for function ___ftpack
   111                           ; #config settings
   112  0000                     
   113                           	psect	cinit
   114  069A                     start_initialization:	
   115  069A                     __initialization:	
   116                           
   117                           ; Clear objects allocated to BANK0
   118  069A  1383               	bcf	3,7	;select IRP bank0
   119  069B  303E               	movlw	low __pbssBANK0
   120  069C  0084               	movwf	4
   121  069D  3057               	movlw	low (__pbssBANK0+25)
   122  069E  118A  26AC         	fcall	clear_ram0
   123  06A0                     end_of_initialization:	
   124                           ;End of C runtime variable initialization code
   125                           
   126  06A0                     __end_of__initialization:	
   127  06A0  0183               	clrf	3
   128  06A1  118A  2DF2         	ljmp	_main	;jump to C main() function
   129                           
   130                           	psect	bssBANK0
   131  003E                     __pbssBANK0:	
   132  003E                     _a:	
   133  003E                     	ds	3
   134  0041                     _b:	
   135  0041                     	ds	3
   136  0044                     _count:	
   137  0044                     	ds	3
   138  0047                     _fin:	
   139  0047                     	ds	3
   140  004A                     _speed:	
   141  004A                     	ds	3
   142  004D                     _tdist:	
   143  004D                     	ds	3
   144  0050                     _time:	
   145  0050                     	ds	3
   146  0053                     _fflag:	
   147  0053                     	ds	2
   148  0055                     _tflag:	
   149  0055                     	ds	2
   150                           
   151                           	psect	clrtext
   152  06AC                     clear_ram0:	
   153                           ;	Called with FSR containing the base address, and
   154                           ;	W with the last address+1
   155                           
   156  06AC  0064               	clrwdt	;clear the watchdog before getting into this loop
   157  06AD                     clrloop0:	
   158  06AD  0180               	clrf	0	;clear RAM location pointed to by FSR
   159  06AE  0A84               	incf	4,f	;increment pointer
   160  06AF  0604               	xorwf	4,w	;XOR with final address
   161  06B0  1903               	btfsc	3,2	;have we reached the end yet?
   162  06B1  3400               	retlw	0	;all done for this memory range, return
   163  06B2  0604               	xorwf	4,w	;XOR again to restore value
   164  06B3  2EAD               	goto	clrloop0	;do the next byte
   165                           
   166                           	psect	cstackBANK1
   167  00A0                     __pcstackBANK1:	
   168  00A0                     ??_startUp:	
   169  00A0                     ?_fLCD_RawSend:	
   170                           ; 0 bytes @ 0x0
   171                           
   172  00A0                     ??_initializeInt:	
   173                           ; 0 bytes @ 0x0
   174                           
   175  00A0                     ??_initializeTimer0:	
   176                           ; 0 bytes @ 0x0
   177                           
   178  00A0                     ??_initializeTimer1:	
   179                           ; 0 bytes @ 0x0
   180                           
   181  00A0                     ?___awdiv:	
   182                           ; 0 bytes @ 0x0
   183                           
   184  00A0                     ?___fttol:	
   185                           ; 2 bytes @ 0x0
   186                           
   187  00A0                     fLCD_RawSend@mask:	
   188                           ; 4 bytes @ 0x0
   189                           
   190  00A0                     ___awdiv@divisor:	
   191                           ; 1 bytes @ 0x0
   192                           
   193  00A0                     ___fttol@f1:	
   194                           ; 2 bytes @ 0x0
   195                           
   196                           
   197                           ; 3 bytes @ 0x0
   198  00A0                     	ds	1
   199  00A1                     ??_fLCD_RawSend:	
   200                           
   201                           ; 0 bytes @ 0x1
   202  00A1                     	ds	1
   203  00A2                     ___awdiv@dividend:	
   204                           
   205                           ; 2 bytes @ 0x2
   206  00A2                     	ds	1
   207  00A3                     fLCD_RawSend@in:	
   208                           
   209                           ; 1 bytes @ 0x3
   210  00A3                     	ds	1
   211  00A4                     ??___awdiv:	
   212  00A4                     ??___fttol:	
   213                           ; 0 bytes @ 0x4
   214                           
   215  00A4                     fLCD_RawSend@pt:	
   216                           ; 0 bytes @ 0x4
   217                           
   218                           
   219                           ; 1 bytes @ 0x4
   220  00A4                     	ds	1
   221  00A5                     ??_fLCD_Clear:	
   222  00A5                     ___awdiv@counter:	
   223                           ; 0 bytes @ 0x5
   224                           
   225                           
   226                           ; 1 bytes @ 0x5
   227  00A5                     	ds	1
   228  00A6                     ___awdiv@sign:	
   229                           
   230                           ; 1 bytes @ 0x6
   231  00A6                     	ds	1
   232  00A7                     ??_fLCD_Start:	
   233  00A7                     ___awdiv@quotient:	
   234                           ; 0 bytes @ 0x7
   235                           
   236                           
   237                           ; 2 bytes @ 0x7
   238  00A7                     	ds	1
   239  00A8                     ___fttol@sign1:	
   240                           
   241                           ; 1 bytes @ 0x8
   242  00A8                     	ds	1
   243  00A9                     ___fttol@lval:	
   244                           
   245                           ; 4 bytes @ 0x9
   246  00A9                     	ds	4
   247  00AD                     ___fttol@exp1:	
   248                           
   249                           ; 1 bytes @ 0xD
   250  00AD                     	ds	1
   251  00AE                     ?_fLCD_PrintNumber:	
   252  00AE                     fLCD_PrintNumber@Number:	
   253                           ; 0 bytes @ 0xE
   254                           
   255                           
   256                           ; 2 bytes @ 0xE
   257  00AE                     	ds	2
   258  00B0                     ??_fLCD_PrintNumber:	
   259                           
   260                           ; 0 bytes @ 0x10
   261  00B0                     	ds	1
   262  00B1                     fLCD_PrintNumber@tmp_int:	
   263                           
   264                           ; 2 bytes @ 0x11
   265  00B1                     	ds	2
   266  00B3                     fLCD_PrintNumber@tmp_byte:	
   267                           
   268                           ; 1 bytes @ 0x13
   269  00B3                     	ds	1
   270  00B4                     ??_main:	
   271                           
   272                           ; 0 bytes @ 0x14
   273  00B4                     	ds	3
   274                           
   275                           	psect	cstackCOMMON
   276  0070                     __pcstackCOMMON:	
   277  0070                     ?_startUp:	
   278  0070                     ?_fLCD_Start:	
   279                           ; 0 bytes @ 0x0
   280                           
   281  0070                     ?_fLCD_Clear:	
   282                           ; 0 bytes @ 0x0
   283                           
   284  0070                     ?_initializeInt:	
   285                           ; 0 bytes @ 0x0
   286                           
   287  0070                     ?_initializeTimer0:	
   288                           ; 0 bytes @ 0x0
   289                           
   290  0070                     ?_initializeTimer1:	
   291                           ; 0 bytes @ 0x0
   292                           
   293  0070                     ?_main:	
   294                           ; 0 bytes @ 0x0
   295                           
   296  0070                     ?_isr:	
   297                           ; 0 bytes @ 0x0
   298                           
   299  0070                     ?___ftpack:	
   300                           ; 0 bytes @ 0x0
   301                           
   302  0070                     ___ftpack@arg:	
   303                           ; 3 bytes @ 0x0
   304                           
   305                           
   306                           ; 3 bytes @ 0x0
   307  0070                     	ds	3
   308  0073                     ___ftpack@exp:	
   309                           
   310                           ; 1 bytes @ 0x3
   311  0073                     	ds	1
   312  0074                     ___ftpack@sign:	
   313                           
   314                           ; 1 bytes @ 0x4
   315  0074                     	ds	1
   316  0075                     ??___ftpack:	
   317                           
   318                           ; 0 bytes @ 0x5
   319  0075                     	ds	3
   320  0078                     ?___ftmul:	
   321  0078                     ?___lwtoft:	
   322                           ; 3 bytes @ 0x8
   323                           
   324  0078                     ___lwtoft@c:	
   325                           ; 3 bytes @ 0x8
   326                           
   327  0078                     ___ftmul@f1:	
   328                           ; 2 bytes @ 0x8
   329                           
   330                           
   331                           ; 3 bytes @ 0x8
   332  0078                     	ds	3
   333  007B                     ??___lwtoft:	
   334  007B                     ___ftmul@f2:	
   335                           ; 0 bytes @ 0xB
   336                           
   337                           
   338                           ; 3 bytes @ 0xB
   339  007B                     	ds	3
   340                           
   341                           	psect	cstackBANK0
   342  0020                     __pcstackBANK0:	
   343  0020                     ??___ftmul:	
   344                           
   345                           ; 0 bytes @ 0x0
   346  0020                     	ds	4
   347  0024                     ___ftmul@exp:	
   348                           
   349                           ; 1 bytes @ 0x4
   350  0024                     	ds	1
   351  0025                     ___ftmul@f3_as_product:	
   352                           
   353                           ; 3 bytes @ 0x5
   354  0025                     	ds	3
   355  0028                     ___ftmul@cntr:	
   356                           
   357                           ; 1 bytes @ 0x8
   358  0028                     	ds	1
   359  0029                     ___ftmul@sign:	
   360                           
   361                           ; 1 bytes @ 0x9
   362  0029                     	ds	1
   363  002A                     ?___ftadd:	
   364  002A                     ___ftadd@f1:	
   365                           ; 3 bytes @ 0xA
   366                           
   367                           
   368                           ; 3 bytes @ 0xA
   369  002A                     	ds	3
   370  002D                     ___ftadd@f2:	
   371                           
   372                           ; 3 bytes @ 0xD
   373  002D                     	ds	3
   374  0030                     ??___ftadd:	
   375                           
   376                           ; 0 bytes @ 0x10
   377  0030                     	ds	4
   378  0034                     ___ftadd@sign:	
   379                           
   380                           ; 1 bytes @ 0x14
   381  0034                     	ds	1
   382  0035                     ___ftadd@exp2:	
   383                           
   384                           ; 1 bytes @ 0x15
   385  0035                     	ds	1
   386  0036                     ___ftadd@exp1:	
   387                           
   388                           ; 1 bytes @ 0x16
   389  0036                     	ds	1
   390  0037                     ??_isr:	
   391                           
   392                           ; 0 bytes @ 0x17
   393  0037                     	ds	7
   394                           
   395                           	psect	maintext
   396  05F2                     __pmaintext:	
   397 ;;
   398 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   399 ;;
   400 ;; *************** function _main *****************
   401 ;; Defined at:
   402 ;;		line 69 in file "chrono.c"
   403 ;; Parameters:    Size  Location     Type
   404 ;;		None
   405 ;; Auto vars:     Size  Location     Type
   406 ;;		None
   407 ;; Return value:  Size  Location     Type
   408 ;;		None               void
   409 ;; Registers used:
   410 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
   411 ;; Tracked objects:
   412 ;;		On entry : 17F/0
   413 ;;		On exit  : 0/0
   414 ;;		Unchanged: 0/0
   415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   416 ;;      Params:         0       0       0       0       0
   417 ;;      Locals:         0       0       0       0       0
   418 ;;      Temps:          0       0       3       0       0
   419 ;;      Totals:         0       0       3       0       0
   420 ;;Total ram usage:        3 bytes
   421 ;; Hardware stack levels required when called:    6
   422 ;; This function calls:
   423 ;;		_startUp
   424 ;;		_fLCD_Start
   425 ;;		_fLCD_PrintNumber
   426 ;;		_fLCD_Clear
   427 ;;		___fttol
   428 ;; This function is called by:
   429 ;;		Startup code after reset
   430 ;; This function uses a non-reentrant model
   431 ;;
   432                           
   433                           
   434                           ;psect for function _main
   435  05F2                     _main:	
   436                           
   437                           ;chrono.c: 71: startUp();
   438                           
   439                           ;incstack = 0
   440                           ; Regs used in _main: [allreg]
   441  05F2  118A  265E  118A   	fcall	_startUp
   442                           
   443                           ;chrono.c: 72: _delay((unsigned long)((120)*(8000000/4000.0)));
   444  05F5  3002               	movlw	2
   445  05F6  1683               	bsf	3,5	;RP0=1, select bank1
   446  05F7  1303               	bcf	3,6	;RP1=0, select bank1
   447  05F8  00B6               	movwf	(??_main^(0+128)+2)
   448  05F9  3038               	movlw	56
   449  05FA  00B5               	movwf	(??_main^(0+128)+1)
   450  05FB  30AD               	movlw	173
   451  05FC  00B4               	movwf	??_main^(0+128)
   452  05FD                     u2477:	
   453  05FD  0BB4               	decfsz	??_main^(0+128),f
   454  05FE  2DFD               	goto	u2477
   455  05FF  0BB5               	decfsz	(??_main^(0+128)+1),f
   456  0600  2DFD               	goto	u2477
   457  0601  0BB6               	decfsz	(??_main^(0+128)+2),f
   458  0602  2DFD               	goto	u2477
   459                           
   460                           ;chrono.c: 73: fLCD_Start();
   461  0603  118A  24AF  118A   	fcall	_fLCD_Start
   462  0606                     l1862:	
   463                           ;chrono.c: 75: for(;;){
   464                           
   465                           
   466                           ;chrono.c: 83: fLCD_PrintNumber(time);
   467  0606  1283               	bcf	3,5	;RP0=0, select bank0
   468  0607  1303               	bcf	3,6	;RP1=0, select bank0
   469  0608  0850               	movf	_time,w
   470  0609  1683               	bsf	3,5	;RP0=1, select bank1
   471  060A  1303               	bcf	3,6	;RP1=0, select bank1
   472  060B  00A0               	movwf	?___fttol^(0+128)
   473  060C  1283               	bcf	3,5	;RP0=0, select bank0
   474  060D  1303               	bcf	3,6	;RP1=0, select bank0
   475  060E  0851               	movf	_time+1,w
   476  060F  1683               	bsf	3,5	;RP0=1, select bank1
   477  0610  1303               	bcf	3,6	;RP1=0, select bank1
   478  0611  00A1               	movwf	(?___fttol+1)^(0+128)
   479  0612  1283               	bcf	3,5	;RP0=0, select bank0
   480  0613  1303               	bcf	3,6	;RP1=0, select bank0
   481  0614  0852               	movf	_time+2,w
   482  0615  1683               	bsf	3,5	;RP0=1, select bank1
   483  0616  1303               	bcf	3,6	;RP1=0, select bank1
   484  0617  00A2               	movwf	(?___fttol+2)^(0+128)
   485  0618  118A  23A1  118A   	fcall	___fttol
   486  061B  1683               	bsf	3,5	;RP0=1, select bank1
   487  061C  1303               	bcf	3,6	;RP1=0, select bank1
   488  061D  0821               	movf	(?___fttol^(0+128)+1),w
   489  061E  01AF               	clrf	(?_fLCD_PrintNumber+1)^(0+128)
   490  061F  07AF               	addwf	(?_fLCD_PrintNumber+1)^(0+128),f
   491  0620  0820               	movf	?___fttol^(0+128),w
   492  0621  01AE               	clrf	?_fLCD_PrintNumber^(0+128)
   493  0622  07AE               	addwf	?_fLCD_PrintNumber^(0+128),f
   494  0623  118A  2013  118A   	fcall	_fLCD_PrintNumber
   495                           
   496                           ;chrono.c: 84: _delay((unsigned long)((100)*(8000000/4000.0)));
   497  0626  3002               	movlw	2
   498  0627  1683               	bsf	3,5	;RP0=1, select bank1
   499  0628  1303               	bcf	3,6	;RP1=0, select bank1
   500  0629  00B6               	movwf	(??_main^(0+128)+2)
   501  062A  3004               	movlw	4
   502  062B  00B5               	movwf	(??_main^(0+128)+1)
   503  062C  30BA               	movlw	186
   504  062D  00B4               	movwf	??_main^(0+128)
   505  062E                     u2487:	
   506  062E  0BB4               	decfsz	??_main^(0+128),f
   507  062F  2E2E               	goto	u2487
   508  0630  0BB5               	decfsz	(??_main^(0+128)+1),f
   509  0631  2E2E               	goto	u2487
   510  0632  0BB6               	decfsz	(??_main^(0+128)+2),f
   511  0633  2E2E               	goto	u2487
   512  0634  0000               	nop
   513                           
   514                           ;chrono.c: 86: fLCD_Clear();
   515  0635  118A  2639  118A   	fcall	_fLCD_Clear
   516                           
   517                           ;chrono.c: 87: }
   518  0638  2E06               	goto	l1862
   519  0639                     __end_of_main:	
   520                           
   521                           	psect	text1
   522  03A1                     __ptext1:	
   523 ;; *************** function ___fttol *****************
   524 ;; Defined at:
   525 ;;		line 45 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\fttol.c"
   526 ;; Parameters:    Size  Location     Type
   527 ;;  f1              3    0[BANK1 ] float 
   528 ;; Auto vars:     Size  Location     Type
   529 ;;  lval            4    9[BANK1 ] unsigned long 
   530 ;;  exp1            1   13[BANK1 ] unsigned char 
   531 ;;  sign1           1    8[BANK1 ] unsigned char 
   532 ;; Return value:  Size  Location     Type
   533 ;;                  4    0[BANK1 ] long 
   534 ;; Registers used:
   535 ;;		wreg, status,2, status,0
   536 ;; Tracked objects:
   537 ;;		On entry : 0/0
   538 ;;		On exit  : 0/0
   539 ;;		Unchanged: 0/0
   540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   541 ;;      Params:         0       0       4       0       0
   542 ;;      Locals:         0       0       6       0       0
   543 ;;      Temps:          0       0       4       0       0
   544 ;;      Totals:         0       0      14       0       0
   545 ;;Total ram usage:       14 bytes
   546 ;; Hardware stack levels used:    1
   547 ;; Hardware stack levels required when called:    3
   548 ;; This function calls:
   549 ;;		Nothing
   550 ;; This function is called by:
   551 ;;		_main
   552 ;; This function uses a non-reentrant model
   553 ;;
   554                           
   555                           
   556                           ;psect for function ___fttol
   557  03A1                     ___fttol:	
   558                           
   559                           ;incstack = 0
   560                           ; Regs used in ___fttol: [wreg+status,2+status,0]
   561  03A1  1683               	bsf	3,5	;RP0=1, select bank1
   562  03A2  1303               	bcf	3,6	;RP1=0, select bank1
   563  03A3  0820               	movf	___fttol@f1^(0+128),w
   564  03A4  00A4               	movwf	??___fttol^(0+128)
   565  03A5  0821               	movf	(___fttol@f1+1)^(0+128),w
   566  03A6  00A5               	movwf	(??___fttol^(0+128)+1)
   567  03A7  0822               	movf	(___fttol@f1+2)^(0+128),w
   568  03A8  00A6               	movwf	(??___fttol^(0+128)+2)
   569  03A9  1003               	clrc
   570  03AA  0D25               	rlf	(??___fttol^(0+128)+1),w
   571  03AB  0D26               	rlf	(??___fttol^(0+128)+2),w
   572  03AC  00A7               	movwf	(??___fttol+3)^(0+128)
   573  03AD  0827               	movf	(??___fttol+3)^(0+128),w
   574  03AE  00AD               	movwf	___fttol@exp1^(0+128)
   575  03AF  08AD               	movf	___fttol@exp1^(0+128),f
   576  03B0  1D03               	skipz
   577  03B1  2BBB               	goto	l2154
   578  03B2  3000               	movlw	0
   579  03B3  00A3               	movwf	(?___fttol+3)^(0+128)
   580  03B4  3000               	movlw	0
   581  03B5  00A2               	movwf	(?___fttol+2)^(0+128)
   582  03B6  3000               	movlw	0
   583  03B7  00A1               	movwf	(?___fttol+1)^(0+128)
   584  03B8  3000               	movlw	0
   585  03B9  00A0               	movwf	?___fttol^(0+128)
   586  03BA  0008               	return
   587  03BB                     l2154:	
   588  03BB  0820               	movf	___fttol@f1^(0+128),w
   589  03BC  00A4               	movwf	??___fttol^(0+128)
   590  03BD  0821               	movf	(___fttol@f1+1)^(0+128),w
   591  03BE  00A5               	movwf	(??___fttol^(0+128)+1)
   592  03BF  0822               	movf	(___fttol@f1+2)^(0+128),w
   593  03C0  00A6               	movwf	(??___fttol^(0+128)+2)
   594  03C1  3017               	movlw	23
   595  03C2                     u2385:	
   596  03C2  1003               	clrc
   597  03C3  0CA6               	rrf	(??___fttol^(0+128)+2),f
   598  03C4  0CA5               	rrf	(??___fttol^(0+128)+1),f
   599  03C5  0CA4               	rrf	??___fttol^(0+128),f
   600  03C6  3EFF               	addlw	-1
   601  03C7  1D03               	skipz
   602  03C8  2BC2               	goto	u2385
   603  03C9  0824               	movf	??___fttol^(0+128),w
   604  03CA  00A7               	movwf	(??___fttol+3)^(0+128)
   605  03CB  0827               	movf	(??___fttol+3)^(0+128),w
   606  03CC  00A8               	movwf	___fttol@sign1^(0+128)
   607  03CD  17A1               	bsf	(___fttol@f1^(0+128)+1),7
   608  03CE  30FF               	movlw	255
   609  03CF  05A0               	andwf	___fttol@f1^(0+128),f
   610  03D0  30FF               	movlw	255
   611  03D1  05A1               	andwf	(___fttol@f1+1)^(0+128),f
   612  03D2  3000               	movlw	0
   613  03D3  05A2               	andwf	(___fttol@f1+2)^(0+128),f
   614  03D4  0820               	movf	___fttol@f1^(0+128),w
   615  03D5  00A9               	movwf	___fttol@lval^(0+128)
   616  03D6  0821               	movf	(___fttol@f1+1)^(0+128),w
   617  03D7  00AA               	movwf	(___fttol@lval^(0+128)+1)
   618  03D8  0822               	movf	(___fttol@f1+2)^(0+128),w
   619  03D9  00AB               	movwf	(___fttol@lval^(0+128)+2)
   620  03DA  01AC               	clrf	(___fttol@lval^(0+128)+3)
   621  03DB  308E               	movlw	142
   622  03DC  02AD               	subwf	___fttol@exp1^(0+128),f
   623  03DD  1FAD               	btfss	___fttol@exp1^(0+128),7
   624  03DE  2BFD               	goto	l2174
   625  03DF  082D               	movf	___fttol@exp1^(0+128),w
   626  03E0  3A80               	xorlw	128
   627  03E1  3E8F               	addlw	143
   628  03E2  1803               	skipnc
   629  03E3  2BED               	goto	l2172
   630  03E4  3000               	movlw	0
   631  03E5  00A3               	movwf	(?___fttol+3)^(0+128)
   632  03E6  3000               	movlw	0
   633  03E7  00A2               	movwf	(?___fttol+2)^(0+128)
   634  03E8  3000               	movlw	0
   635  03E9  00A1               	movwf	(?___fttol+1)^(0+128)
   636  03EA  3000               	movlw	0
   637  03EB  00A0               	movwf	?___fttol^(0+128)
   638  03EC  0008               	return
   639  03ED                     l2172:	
   640  03ED  3001               	movlw	1
   641  03EE                     u2415:	
   642  03EE  1003               	clrc
   643  03EF  0CAC               	rrf	(___fttol@lval+3)^(0+128),f
   644  03F0  0CAB               	rrf	(___fttol@lval+2)^(0+128),f
   645  03F1  0CAA               	rrf	(___fttol@lval+1)^(0+128),f
   646  03F2  0CA9               	rrf	___fttol@lval^(0+128),f
   647  03F3  3EFF               	addlw	-1
   648  03F4  1D03               	skipz
   649  03F5  2BEE               	goto	u2415
   650  03F6  3001               	movlw	1
   651  03F7  00A4               	movwf	??___fttol^(0+128)
   652  03F8  0824               	movf	??___fttol^(0+128),w
   653  03F9  07AD               	addwf	___fttol@exp1^(0+128),f
   654  03FA  1903               	btfsc	3,2
   655  03FB  2C18               	goto	l2184
   656  03FC  2BED               	goto	l2172
   657  03FD                     l2174:	
   658  03FD  3018               	movlw	24
   659  03FE  022D               	subwf	___fttol@exp1^(0+128),w
   660  03FF  1C03               	skipc
   661  0400  2C15               	goto	l2182
   662  0401  3000               	movlw	0
   663  0402  00A3               	movwf	(?___fttol+3)^(0+128)
   664  0403  3000               	movlw	0
   665  0404  00A2               	movwf	(?___fttol+2)^(0+128)
   666  0405  3000               	movlw	0
   667  0406  00A1               	movwf	(?___fttol+1)^(0+128)
   668  0407  3000               	movlw	0
   669  0408  00A0               	movwf	?___fttol^(0+128)
   670  0409  0008               	return
   671  040A                     l2180:	
   672  040A  3001               	movlw	1
   673  040B  00A4               	movwf	??___fttol^(0+128)
   674  040C                     u2445:	
   675  040C  1003               	clrc
   676  040D  0DA9               	rlf	___fttol@lval^(0+128),f
   677  040E  0DAA               	rlf	(___fttol@lval+1)^(0+128),f
   678  040F  0DAB               	rlf	(___fttol@lval+2)^(0+128),f
   679  0410  0DAC               	rlf	(___fttol@lval+3)^(0+128),f
   680  0411  0BA4               	decfsz	??___fttol^(0+128),f
   681  0412  2C0C               	goto	u2445
   682  0413  3001               	movlw	1
   683  0414  02AD               	subwf	___fttol@exp1^(0+128),f
   684  0415                     l2182:	
   685  0415  08AD               	movf	___fttol@exp1^(0+128),f
   686  0416  1D03               	skipz
   687  0417  2C0A               	goto	l2180
   688  0418                     l2184:	
   689  0418  0828               	movf	___fttol@sign1^(0+128),w
   690  0419  1903               	btfsc	3,2
   691  041A  2C26               	goto	l2188
   692  041B  09A9               	comf	___fttol@lval^(0+128),f
   693  041C  09AA               	comf	(___fttol@lval+1)^(0+128),f
   694  041D  09AB               	comf	(___fttol@lval+2)^(0+128),f
   695  041E  09AC               	comf	(___fttol@lval+3)^(0+128),f
   696  041F  0AA9               	incf	___fttol@lval^(0+128),f
   697  0420  1903               	skipnz
   698  0421  0AAA               	incf	(___fttol@lval+1)^(0+128),f
   699  0422  1903               	skipnz
   700  0423  0AAB               	incf	(___fttol@lval+2)^(0+128),f
   701  0424  1903               	skipnz
   702  0425  0AAC               	incf	(___fttol@lval+3)^(0+128),f
   703  0426                     l2188:	
   704  0426  082C               	movf	(___fttol@lval+3)^(0+128),w
   705  0427  00A3               	movwf	(?___fttol+3)^(0+128)
   706  0428  082B               	movf	(___fttol@lval+2)^(0+128),w
   707  0429  00A2               	movwf	(?___fttol+2)^(0+128)
   708  042A  082A               	movf	(___fttol@lval+1)^(0+128),w
   709  042B  00A1               	movwf	(?___fttol+1)^(0+128)
   710  042C  0829               	movf	___fttol@lval^(0+128),w
   711  042D  00A0               	movwf	?___fttol^(0+128)
   712  042E  0008               	return
   713  042F                     __end_of___fttol:	
   714                           
   715                           	psect	text2
   716  0013                     __ptext2:	
   717 ;; *************** function _fLCD_PrintNumber *****************
   718 ;; Defined at:
   719 ;;		line 210 in file "chrono.c"
   720 ;; Parameters:    Size  Location     Type
   721 ;;  Number          2   14[BANK1 ] short 
   722 ;; Auto vars:     Size  Location     Type
   723 ;;  tmp_int         2   17[BANK1 ] short 
   724 ;;  tmp_byte        1   19[BANK1 ] unsigned char 
   725 ;; Return value:  Size  Location     Type
   726 ;;		None               void
   727 ;; Registers used:
   728 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   729 ;; Tracked objects:
   730 ;;		On entry : 0/0
   731 ;;		On exit  : 0/0
   732 ;;		Unchanged: 0/0
   733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   734 ;;      Params:         0       0       2       0       0
   735 ;;      Locals:         0       0       3       0       0
   736 ;;      Temps:          0       0       1       0       0
   737 ;;      Totals:         0       0       6       0       0
   738 ;;Total ram usage:        6 bytes
   739 ;; Hardware stack levels used:    1
   740 ;; Hardware stack levels required when called:    4
   741 ;; This function calls:
   742 ;;		_fLCD_RawSend
   743 ;;		___awdiv
   744 ;; This function is called by:
   745 ;;		_main
   746 ;; This function uses a non-reentrant model
   747 ;;
   748                           
   749                           
   750                           ;psect for function _fLCD_PrintNumber
   751  0013                     _fLCD_PrintNumber:	
   752                           
   753                           ;chrono.c: 211: short tmp_int;
   754                           ;chrono.c: 212: char tmp_byte;
   755                           ;chrono.c: 213: if(Number < 0){
   756                           
   757                           ;incstack = 0
   758                           ; Regs used in _fLCD_PrintNumber: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   759  0013  1683               	bsf	3,5	;RP0=1, select bank1
   760  0014  1303               	bcf	3,6	;RP1=0, select bank1
   761  0015  1FAF               	btfss	(fLCD_PrintNumber@Number+1)^(0+128),7
   762  0016  2826               	goto	l1926
   763                           
   764                           ;chrono.c: 214: fLCD_RawSend('-', 0x10);
   765  0017  3010               	movlw	16
   766  0018  00B0               	movwf	??_fLCD_PrintNumber^(0+128)
   767  0019  0830               	movf	??_fLCD_PrintNumber^(0+128),w
   768  001A  00A0               	movwf	?_fLCD_RawSend^(0+128)
   769  001B  302D               	movlw	45
   770  001C  118A  2301  118A   	fcall	_fLCD_RawSend
   771                           
   772                           ;chrono.c: 215: Number = 0 - Number;
   773  001F  1683               	bsf	3,5	;RP0=1, select bank1
   774  0020  1303               	bcf	3,6	;RP1=0, select bank1
   775  0021  09AE               	comf	fLCD_PrintNumber@Number^(0+128),f
   776  0022  09AF               	comf	(fLCD_PrintNumber@Number+1)^(0+128),f
   777  0023  0AAE               	incf	fLCD_PrintNumber@Number^(0+128),f
   778  0024  1903               	skipnz
   779  0025  0AAF               	incf	(fLCD_PrintNumber@Number+1)^(0+128),f
   780  0026                     l1926:	
   781                           
   782                           ;chrono.c: 216: }
   783                           ;chrono.c: 218: tmp_int = Number;
   784  0026  082F               	movf	(fLCD_PrintNumber@Number+1)^(0+128),w
   785  0027  01B2               	clrf	(fLCD_PrintNumber@tmp_int+1)^(0+128)
   786  0028  07B2               	addwf	(fLCD_PrintNumber@tmp_int+1)^(0+128),f
   787  0029  082E               	movf	fLCD_PrintNumber@Number^(0+128),w
   788  002A  01B1               	clrf	fLCD_PrintNumber@tmp_int^(0+128)
   789  002B  07B1               	addwf	fLCD_PrintNumber@tmp_int^(0+128),f
   790                           
   791                           ;chrono.c: 219: if(Number >= 10000){
   792  002C  082F               	movf	(fLCD_PrintNumber@Number+1)^(0+128),w
   793  002D  3A80               	xorlw	128
   794  002E  00FF               	movwf	127
   795  002F  30A7               	movlw	167
   796  0030  027F               	subwf	127,w
   797  0031  1D03               	skipz
   798  0032  2835               	goto	u2025
   799  0033  3010               	movlw	16
   800  0034  022E               	subwf	fLCD_PrintNumber@Number^(0+128),w
   801  0035                     u2025:	
   802  0035  1C03               	skipc
   803  0036  2867               	goto	l1936
   804                           
   805                           ;chrono.c: 220: tmp_byte = tmp_int/10000;
   806  0037  3010               	movlw	16
   807  0038  1683               	bsf	3,5	;RP0=1, select bank1
   808  0039  1303               	bcf	3,6	;RP1=0, select bank1
   809  003A  00A0               	movwf	?___awdiv^(0+128)
   810  003B  3027               	movlw	39
   811  003C  00A1               	movwf	(?___awdiv^(0+128)+1)
   812  003D  0832               	movf	(fLCD_PrintNumber@tmp_int+1)^(0+128),w
   813  003E  01A3               	clrf	((?___awdiv+1)^(0+128)+2)
   814  003F  07A3               	addwf	((?___awdiv+1)^(0+128)+2),f
   815  0040  0831               	movf	fLCD_PrintNumber@tmp_int^(0+128),w
   816  0041  01A2               	clrf	(?___awdiv^(0+128)+2)
   817  0042  07A2               	addwf	(?___awdiv^(0+128)+2),f
   818  0043  118A  2595  118A   	fcall	___awdiv
   819  0046  1683               	bsf	3,5	;RP0=1, select bank1
   820  0047  1303               	bcf	3,6	;RP1=0, select bank1
   821  0048  0820               	movf	?___awdiv^(0+128),w
   822  0049  00B0               	movwf	??_fLCD_PrintNumber^(0+128)
   823  004A  0830               	movf	??_fLCD_PrintNumber^(0+128),w
   824  004B  00B3               	movwf	fLCD_PrintNumber@tmp_byte^(0+128)
   825                           
   826                           ;chrono.c: 221: fLCD_RawSend('0' + tmp_byte, 0x10);
   827  004C  3010               	movlw	16
   828  004D  00B0               	movwf	??_fLCD_PrintNumber^(0+128)
   829  004E  0830               	movf	??_fLCD_PrintNumber^(0+128),w
   830  004F  00A0               	movwf	?_fLCD_RawSend^(0+128)
   831  0050  0833               	movf	fLCD_PrintNumber@tmp_byte^(0+128),w
   832  0051  3E30               	addlw	48
   833  0052  118A  2301  118A   	fcall	_fLCD_RawSend
   834  0055                     l1934:	
   835                           ;chrono.c: 223: while(tmp_byte > 0){
   836                           
   837  0055  1683               	bsf	3,5	;RP0=1, select bank1
   838  0056  1303               	bcf	3,6	;RP1=0, select bank1
   839  0057  08B3               	movf	fLCD_PrintNumber@tmp_byte^(0+128),f
   840  0058  1903               	btfsc	3,2
   841  0059  2867               	goto	l1936
   842                           
   843                           ;chrono.c: 224: tmp_int = tmp_int - 10000;
   844  005A  1683               	bsf	3,5	;RP0=1, select bank1
   845  005B  1303               	bcf	3,6	;RP1=0, select bank1
   846  005C  0831               	movf	fLCD_PrintNumber@tmp_int^(0+128),w
   847  005D  3EF0               	addlw	240
   848  005E  00B1               	movwf	fLCD_PrintNumber@tmp_int^(0+128)
   849  005F  0832               	movf	(fLCD_PrintNumber@tmp_int+1)^(0+128),w
   850  0060  1803               	skipnc
   851  0061  3E01               	addlw	1
   852  0062  3ED8               	addlw	216
   853  0063  00B2               	movwf	(fLCD_PrintNumber@tmp_int+1)^(0+128)
   854                           
   855                           ;chrono.c: 225: tmp_byte--;
   856  0064  3001               	movlw	1
   857  0065  02B3               	subwf	fLCD_PrintNumber@tmp_byte^(0+128),f
   858  0066  2855               	goto	l1934
   859  0067                     l1936:	
   860                           
   861                           ;chrono.c: 226: }
   862                           ;chrono.c: 227: }
   863                           ;chrono.c: 229: if(Number >= 1000){
   864  0067  1683               	bsf	3,5	;RP0=1, select bank1
   865  0068  1303               	bcf	3,6	;RP1=0, select bank1
   866  0069  082F               	movf	(fLCD_PrintNumber@Number+1)^(0+128),w
   867  006A  3A80               	xorlw	128
   868  006B  00FF               	movwf	127
   869  006C  3083               	movlw	131
   870  006D  027F               	subwf	127,w
   871  006E  1D03               	skipz
   872  006F  2872               	goto	u2045
   873  0070  30E8               	movlw	232
   874  0071  022E               	subwf	fLCD_PrintNumber@Number^(0+128),w
   875  0072                     u2045:	
   876  0072  1C03               	skipc
   877  0073  28A4               	goto	l1944
   878                           
   879                           ;chrono.c: 230: tmp_byte = tmp_int/1000;
   880  0074  30E8               	movlw	232
   881  0075  1683               	bsf	3,5	;RP0=1, select bank1
   882  0076  1303               	bcf	3,6	;RP1=0, select bank1
   883  0077  00A0               	movwf	?___awdiv^(0+128)
   884  0078  3003               	movlw	3
   885  0079  00A1               	movwf	(?___awdiv^(0+128)+1)
   886  007A  0832               	movf	(fLCD_PrintNumber@tmp_int+1)^(0+128),w
   887  007B  01A3               	clrf	((?___awdiv+1)^(0+128)+2)
   888  007C  07A3               	addwf	((?___awdiv+1)^(0+128)+2),f
   889  007D  0831               	movf	fLCD_PrintNumber@tmp_int^(0+128),w
   890  007E  01A2               	clrf	(?___awdiv^(0+128)+2)
   891  007F  07A2               	addwf	(?___awdiv^(0+128)+2),f
   892  0080  118A  2595  118A   	fcall	___awdiv
   893  0083  1683               	bsf	3,5	;RP0=1, select bank1
   894  0084  1303               	bcf	3,6	;RP1=0, select bank1
   895  0085  0820               	movf	?___awdiv^(0+128),w
   896  0086  00B0               	movwf	??_fLCD_PrintNumber^(0+128)
   897  0087  0830               	movf	??_fLCD_PrintNumber^(0+128),w
   898  0088  00B3               	movwf	fLCD_PrintNumber@tmp_byte^(0+128)
   899                           
   900                           ;chrono.c: 231: fLCD_RawSend('0' + tmp_byte, 0x10);
   901  0089  3010               	movlw	16
   902  008A  00B0               	movwf	??_fLCD_PrintNumber^(0+128)
   903  008B  0830               	movf	??_fLCD_PrintNumber^(0+128),w
   904  008C  00A0               	movwf	?_fLCD_RawSend^(0+128)
   905  008D  0833               	movf	fLCD_PrintNumber@tmp_byte^(0+128),w
   906  008E  3E30               	addlw	48
   907  008F  118A  2301  118A   	fcall	_fLCD_RawSend
   908  0092                     l1942:	
   909                           ;chrono.c: 233: while(tmp_byte > 0){
   910                           
   911  0092  1683               	bsf	3,5	;RP0=1, select bank1
   912  0093  1303               	bcf	3,6	;RP1=0, select bank1
   913  0094  08B3               	movf	fLCD_PrintNumber@tmp_byte^(0+128),f
   914  0095  1903               	btfsc	3,2
   915  0096  28A4               	goto	l1944
   916                           
   917                           ;chrono.c: 234: tmp_int = tmp_int - 1000;
   918  0097  1683               	bsf	3,5	;RP0=1, select bank1
   919  0098  1303               	bcf	3,6	;RP1=0, select bank1
   920  0099  0831               	movf	fLCD_PrintNumber@tmp_int^(0+128),w
   921  009A  3E18               	addlw	24
   922  009B  00B1               	movwf	fLCD_PrintNumber@tmp_int^(0+128)
   923  009C  0832               	movf	(fLCD_PrintNumber@tmp_int+1)^(0+128),w
   924  009D  1803               	skipnc
   925  009E  3E01               	addlw	1
   926  009F  3EFC               	addlw	252
   927  00A0  00B2               	movwf	(fLCD_PrintNumber@tmp_int+1)^(0+128)
   928                           
   929                           ;chrono.c: 235: tmp_byte--;
   930  00A1  3001               	movlw	1
   931  00A2  02B3               	subwf	fLCD_PrintNumber@tmp_byte^(0+128),f
   932  00A3  2892               	goto	l1942
   933  00A4                     l1944:	
   934                           
   935                           ;chrono.c: 236: }
   936                           ;chrono.c: 237: }
   937                           ;chrono.c: 239: if(Number >= 100){
   938  00A4  1683               	bsf	3,5	;RP0=1, select bank1
   939  00A5  1303               	bcf	3,6	;RP1=0, select bank1
   940  00A6  082F               	movf	(fLCD_PrintNumber@Number+1)^(0+128),w
   941  00A7  3A80               	xorlw	128
   942  00A8  00FF               	movwf	127
   943  00A9  3080               	movlw	128
   944  00AA  027F               	subwf	127,w
   945  00AB  1D03               	skipz
   946  00AC  28AF               	goto	u2065
   947  00AD  3064               	movlw	100
   948  00AE  022E               	subwf	fLCD_PrintNumber@Number^(0+128),w
   949  00AF                     u2065:	
   950  00AF  1C03               	skipc
   951  00B0  28E1               	goto	l1952
   952                           
   953                           ;chrono.c: 240: tmp_byte = tmp_int/100;
   954  00B1  3064               	movlw	100
   955  00B2  1683               	bsf	3,5	;RP0=1, select bank1
   956  00B3  1303               	bcf	3,6	;RP1=0, select bank1
   957  00B4  00A0               	movwf	?___awdiv^(0+128)
   958  00B5  3000               	movlw	0
   959  00B6  00A1               	movwf	(?___awdiv^(0+128)+1)
   960  00B7  0832               	movf	(fLCD_PrintNumber@tmp_int+1)^(0+128),w
   961  00B8  01A3               	clrf	((?___awdiv+1)^(0+128)+2)
   962  00B9  07A3               	addwf	((?___awdiv+1)^(0+128)+2),f
   963  00BA  0831               	movf	fLCD_PrintNumber@tmp_int^(0+128),w
   964  00BB  01A2               	clrf	(?___awdiv^(0+128)+2)
   965  00BC  07A2               	addwf	(?___awdiv^(0+128)+2),f
   966  00BD  118A  2595  118A   	fcall	___awdiv
   967  00C0  1683               	bsf	3,5	;RP0=1, select bank1
   968  00C1  1303               	bcf	3,6	;RP1=0, select bank1
   969  00C2  0820               	movf	?___awdiv^(0+128),w
   970  00C3  00B0               	movwf	??_fLCD_PrintNumber^(0+128)
   971  00C4  0830               	movf	??_fLCD_PrintNumber^(0+128),w
   972  00C5  00B3               	movwf	fLCD_PrintNumber@tmp_byte^(0+128)
   973                           
   974                           ;chrono.c: 241: fLCD_RawSend('0' + tmp_byte, 0x10);
   975  00C6  3010               	movlw	16
   976  00C7  00B0               	movwf	??_fLCD_PrintNumber^(0+128)
   977  00C8  0830               	movf	??_fLCD_PrintNumber^(0+128),w
   978  00C9  00A0               	movwf	?_fLCD_RawSend^(0+128)
   979  00CA  0833               	movf	fLCD_PrintNumber@tmp_byte^(0+128),w
   980  00CB  3E30               	addlw	48
   981  00CC  118A  2301  118A   	fcall	_fLCD_RawSend
   982  00CF                     l1950:	
   983                           ;chrono.c: 243: while(tmp_byte > 0){
   984                           
   985  00CF  1683               	bsf	3,5	;RP0=1, select bank1
   986  00D0  1303               	bcf	3,6	;RP1=0, select bank1
   987  00D1  08B3               	movf	fLCD_PrintNumber@tmp_byte^(0+128),f
   988  00D2  1903               	btfsc	3,2
   989  00D3  28E1               	goto	l1952
   990                           
   991                           ;chrono.c: 244: tmp_int = tmp_int - 100;
   992  00D4  1683               	bsf	3,5	;RP0=1, select bank1
   993  00D5  1303               	bcf	3,6	;RP1=0, select bank1
   994  00D6  0831               	movf	fLCD_PrintNumber@tmp_int^(0+128),w
   995  00D7  3E9C               	addlw	156
   996  00D8  00B1               	movwf	fLCD_PrintNumber@tmp_int^(0+128)
   997  00D9  0832               	movf	(fLCD_PrintNumber@tmp_int+1)^(0+128),w
   998  00DA  1803               	skipnc
   999  00DB  3E01               	addlw	1
  1000  00DC  3EFF               	addlw	255
  1001  00DD  00B2               	movwf	(fLCD_PrintNumber@tmp_int+1)^(0+128)
  1002                           
  1003                           ;chrono.c: 245: tmp_byte--;
  1004  00DE  3001               	movlw	1
  1005  00DF  02B3               	subwf	fLCD_PrintNumber@tmp_byte^(0+128),f
  1006  00E0  28CF               	goto	l1950
  1007  00E1                     l1952:	
  1008                           
  1009                           ;chrono.c: 246: }
  1010                           ;chrono.c: 247: }
  1011                           ;chrono.c: 249: if(Number >= 10){
  1012  00E1  1683               	bsf	3,5	;RP0=1, select bank1
  1013  00E2  1303               	bcf	3,6	;RP1=0, select bank1
  1014  00E3  082F               	movf	(fLCD_PrintNumber@Number+1)^(0+128),w
  1015  00E4  3A80               	xorlw	128
  1016  00E5  00FF               	movwf	127
  1017  00E6  3080               	movlw	128
  1018  00E7  027F               	subwf	127,w
  1019  00E8  1D03               	skipz
  1020  00E9  28EC               	goto	u2085
  1021  00EA  300A               	movlw	10
  1022  00EB  022E               	subwf	fLCD_PrintNumber@Number^(0+128),w
  1023  00EC                     u2085:	
  1024  00EC  1C03               	skipc
  1025  00ED  291E               	goto	l1960
  1026                           
  1027                           ;chrono.c: 250: tmp_byte = tmp_int/10;
  1028  00EE  300A               	movlw	10
  1029  00EF  1683               	bsf	3,5	;RP0=1, select bank1
  1030  00F0  1303               	bcf	3,6	;RP1=0, select bank1
  1031  00F1  00A0               	movwf	?___awdiv^(0+128)
  1032  00F2  3000               	movlw	0
  1033  00F3  00A1               	movwf	(?___awdiv^(0+128)+1)
  1034  00F4  0832               	movf	(fLCD_PrintNumber@tmp_int+1)^(0+128),w
  1035  00F5  01A3               	clrf	((?___awdiv+1)^(0+128)+2)
  1036  00F6  07A3               	addwf	((?___awdiv+1)^(0+128)+2),f
  1037  00F7  0831               	movf	fLCD_PrintNumber@tmp_int^(0+128),w
  1038  00F8  01A2               	clrf	(?___awdiv^(0+128)+2)
  1039  00F9  07A2               	addwf	(?___awdiv^(0+128)+2),f
  1040  00FA  118A  2595  118A   	fcall	___awdiv
  1041  00FD  1683               	bsf	3,5	;RP0=1, select bank1
  1042  00FE  1303               	bcf	3,6	;RP1=0, select bank1
  1043  00FF  0820               	movf	?___awdiv^(0+128),w
  1044  0100  00B0               	movwf	??_fLCD_PrintNumber^(0+128)
  1045  0101  0830               	movf	??_fLCD_PrintNumber^(0+128),w
  1046  0102  00B3               	movwf	fLCD_PrintNumber@tmp_byte^(0+128)
  1047                           
  1048                           ;chrono.c: 251: fLCD_RawSend('0' + tmp_byte, 0x10);
  1049  0103  3010               	movlw	16
  1050  0104  00B0               	movwf	??_fLCD_PrintNumber^(0+128)
  1051  0105  0830               	movf	??_fLCD_PrintNumber^(0+128),w
  1052  0106  00A0               	movwf	?_fLCD_RawSend^(0+128)
  1053  0107  0833               	movf	fLCD_PrintNumber@tmp_byte^(0+128),w
  1054  0108  3E30               	addlw	48
  1055  0109  118A  2301  118A   	fcall	_fLCD_RawSend
  1056  010C                     l1958:	
  1057                           ;chrono.c: 253: while(tmp_byte > 0){
  1058                           
  1059  010C  1683               	bsf	3,5	;RP0=1, select bank1
  1060  010D  1303               	bcf	3,6	;RP1=0, select bank1
  1061  010E  08B3               	movf	fLCD_PrintNumber@tmp_byte^(0+128),f
  1062  010F  1903               	btfsc	3,2
  1063  0110  291E               	goto	l1960
  1064                           
  1065                           ;chrono.c: 254: tmp_int = tmp_int - 10;
  1066  0111  1683               	bsf	3,5	;RP0=1, select bank1
  1067  0112  1303               	bcf	3,6	;RP1=0, select bank1
  1068  0113  0831               	movf	fLCD_PrintNumber@tmp_int^(0+128),w
  1069  0114  3EF6               	addlw	246
  1070  0115  00B1               	movwf	fLCD_PrintNumber@tmp_int^(0+128)
  1071  0116  0832               	movf	(fLCD_PrintNumber@tmp_int+1)^(0+128),w
  1072  0117  1803               	skipnc
  1073  0118  3E01               	addlw	1
  1074  0119  3EFF               	addlw	255
  1075  011A  00B2               	movwf	(fLCD_PrintNumber@tmp_int+1)^(0+128)
  1076                           
  1077                           ;chrono.c: 255: tmp_byte--;
  1078  011B  3001               	movlw	1
  1079  011C  02B3               	subwf	fLCD_PrintNumber@tmp_byte^(0+128),f
  1080  011D  290C               	goto	l1958
  1081  011E                     l1960:	
  1082                           
  1083                           ;chrono.c: 256: }
  1084                           ;chrono.c: 257: }
  1085                           ;chrono.c: 258: fLCD_RawSend('0' + tmp_int, 0x10);
  1086  011E  3010               	movlw	16
  1087  011F  1683               	bsf	3,5	;RP0=1, select bank1
  1088  0120  1303               	bcf	3,6	;RP1=0, select bank1
  1089  0121  00B0               	movwf	??_fLCD_PrintNumber^(0+128)
  1090  0122  0830               	movf	??_fLCD_PrintNumber^(0+128),w
  1091  0123  00A0               	movwf	?_fLCD_RawSend^(0+128)
  1092  0124  0831               	movf	fLCD_PrintNumber@tmp_int^(0+128),w
  1093  0125  3E30               	addlw	48
  1094  0126  118A  2301         	fcall	_fLCD_RawSend
  1095  0128  0008               	return
  1096  0129                     __end_of_fLCD_PrintNumber:	
  1097                           
  1098                           	psect	text3
  1099  0595                     __ptext3:	
  1100 ;; *************** function ___awdiv *****************
  1101 ;; Defined at:
  1102 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\awdiv.c"
  1103 ;; Parameters:    Size  Location     Type
  1104 ;;  divisor         2    0[BANK1 ] int 
  1105 ;;  dividend        2    2[BANK1 ] int 
  1106 ;; Auto vars:     Size  Location     Type
  1107 ;;  quotient        2    7[BANK1 ] int 
  1108 ;;  sign            1    6[BANK1 ] unsigned char 
  1109 ;;  counter         1    5[BANK1 ] unsigned char 
  1110 ;; Return value:  Size  Location     Type
  1111 ;;                  2    0[BANK1 ] int 
  1112 ;; Registers used:
  1113 ;;		wreg, status,2, status,0
  1114 ;; Tracked objects:
  1115 ;;		On entry : 0/0
  1116 ;;		On exit  : 0/0
  1117 ;;		Unchanged: 0/0
  1118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1119 ;;      Params:         0       0       4       0       0
  1120 ;;      Locals:         0       0       4       0       0
  1121 ;;      Temps:          0       0       1       0       0
  1122 ;;      Totals:         0       0       9       0       0
  1123 ;;Total ram usage:        9 bytes
  1124 ;; Hardware stack levels used:    1
  1125 ;; Hardware stack levels required when called:    3
  1126 ;; This function calls:
  1127 ;;		Nothing
  1128 ;; This function is called by:
  1129 ;;		_fLCD_PrintNumber
  1130 ;; This function uses a non-reentrant model
  1131 ;;
  1132                           
  1133                           
  1134                           ;psect for function ___awdiv
  1135  0595                     ___awdiv:	
  1136                           
  1137                           ;incstack = 0
  1138                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1139  0595  1683               	bsf	3,5	;RP0=1, select bank1
  1140  0596  1303               	bcf	3,6	;RP1=0, select bank1
  1141  0597  01A6               	clrf	___awdiv@sign^(0+128)
  1142  0598  1FA1               	btfss	(___awdiv@divisor+1)^(0+128),7
  1143  0599  2DA1               	goto	l2112
  1144  059A  09A0               	comf	___awdiv@divisor^(0+128),f
  1145  059B  09A1               	comf	(___awdiv@divisor+1)^(0+128),f
  1146  059C  0AA0               	incf	___awdiv@divisor^(0+128),f
  1147  059D  1903               	skipnz
  1148  059E  0AA1               	incf	(___awdiv@divisor+1)^(0+128),f
  1149  059F  01A6               	clrf	___awdiv@sign^(0+128)
  1150  05A0  0AA6               	incf	___awdiv@sign^(0+128),f
  1151  05A1                     l2112:	
  1152  05A1  1FA3               	btfss	(___awdiv@dividend+1)^(0+128),7
  1153  05A2  2DAC               	goto	l2118
  1154  05A3  09A2               	comf	___awdiv@dividend^(0+128),f
  1155  05A4  09A3               	comf	(___awdiv@dividend+1)^(0+128),f
  1156  05A5  0AA2               	incf	___awdiv@dividend^(0+128),f
  1157  05A6  1903               	skipnz
  1158  05A7  0AA3               	incf	(___awdiv@dividend+1)^(0+128),f
  1159  05A8  3001               	movlw	1
  1160  05A9  00A4               	movwf	??___awdiv^(0+128)
  1161  05AA  0824               	movf	??___awdiv^(0+128),w
  1162  05AB  06A6               	xorwf	___awdiv@sign^(0+128),f
  1163  05AC                     l2118:	
  1164  05AC  01A7               	clrf	___awdiv@quotient^(0+128)
  1165  05AD  01A8               	clrf	(___awdiv@quotient+1)^(0+128)
  1166  05AE  0821               	movf	(___awdiv@divisor+1)^(0+128),w
  1167  05AF  0420               	iorwf	___awdiv@divisor^(0+128),w
  1168  05B0  1903               	skipnz
  1169  05B1  2DE3               	goto	l2140
  1170  05B2  01A5               	clrf	___awdiv@counter^(0+128)
  1171  05B3  0AA5               	incf	___awdiv@counter^(0+128),f
  1172  05B4                     l2128:	
  1173  05B4  1BA1               	btfsc	(___awdiv@divisor+1)^(0+128),7
  1174  05B5  2DC2               	goto	l2130
  1175  05B6  3001               	movlw	1
  1176  05B7                     u2305:	
  1177  05B7  1003               	clrc
  1178  05B8  0DA0               	rlf	___awdiv@divisor^(0+128),f
  1179  05B9  0DA1               	rlf	(___awdiv@divisor+1)^(0+128),f
  1180  05BA  3EFF               	addlw	-1
  1181  05BB  1D03               	skipz
  1182  05BC  2DB7               	goto	u2305
  1183  05BD  3001               	movlw	1
  1184  05BE  00A4               	movwf	??___awdiv^(0+128)
  1185  05BF  0824               	movf	??___awdiv^(0+128),w
  1186  05C0  07A5               	addwf	___awdiv@counter^(0+128),f
  1187  05C1  2DB4               	goto	l2128
  1188  05C2                     l2130:	
  1189  05C2  3001               	movlw	1
  1190  05C3                     u2325:	
  1191  05C3  1003               	clrc
  1192  05C4  0DA7               	rlf	___awdiv@quotient^(0+128),f
  1193  05C5  0DA8               	rlf	(___awdiv@quotient+1)^(0+128),f
  1194  05C6  3EFF               	addlw	-1
  1195  05C7  1D03               	skipz
  1196  05C8  2DC3               	goto	u2325
  1197  05C9  0821               	movf	(___awdiv@divisor+1)^(0+128),w
  1198  05CA  0223               	subwf	(___awdiv@dividend+1)^(0+128),w
  1199  05CB  1D03               	skipz
  1200  05CC  2DCF               	goto	u2335
  1201  05CD  0820               	movf	___awdiv@divisor^(0+128),w
  1202  05CE  0222               	subwf	___awdiv@dividend^(0+128),w
  1203  05CF                     u2335:	
  1204  05CF  1C03               	skipc
  1205  05D0  2DD8               	goto	l2136
  1206  05D1  0820               	movf	___awdiv@divisor^(0+128),w
  1207  05D2  02A2               	subwf	___awdiv@dividend^(0+128),f
  1208  05D3  0821               	movf	(___awdiv@divisor+1)^(0+128),w
  1209  05D4  1C03               	skipc
  1210  05D5  03A3               	decf	(___awdiv@dividend+1)^(0+128),f
  1211  05D6  02A3               	subwf	(___awdiv@dividend+1)^(0+128),f
  1212  05D7  1427               	bsf	___awdiv@quotient^(0+128),0
  1213  05D8                     l2136:	
  1214  05D8  3001               	movlw	1
  1215  05D9                     u2345:	
  1216  05D9  1003               	clrc
  1217  05DA  0CA1               	rrf	(___awdiv@divisor+1)^(0+128),f
  1218  05DB  0CA0               	rrf	___awdiv@divisor^(0+128),f
  1219  05DC  3EFF               	addlw	-1
  1220  05DD  1D03               	skipz
  1221  05DE  2DD9               	goto	u2345
  1222  05DF  3001               	movlw	1
  1223  05E0  02A5               	subwf	___awdiv@counter^(0+128),f
  1224  05E1  1D03               	btfss	3,2
  1225  05E2  2DC2               	goto	l2130
  1226  05E3                     l2140:	
  1227  05E3  0826               	movf	___awdiv@sign^(0+128),w
  1228  05E4  1903               	btfsc	3,2
  1229  05E5  2DEB               	goto	l2144
  1230  05E6  09A7               	comf	___awdiv@quotient^(0+128),f
  1231  05E7  09A8               	comf	(___awdiv@quotient+1)^(0+128),f
  1232  05E8  0AA7               	incf	___awdiv@quotient^(0+128),f
  1233  05E9  1903               	skipnz
  1234  05EA  0AA8               	incf	(___awdiv@quotient+1)^(0+128),f
  1235  05EB                     l2144:	
  1236  05EB  0828               	movf	(___awdiv@quotient+1)^(0+128),w
  1237  05EC  01A1               	clrf	(?___awdiv+1)^(0+128)
  1238  05ED  07A1               	addwf	(?___awdiv+1)^(0+128),f
  1239  05EE  0827               	movf	___awdiv@quotient^(0+128),w
  1240  05EF  01A0               	clrf	?___awdiv^(0+128)
  1241  05F0  07A0               	addwf	?___awdiv^(0+128),f
  1242  05F1  0008               	return
  1243  05F2                     __end_of___awdiv:	
  1244                           
  1245                           	psect	text4
  1246  04AF                     __ptext4:	
  1247 ;; *************** function _fLCD_Start *****************
  1248 ;; Defined at:
  1249 ;;		line 92 in file "chrono.c"
  1250 ;; Parameters:    Size  Location     Type
  1251 ;;		None
  1252 ;; Auto vars:     Size  Location     Type
  1253 ;;		None
  1254 ;; Return value:  Size  Location     Type
  1255 ;;		None               void
  1256 ;; Registers used:
  1257 ;;		wreg, status,2, status,0, pclath, cstack
  1258 ;; Tracked objects:
  1259 ;;		On entry : 0/0
  1260 ;;		On exit  : 0/0
  1261 ;;		Unchanged: 0/0
  1262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1263 ;;      Params:         0       0       0       0       0
  1264 ;;      Locals:         0       0       0       0       0
  1265 ;;      Temps:          0       0       2       0       0
  1266 ;;      Totals:         0       0       2       0       0
  1267 ;;Total ram usage:        2 bytes
  1268 ;; Hardware stack levels used:    1
  1269 ;; Hardware stack levels required when called:    5
  1270 ;; This function calls:
  1271 ;;		_fLCD_Clear
  1272 ;;		_fLCD_RawSend
  1273 ;; This function is called by:
  1274 ;;		_main
  1275 ;; This function uses a non-reentrant model
  1276 ;;
  1277                           
  1278                           
  1279                           ;psect for function _fLCD_Start
  1280  04AF                     _fLCD_Start:	
  1281                           
  1282                           ;chrono.c: 93: PORTB = 0;
  1283                           
  1284                           ;incstack = 0
  1285                           ; Regs used in _fLCD_Start: [wreg+status,2+status,0+pclath+cstack]
  1286  04AF  1283               	bcf	3,5	;RP0=0, select bank0
  1287  04B0  1303               	bcf	3,6	;RP1=0, select bank0
  1288  04B1  0186               	clrf	6	;volatile
  1289                           
  1290                           ;chrono.c: 94: PORTA = 0;
  1291  04B2  0185               	clrf	5	;volatile
  1292                           
  1293                           ;chrono.c: 95: _delay((unsigned long)((12)*(8000000/4000.0)));
  1294  04B3  3020               	movlw	32
  1295  04B4  1683               	bsf	3,5	;RP0=1, select bank1
  1296  04B5  1303               	bcf	3,6	;RP1=0, select bank1
  1297  04B6  00A8               	movwf	(??_fLCD_Start^(0+128)+1)
  1298  04B7  3029               	movlw	41
  1299  04B8  00A7               	movwf	??_fLCD_Start^(0+128)
  1300  04B9                     u2497:	
  1301  04B9  0BA7               	decfsz	??_fLCD_Start^(0+128),f
  1302  04BA  2CB9               	goto	u2497
  1303  04BB  0BA8               	decfsz	(??_fLCD_Start^(0+128)+1),f
  1304  04BC  2CB9               	goto	u2497
  1305  04BD  2CBE               	nop2
  1306                           
  1307                           ;chrono.c: 96: fLCD_RawSend(0x33, 0);
  1308  04BE  1683               	bsf	3,5	;RP0=1, select bank1
  1309  04BF  1303               	bcf	3,6	;RP1=0, select bank1
  1310  04C0  01A0               	clrf	?_fLCD_RawSend^(0+128)
  1311  04C1  3033               	movlw	51
  1312  04C2  118A  2301  118A   	fcall	_fLCD_RawSend
  1313                           
  1314                           ;chrono.c: 97: _delay((unsigned long)((2)*(8000000/4000.0)));
  1315  04C5  3006               	movlw	6
  1316  04C6  1683               	bsf	3,5	;RP0=1, select bank1
  1317  04C7  1303               	bcf	3,6	;RP1=0, select bank1
  1318  04C8  00A8               	movwf	(??_fLCD_Start^(0+128)+1)
  1319  04C9  3030               	movlw	48
  1320  04CA  00A7               	movwf	??_fLCD_Start^(0+128)
  1321  04CB                     u2507:	
  1322  04CB  0BA7               	decfsz	??_fLCD_Start^(0+128),f
  1323  04CC  2CCB               	goto	u2507
  1324  04CD  0BA8               	decfsz	(??_fLCD_Start^(0+128)+1),f
  1325  04CE  2CCB               	goto	u2507
  1326  04CF  0000               	nop
  1327                           
  1328                           ;chrono.c: 98: fLCD_RawSend(0x33, 0);
  1329  04D0  1683               	bsf	3,5	;RP0=1, select bank1
  1330  04D1  1303               	bcf	3,6	;RP1=0, select bank1
  1331  04D2  01A0               	clrf	?_fLCD_RawSend^(0+128)
  1332  04D3  3033               	movlw	51
  1333  04D4  118A  2301  118A   	fcall	_fLCD_RawSend
  1334                           
  1335                           ;chrono.c: 99: _delay((unsigned long)((2)*(8000000/4000.0)));
  1336  04D7  3006               	movlw	6
  1337  04D8  1683               	bsf	3,5	;RP0=1, select bank1
  1338  04D9  1303               	bcf	3,6	;RP1=0, select bank1
  1339  04DA  00A8               	movwf	(??_fLCD_Start^(0+128)+1)
  1340  04DB  3030               	movlw	48
  1341  04DC  00A7               	movwf	??_fLCD_Start^(0+128)
  1342  04DD                     u2517:	
  1343  04DD  0BA7               	decfsz	??_fLCD_Start^(0+128),f
  1344  04DE  2CDD               	goto	u2517
  1345  04DF  0BA8               	decfsz	(??_fLCD_Start^(0+128)+1),f
  1346  04E0  2CDD               	goto	u2517
  1347  04E1  0000               	nop
  1348                           
  1349                           ;chrono.c: 100: fLCD_RawSend(0x32, 0);
  1350  04E2  1683               	bsf	3,5	;RP0=1, select bank1
  1351  04E3  1303               	bcf	3,6	;RP1=0, select bank1
  1352  04E4  01A0               	clrf	?_fLCD_RawSend^(0+128)
  1353  04E5  3032               	movlw	50
  1354  04E6  118A  2301  118A   	fcall	_fLCD_RawSend
  1355                           
  1356                           ;chrono.c: 101: _delay((unsigned long)((2)*(8000000/4000.0)));
  1357  04E9  3006               	movlw	6
  1358  04EA  1683               	bsf	3,5	;RP0=1, select bank1
  1359  04EB  1303               	bcf	3,6	;RP1=0, select bank1
  1360  04EC  00A8               	movwf	(??_fLCD_Start^(0+128)+1)
  1361  04ED  3030               	movlw	48
  1362  04EE  00A7               	movwf	??_fLCD_Start^(0+128)
  1363  04EF                     u2527:	
  1364  04EF  0BA7               	decfsz	??_fLCD_Start^(0+128),f
  1365  04F0  2CEF               	goto	u2527
  1366  04F1  0BA8               	decfsz	(??_fLCD_Start^(0+128)+1),f
  1367  04F2  2CEF               	goto	u2527
  1368  04F3  0000               	nop
  1369                           
  1370                           ;chrono.c: 102: fLCD_RawSend(0x2c, 0);
  1371  04F4  1683               	bsf	3,5	;RP0=1, select bank1
  1372  04F5  1303               	bcf	3,6	;RP1=0, select bank1
  1373  04F6  01A0               	clrf	?_fLCD_RawSend^(0+128)
  1374  04F7  302C               	movlw	44
  1375  04F8  118A  2301  118A   	fcall	_fLCD_RawSend
  1376                           
  1377                           ;chrono.c: 103: _delay((unsigned long)((2)*(8000000/4000.0)));
  1378  04FB  3006               	movlw	6
  1379  04FC  1683               	bsf	3,5	;RP0=1, select bank1
  1380  04FD  1303               	bcf	3,6	;RP1=0, select bank1
  1381  04FE  00A8               	movwf	(??_fLCD_Start^(0+128)+1)
  1382  04FF  3030               	movlw	48
  1383  0500  00A7               	movwf	??_fLCD_Start^(0+128)
  1384  0501                     u2537:	
  1385  0501  0BA7               	decfsz	??_fLCD_Start^(0+128),f
  1386  0502  2D01               	goto	u2537
  1387  0503  0BA8               	decfsz	(??_fLCD_Start^(0+128)+1),f
  1388  0504  2D01               	goto	u2537
  1389  0505  0000               	nop
  1390                           
  1391                           ;chrono.c: 104: fLCD_RawSend(0x06, 0);
  1392  0506  1683               	bsf	3,5	;RP0=1, select bank1
  1393  0507  1303               	bcf	3,6	;RP1=0, select bank1
  1394  0508  01A0               	clrf	?_fLCD_RawSend^(0+128)
  1395  0509  3006               	movlw	6
  1396  050A  118A  2301  118A   	fcall	_fLCD_RawSend
  1397                           
  1398                           ;chrono.c: 105: _delay((unsigned long)((2)*(8000000/4000.0)));
  1399  050D  3006               	movlw	6
  1400  050E  1683               	bsf	3,5	;RP0=1, select bank1
  1401  050F  1303               	bcf	3,6	;RP1=0, select bank1
  1402  0510  00A8               	movwf	(??_fLCD_Start^(0+128)+1)
  1403  0511  3030               	movlw	48
  1404  0512  00A7               	movwf	??_fLCD_Start^(0+128)
  1405  0513                     u2547:	
  1406  0513  0BA7               	decfsz	??_fLCD_Start^(0+128),f
  1407  0514  2D13               	goto	u2547
  1408  0515  0BA8               	decfsz	(??_fLCD_Start^(0+128)+1),f
  1409  0516  2D13               	goto	u2547
  1410  0517  0000               	nop
  1411                           
  1412                           ;chrono.c: 106: fLCD_RawSend(0x0c, 0);
  1413  0518  1683               	bsf	3,5	;RP0=1, select bank1
  1414  0519  1303               	bcf	3,6	;RP1=0, select bank1
  1415  051A  01A0               	clrf	?_fLCD_RawSend^(0+128)
  1416  051B  300C               	movlw	12
  1417  051C  118A  2301  118A   	fcall	_fLCD_RawSend
  1418                           
  1419                           ;chrono.c: 107: _delay((unsigned long)((2)*(8000000/4000.0)));
  1420  051F  3006               	movlw	6
  1421  0520  1683               	bsf	3,5	;RP0=1, select bank1
  1422  0521  1303               	bcf	3,6	;RP1=0, select bank1
  1423  0522  00A8               	movwf	(??_fLCD_Start^(0+128)+1)
  1424  0523  3030               	movlw	48
  1425  0524  00A7               	movwf	??_fLCD_Start^(0+128)
  1426  0525                     u2557:	
  1427  0525  0BA7               	decfsz	??_fLCD_Start^(0+128),f
  1428  0526  2D25               	goto	u2557
  1429  0527  0BA8               	decfsz	(??_fLCD_Start^(0+128)+1),f
  1430  0528  2D25               	goto	u2557
  1431  0529  0000               	nop
  1432                           
  1433                           ;chrono.c: 109: fLCD_Clear();
  1434  052A  118A  2639         	fcall	_fLCD_Clear
  1435  052C  0008               	return
  1436  052D                     __end_of_fLCD_Start:	
  1437                           
  1438                           	psect	text5
  1439  0639                     __ptext5:	
  1440 ;; *************** function _fLCD_Clear *****************
  1441 ;; Defined at:
  1442 ;;		line 156 in file "chrono.c"
  1443 ;; Parameters:    Size  Location     Type
  1444 ;;		None
  1445 ;; Auto vars:     Size  Location     Type
  1446 ;;		None
  1447 ;; Return value:  Size  Location     Type
  1448 ;;		None               void
  1449 ;; Registers used:
  1450 ;;		wreg, status,2, status,0, pclath, cstack
  1451 ;; Tracked objects:
  1452 ;;		On entry : 0/0
  1453 ;;		On exit  : 0/0
  1454 ;;		Unchanged: 0/0
  1455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1456 ;;      Params:         0       0       0       0       0
  1457 ;;      Locals:         0       0       0       0       0
  1458 ;;      Temps:          0       0       2       0       0
  1459 ;;      Totals:         0       0       2       0       0
  1460 ;;Total ram usage:        2 bytes
  1461 ;; Hardware stack levels used:    1
  1462 ;; Hardware stack levels required when called:    4
  1463 ;; This function calls:
  1464 ;;		_fLCD_RawSend
  1465 ;; This function is called by:
  1466 ;;		_main
  1467 ;;		_fLCD_Start
  1468 ;; This function uses a non-reentrant model
  1469 ;;
  1470                           
  1471                           
  1472                           ;psect for function _fLCD_Clear
  1473  0639                     _fLCD_Clear:	
  1474                           
  1475                           ;chrono.c: 158: fLCD_RawSend(0x01, 0);
  1476                           
  1477                           ;incstack = 0
  1478                           ; Regs used in _fLCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  1479  0639  1683               	bsf	3,5	;RP0=1, select bank1
  1480  063A  1303               	bcf	3,6	;RP1=0, select bank1
  1481  063B  01A0               	clrf	?_fLCD_RawSend^(0+128)
  1482  063C  3001               	movlw	1
  1483  063D  118A  2301  118A   	fcall	_fLCD_RawSend
  1484                           
  1485                           ;chrono.c: 159: _delay((unsigned long)((2)*(8000000/4000.0)));
  1486  0640  3006               	movlw	6
  1487  0641  1683               	bsf	3,5	;RP0=1, select bank1
  1488  0642  1303               	bcf	3,6	;RP1=0, select bank1
  1489  0643  00A6               	movwf	(??_fLCD_Clear^(0+128)+1)
  1490  0644  3030               	movlw	48
  1491  0645  00A5               	movwf	??_fLCD_Clear^(0+128)
  1492  0646                     u2567:	
  1493  0646  0BA5               	decfsz	??_fLCD_Clear^(0+128),f
  1494  0647  2E46               	goto	u2567
  1495  0648  0BA6               	decfsz	(??_fLCD_Clear^(0+128)+1),f
  1496  0649  2E46               	goto	u2567
  1497  064A  0000               	nop
  1498                           
  1499                           ;chrono.c: 160: fLCD_RawSend(0x02, 0);
  1500  064B  1683               	bsf	3,5	;RP0=1, select bank1
  1501  064C  1303               	bcf	3,6	;RP1=0, select bank1
  1502  064D  01A0               	clrf	?_fLCD_RawSend^(0+128)
  1503  064E  3002               	movlw	2
  1504  064F  118A  2301  118A   	fcall	_fLCD_RawSend
  1505                           
  1506                           ;chrono.c: 161: _delay((unsigned long)((2)*(8000000/4000.0)));
  1507  0652  3006               	movlw	6
  1508  0653  1683               	bsf	3,5	;RP0=1, select bank1
  1509  0654  1303               	bcf	3,6	;RP1=0, select bank1
  1510  0655  00A6               	movwf	(??_fLCD_Clear^(0+128)+1)
  1511  0656  3030               	movlw	48
  1512  0657  00A5               	movwf	??_fLCD_Clear^(0+128)
  1513  0658                     u2577:	
  1514  0658  0BA5               	decfsz	??_fLCD_Clear^(0+128),f
  1515  0659  2E58               	goto	u2577
  1516  065A  0BA6               	decfsz	(??_fLCD_Clear^(0+128)+1),f
  1517  065B  2E58               	goto	u2577
  1518  065C  0000               	nop
  1519  065D  0008               	return
  1520  065E                     __end_of_fLCD_Clear:	
  1521                           
  1522                           	psect	text6
  1523  0301                     __ptext6:	
  1524 ;; *************** function _fLCD_RawSend *****************
  1525 ;; Defined at:
  1526 ;;		line 112 in file "chrono.c"
  1527 ;; Parameters:    Size  Location     Type
  1528 ;;  in              1    wreg     unsigned char 
  1529 ;;  mask            1    0[BANK1 ] unsigned char 
  1530 ;; Auto vars:     Size  Location     Type
  1531 ;;  in              1    3[BANK1 ] unsigned char 
  1532 ;;  pt              1    4[BANK1 ] unsigned char 
  1533 ;; Return value:  Size  Location     Type
  1534 ;;		None               void
  1535 ;; Registers used:
  1536 ;;		wreg, status,2, status,0
  1537 ;; Tracked objects:
  1538 ;;		On entry : 0/0
  1539 ;;		On exit  : 0/0
  1540 ;;		Unchanged: 0/0
  1541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1542 ;;      Params:         0       0       1       0       0
  1543 ;;      Locals:         0       0       2       0       0
  1544 ;;      Temps:          0       0       2       0       0
  1545 ;;      Totals:         0       0       5       0       0
  1546 ;;Total ram usage:        5 bytes
  1547 ;; Hardware stack levels used:    1
  1548 ;; Hardware stack levels required when called:    3
  1549 ;; This function calls:
  1550 ;;		Nothing
  1551 ;; This function is called by:
  1552 ;;		_fLCD_Start
  1553 ;;		_fLCD_Clear
  1554 ;;		_fLCD_PrintNumber
  1555 ;;		_fLCD_PrintASCII
  1556 ;;		_fLCD_Command
  1557 ;;		_fLCD_Cursor
  1558 ;;		_fLCD_PrintString
  1559 ;;		_fLCD_ClearLine
  1560 ;; This function uses a non-reentrant model
  1561 ;;
  1562                           
  1563                           
  1564                           ;psect for function _fLCD_RawSend
  1565  0301                     _fLCD_RawSend:	
  1566                           
  1567                           ;incstack = 0
  1568                           ; Regs used in _fLCD_RawSend: [wreg+status,2+status,0]
  1569                           ;fLCD_RawSend@in stored from wreg
  1570  0301  1683               	bsf	3,5	;RP0=1, select bank1
  1571  0302  1303               	bcf	3,6	;RP1=0, select bank1
  1572  0303  00A3               	movwf	fLCD_RawSend@in^(0+128)
  1573                           
  1574                           ;chrono.c: 113: unsigned char pt;
  1575                           ;chrono.c: 114: PORTB = 0;
  1576  0304  1283               	bcf	3,5	;RP0=0, select bank0
  1577  0305  1303               	bcf	3,6	;RP1=0, select bank0
  1578  0306  0186               	clrf	6	;volatile
  1579                           
  1580                           ;chrono.c: 115: PORTA = 0;
  1581  0307  0185               	clrf	5	;volatile
  1582                           
  1583                           ;chrono.c: 116: pt = ((in >> 4) & 0x0f);
  1584  0308  1683               	bsf	3,5	;RP0=1, select bank1
  1585  0309  1303               	bcf	3,6	;RP1=0, select bank1
  1586  030A  0823               	movf	fLCD_RawSend@in^(0+128),w
  1587  030B  00A1               	movwf	??_fLCD_RawSend^(0+128)
  1588  030C  3004               	movlw	4
  1589  030D                     u2105:	
  1590  030D  1003               	clrc
  1591  030E  0CA1               	rrf	??_fLCD_RawSend^(0+128),f
  1592  030F  3EFF               	addlw	-1
  1593  0310  1D03               	skipz
  1594  0311  2B0D               	goto	u2105
  1595  0312  0821               	movf	??_fLCD_RawSend^(0+128),w
  1596  0313  390F               	andlw	15
  1597  0314  00A2               	movwf	(??_fLCD_RawSend+1)^(0+128)
  1598  0315  0822               	movf	(??_fLCD_RawSend+1)^(0+128),w
  1599  0316  00A4               	movwf	fLCD_RawSend@pt^(0+128)
  1600                           
  1601                           ;chrono.c: 117: if(pt & 0x01)
  1602  0317  1C24               	btfss	fLCD_RawSend@pt^(0+128),0
  1603  0318  2B1C               	goto	l95
  1604                           
  1605                           ;chrono.c: 118: PORTBbits.RB4 = 1;
  1606  0319  1283               	bcf	3,5	;RP0=0, select bank0
  1607  031A  1303               	bcf	3,6	;RP1=0, select bank0
  1608  031B  1606               	bsf	6,4	;volatile
  1609  031C                     l95:	
  1610                           
  1611                           ;chrono.c: 119: if(pt & 0x02)
  1612  031C  1683               	bsf	3,5	;RP0=1, select bank1
  1613  031D  1303               	bcf	3,6	;RP1=0, select bank1
  1614  031E  1CA4               	btfss	fLCD_RawSend@pt^(0+128),1
  1615  031F  2B23               	goto	l96
  1616                           
  1617                           ;chrono.c: 120: PORTBbits.RB1 = 1;
  1618  0320  1283               	bcf	3,5	;RP0=0, select bank0
  1619  0321  1303               	bcf	3,6	;RP1=0, select bank0
  1620  0322  1486               	bsf	6,1	;volatile
  1621  0323                     l96:	
  1622                           
  1623                           ;chrono.c: 121: if(pt & 0x04)
  1624  0323  1683               	bsf	3,5	;RP0=1, select bank1
  1625  0324  1303               	bcf	3,6	;RP1=0, select bank1
  1626  0325  1D24               	btfss	fLCD_RawSend@pt^(0+128),2
  1627  0326  2B2A               	goto	l97
  1628                           
  1629                           ;chrono.c: 122: PORTBbits.RB2 = 1;
  1630  0327  1283               	bcf	3,5	;RP0=0, select bank0
  1631  0328  1303               	bcf	3,6	;RP1=0, select bank0
  1632  0329  1506               	bsf	6,2	;volatile
  1633  032A                     l97:	
  1634                           
  1635                           ;chrono.c: 123: if(pt & 0x08)
  1636  032A  1683               	bsf	3,5	;RP0=1, select bank1
  1637  032B  1303               	bcf	3,6	;RP1=0, select bank1
  1638  032C  1DA4               	btfss	fLCD_RawSend@pt^(0+128),3
  1639  032D  2B31               	goto	l1982
  1640                           
  1641                           ;chrono.c: 124: PORTBbits.RB3 = 1;
  1642  032E  1283               	bcf	3,5	;RP0=0, select bank0
  1643  032F  1303               	bcf	3,6	;RP1=0, select bank0
  1644  0330  1586               	bsf	6,3	;volatile
  1645  0331                     l1982:	
  1646                           
  1647                           ;chrono.c: 125: if(mask)
  1648  0331  1683               	bsf	3,5	;RP0=1, select bank1
  1649  0332  1303               	bcf	3,6	;RP1=0, select bank1
  1650  0333  0820               	movf	fLCD_RawSend@mask^(0+128),w
  1651  0334  1903               	btfsc	3,2
  1652  0335  2B39               	goto	l1986
  1653                           
  1654                           ;chrono.c: 126: PORTAbits.RA1 = 1;
  1655  0336  1283               	bcf	3,5	;RP0=0, select bank0
  1656  0337  1303               	bcf	3,6	;RP1=0, select bank0
  1657  0338  1485               	bsf	5,1	;volatile
  1658  0339                     l1986:	
  1659                           
  1660                           ;chrono.c: 127: _delay((unsigned long)((120)*(8000000/4000000.0)));
  1661  0339  304F               	movlw	79
  1662  033A  1683               	bsf	3,5	;RP0=1, select bank1
  1663  033B  1303               	bcf	3,6	;RP1=0, select bank1
  1664  033C  00A1               	movwf	??_fLCD_RawSend^(0+128)
  1665  033D                     u2587:	
  1666  033D  0BA1               	decfsz	??_fLCD_RawSend^(0+128),f
  1667  033E  2B3D               	goto	u2587
  1668  033F  2B40               	nop2	;nop
  1669                           
  1670                           ;chrono.c: 128: PORTAbits.RA0 = 1;
  1671  0340  1283               	bcf	3,5	;RP0=0, select bank0
  1672  0341  1303               	bcf	3,6	;RP1=0, select bank0
  1673  0342  1405               	bsf	5,0	;volatile
  1674                           
  1675                           ;chrono.c: 129: _delay((unsigned long)((120)*(8000000/4000000.0)));
  1676  0343  304F               	movlw	79
  1677  0344  1683               	bsf	3,5	;RP0=1, select bank1
  1678  0345  1303               	bcf	3,6	;RP1=0, select bank1
  1679  0346  00A1               	movwf	??_fLCD_RawSend^(0+128)
  1680  0347                     u2597:	
  1681  0347  0BA1               	decfsz	??_fLCD_RawSend^(0+128),f
  1682  0348  2B47               	goto	u2597
  1683  0349  2B4A               	nop2	;nop
  1684                           
  1685                           ;chrono.c: 130: PORTAbits.RA0 = 0;
  1686  034A  1283               	bcf	3,5	;RP0=0, select bank0
  1687  034B  1303               	bcf	3,6	;RP1=0, select bank0
  1688  034C  1005               	bcf	5,0	;volatile
  1689                           
  1690                           ;chrono.c: 131: pt = (in & 0x0f);
  1691  034D  1683               	bsf	3,5	;RP0=1, select bank1
  1692  034E  1303               	bcf	3,6	;RP1=0, select bank1
  1693  034F  0823               	movf	fLCD_RawSend@in^(0+128),w
  1694  0350  390F               	andlw	15
  1695  0351  00A1               	movwf	??_fLCD_RawSend^(0+128)
  1696  0352  0821               	movf	??_fLCD_RawSend^(0+128),w
  1697  0353  00A4               	movwf	fLCD_RawSend@pt^(0+128)
  1698                           
  1699                           ;chrono.c: 132: _delay((unsigned long)((120)*(8000000/4000000.0)));
  1700  0354  304F               	movlw	79
  1701  0355  00A1               	movwf	??_fLCD_RawSend^(0+128)
  1702  0356                     u2607:	
  1703  0356  0BA1               	decfsz	??_fLCD_RawSend^(0+128),f
  1704  0357  2B56               	goto	u2607
  1705  0358  2B59               	nop2	;nop
  1706                           
  1707                           ;chrono.c: 133: PORTBbits.RB4 = 0;
  1708  0359  1283               	bcf	3,5	;RP0=0, select bank0
  1709  035A  1303               	bcf	3,6	;RP1=0, select bank0
  1710  035B  1206               	bcf	6,4	;volatile
  1711                           
  1712                           ;chrono.c: 134: PORTBbits.RB1 = 0;
  1713  035C  1086               	bcf	6,1	;volatile
  1714                           
  1715                           ;chrono.c: 135: PORTBbits.RB2 = 0;
  1716  035D  1106               	bcf	6,2	;volatile
  1717                           
  1718                           ;chrono.c: 136: PORTBbits.RB3 = 0;
  1719  035E  1186               	bcf	6,3	;volatile
  1720                           
  1721                           ;chrono.c: 137: PORTAbits.RA1 = 0;
  1722  035F  1085               	bcf	5,1	;volatile
  1723                           
  1724                           ;chrono.c: 138: PORTAbits.RA0 = 0;
  1725  0360  1005               	bcf	5,0	;volatile
  1726                           
  1727                           ;chrono.c: 139: if(pt & 0x01)
  1728  0361  1683               	bsf	3,5	;RP0=1, select bank1
  1729  0362  1303               	bcf	3,6	;RP1=0, select bank1
  1730  0363  1C24               	btfss	fLCD_RawSend@pt^(0+128),0
  1731  0364  2B68               	goto	l100
  1732                           
  1733                           ;chrono.c: 140: PORTBbits.RB4 = 1;
  1734  0365  1283               	bcf	3,5	;RP0=0, select bank0
  1735  0366  1303               	bcf	3,6	;RP1=0, select bank0
  1736  0367  1606               	bsf	6,4	;volatile
  1737  0368                     l100:	
  1738                           
  1739                           ;chrono.c: 141: if(pt & 0x02)
  1740  0368  1683               	bsf	3,5	;RP0=1, select bank1
  1741  0369  1303               	bcf	3,6	;RP1=0, select bank1
  1742  036A  1CA4               	btfss	fLCD_RawSend@pt^(0+128),1
  1743  036B  2B6F               	goto	l101
  1744                           
  1745                           ;chrono.c: 142: PORTBbits.RB1 = 1;
  1746  036C  1283               	bcf	3,5	;RP0=0, select bank0
  1747  036D  1303               	bcf	3,6	;RP1=0, select bank0
  1748  036E  1486               	bsf	6,1	;volatile
  1749  036F                     l101:	
  1750                           
  1751                           ;chrono.c: 143: if(pt & 0x04)
  1752  036F  1683               	bsf	3,5	;RP0=1, select bank1
  1753  0370  1303               	bcf	3,6	;RP1=0, select bank1
  1754  0371  1D24               	btfss	fLCD_RawSend@pt^(0+128),2
  1755  0372  2B76               	goto	l102
  1756                           
  1757                           ;chrono.c: 144: PORTBbits.RB2 = 1;
  1758  0373  1283               	bcf	3,5	;RP0=0, select bank0
  1759  0374  1303               	bcf	3,6	;RP1=0, select bank0
  1760  0375  1506               	bsf	6,2	;volatile
  1761  0376                     l102:	
  1762                           
  1763                           ;chrono.c: 145: if(pt & 0x08)
  1764  0376  1683               	bsf	3,5	;RP0=1, select bank1
  1765  0377  1303               	bcf	3,6	;RP1=0, select bank1
  1766  0378  1DA4               	btfss	fLCD_RawSend@pt^(0+128),3
  1767  0379  2B7D               	goto	l2018
  1768                           
  1769                           ;chrono.c: 146: PORTBbits.RB3 = 1;
  1770  037A  1283               	bcf	3,5	;RP0=0, select bank0
  1771  037B  1303               	bcf	3,6	;RP1=0, select bank0
  1772  037C  1586               	bsf	6,3	;volatile
  1773  037D                     l2018:	
  1774                           
  1775                           ;chrono.c: 147: if(mask)
  1776  037D  1683               	bsf	3,5	;RP0=1, select bank1
  1777  037E  1303               	bcf	3,6	;RP1=0, select bank1
  1778  037F  0820               	movf	fLCD_RawSend@mask^(0+128),w
  1779  0380  1903               	btfsc	3,2
  1780  0381  2B85               	goto	l2022
  1781                           
  1782                           ;chrono.c: 148: PORTAbits.RA1 = 1;
  1783  0382  1283               	bcf	3,5	;RP0=0, select bank0
  1784  0383  1303               	bcf	3,6	;RP1=0, select bank0
  1785  0384  1485               	bsf	5,1	;volatile
  1786  0385                     l2022:	
  1787                           
  1788                           ;chrono.c: 149: _delay((unsigned long)((120)*(8000000/4000000.0)));
  1789  0385  304F               	movlw	79
  1790  0386  1683               	bsf	3,5	;RP0=1, select bank1
  1791  0387  1303               	bcf	3,6	;RP1=0, select bank1
  1792  0388  00A1               	movwf	??_fLCD_RawSend^(0+128)
  1793  0389                     u2617:	
  1794  0389  0BA1               	decfsz	??_fLCD_RawSend^(0+128),f
  1795  038A  2B89               	goto	u2617
  1796  038B  2B8C               	nop2	;nop
  1797                           
  1798                           ;chrono.c: 150: PORTAbits.RA0 = 1;
  1799  038C  1283               	bcf	3,5	;RP0=0, select bank0
  1800  038D  1303               	bcf	3,6	;RP1=0, select bank0
  1801  038E  1405               	bsf	5,0	;volatile
  1802                           
  1803                           ;chrono.c: 151: _delay((unsigned long)((120)*(8000000/4000000.0)));
  1804  038F  304F               	movlw	79
  1805  0390  1683               	bsf	3,5	;RP0=1, select bank1
  1806  0391  1303               	bcf	3,6	;RP1=0, select bank1
  1807  0392  00A1               	movwf	??_fLCD_RawSend^(0+128)
  1808  0393                     u2627:	
  1809  0393  0BA1               	decfsz	??_fLCD_RawSend^(0+128),f
  1810  0394  2B93               	goto	u2627
  1811  0395  2B96               	nop2	;nop
  1812                           
  1813                           ;chrono.c: 152: PORTAbits.RA0 = 0;
  1814  0396  1283               	bcf	3,5	;RP0=0, select bank0
  1815  0397  1303               	bcf	3,6	;RP1=0, select bank0
  1816  0398  1005               	bcf	5,0	;volatile
  1817                           
  1818                           ;chrono.c: 153: _delay((unsigned long)((120)*(8000000/4000000.0)));
  1819  0399  304F               	movlw	79
  1820  039A  1683               	bsf	3,5	;RP0=1, select bank1
  1821  039B  1303               	bcf	3,6	;RP1=0, select bank1
  1822  039C  00A1               	movwf	??_fLCD_RawSend^(0+128)
  1823  039D                     u2637:	
  1824  039D  0BA1               	decfsz	??_fLCD_RawSend^(0+128),f
  1825  039E  2B9D               	goto	u2637
  1826  039F  2BA0               	nop2	;nop
  1827  03A0  0008               	return
  1828  03A1                     __end_of_fLCD_RawSend:	
  1829                           
  1830                           	psect	text7
  1831  065E                     __ptext7:	
  1832 ;; *************** function _startUp *****************
  1833 ;; Defined at:
  1834 ;;		line 322 in file "chrono.c"
  1835 ;; Parameters:    Size  Location     Type
  1836 ;;		None
  1837 ;; Auto vars:     Size  Location     Type
  1838 ;;		None
  1839 ;; Return value:  Size  Location     Type
  1840 ;;		None               void
  1841 ;; Registers used:
  1842 ;;		wreg, status,2, status,0, pclath, cstack
  1843 ;; Tracked objects:
  1844 ;;		On entry : 0/0
  1845 ;;		On exit  : 0/0
  1846 ;;		Unchanged: 0/0
  1847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1848 ;;      Params:         0       0       0       0       0
  1849 ;;      Locals:         0       0       0       0       0
  1850 ;;      Temps:          0       0       0       0       0
  1851 ;;      Totals:         0       0       0       0       0
  1852 ;;Total ram usage:        0 bytes
  1853 ;; Hardware stack levels used:    1
  1854 ;; Hardware stack levels required when called:    4
  1855 ;; This function calls:
  1856 ;;		_initializeInt
  1857 ;;		_initializeTimer0
  1858 ;;		_initializeTimer1
  1859 ;; This function is called by:
  1860 ;;		_main
  1861 ;; This function uses a non-reentrant model
  1862 ;;
  1863                           
  1864                           
  1865                           ;psect for function _startUp
  1866  065E                     _startUp:	
  1867                           
  1868                           ;chrono.c: 323: OSCCON = 0x70;
  1869                           
  1870                           ;incstack = 0
  1871                           ; Regs used in _startUp: [wreg+status,2+status,0+pclath+cstack]
  1872  065E  3070               	movlw	112
  1873  065F  1683               	bsf	3,5	;RP0=1, select bank1
  1874  0660  1303               	bcf	3,6	;RP1=0, select bank1
  1875  0661  008F               	movwf	15	;volatile
  1876                           
  1877                           ;chrono.c: 325: ANSEL = 0;
  1878  0662  019B               	clrf	27	;volatile
  1879                           
  1880                           ;chrono.c: 326: CMCON = 0x07;
  1881  0663  3007               	movlw	7
  1882  0664  009C               	movwf	28	;volatile
  1883                           
  1884                           ;chrono.c: 328: OPTION_REG = 0xc0;
  1885  0665  30C0               	movlw	192
  1886  0666  0081               	movwf	1	;volatile
  1887                           
  1888                           ;chrono.c: 330: TRISB = 0b00100001;
  1889  0667  3021               	movlw	33
  1890  0668  0086               	movwf	6	;volatile
  1891                           
  1892                           ;chrono.c: 331: TRISA = 0b11000000;
  1893  0669  30C0               	movlw	192
  1894  066A  0085               	movwf	5	;volatile
  1895                           
  1896                           ;chrono.c: 332: PORTB = 0;
  1897  066B  1283               	bcf	3,5	;RP0=0, select bank0
  1898  066C  1303               	bcf	3,6	;RP1=0, select bank0
  1899  066D  0186               	clrf	6	;volatile
  1900                           
  1901                           ;chrono.c: 333: PORTA = 0;
  1902  066E  0185               	clrf	5	;volatile
  1903                           
  1904                           ;chrono.c: 335: initializeInt();
  1905  066F  118A  268B  118A   	fcall	_initializeInt
  1906                           
  1907                           ;chrono.c: 336: initializeTimer0();
  1908  0672  118A  26A3  118A   	fcall	_initializeTimer0
  1909                           
  1910                           ;chrono.c: 337: initializeTimer1();
  1911  0675  118A  26B4         	fcall	_initializeTimer1
  1912  0677  0008               	return
  1913  0678                     __end_of_startUp:	
  1914                           
  1915                           	psect	text8
  1916  06B4                     __ptext8:	
  1917 ;; *************** function _initializeTimer1 *****************
  1918 ;; Defined at:
  1919 ;;		line 399 in file "chrono.c"
  1920 ;; Parameters:    Size  Location     Type
  1921 ;;		None
  1922 ;; Auto vars:     Size  Location     Type
  1923 ;;		None
  1924 ;; Return value:  Size  Location     Type
  1925 ;;		None               void
  1926 ;; Registers used:
  1927 ;;		wreg, status,2, status,0
  1928 ;; Tracked objects:
  1929 ;;		On entry : 0/0
  1930 ;;		On exit  : 0/0
  1931 ;;		Unchanged: 0/0
  1932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1933 ;;      Params:         0       0       0       0       0
  1934 ;;      Locals:         0       0       0       0       0
  1935 ;;      Temps:          0       0       0       0       0
  1936 ;;      Totals:         0       0       0       0       0
  1937 ;;Total ram usage:        0 bytes
  1938 ;; Hardware stack levels used:    1
  1939 ;; Hardware stack levels required when called:    3
  1940 ;; This function calls:
  1941 ;;		Nothing
  1942 ;; This function is called by:
  1943 ;;		_startUp
  1944 ;; This function uses a non-reentrant model
  1945 ;;
  1946                           
  1947                           
  1948                           ;psect for function _initializeTimer1
  1949  06B4                     _initializeTimer1:	
  1950                           
  1951                           ;chrono.c: 400: T1CONbits.T1CKPS = 0b00;
  1952                           
  1953                           ;incstack = 0
  1954                           ; Regs used in _initializeTimer1: [wreg+status,2+status,0]
  1955  06B4  30CF               	movlw	-49
  1956  06B5  1283               	bcf	3,5	;RP0=0, select bank0
  1957  06B6  1303               	bcf	3,6	;RP1=0, select bank0
  1958  06B7  0590               	andwf	16,f	;volatile
  1959                           
  1960                           ;chrono.c: 401: T1CONbits.T1OSCEN = 1;
  1961  06B8  1590               	bsf	16,3	;volatile
  1962                           
  1963                           ;chrono.c: 402: T1CONbits.TMR1CS = 0;
  1964  06B9  1090               	bcf	16,1	;volatile
  1965                           
  1966                           ;chrono.c: 403: T1CONbits.TMR1ON = 1;
  1967  06BA  1410               	bsf	16,0	;volatile
  1968  06BB  0008               	return
  1969  06BC                     __end_of_initializeTimer1:	
  1970                           
  1971                           	psect	text9
  1972  06A3                     __ptext9:	
  1973 ;; *************** function _initializeTimer0 *****************
  1974 ;; Defined at:
  1975 ;;		line 407 in file "chrono.c"
  1976 ;; Parameters:    Size  Location     Type
  1977 ;;		None
  1978 ;; Auto vars:     Size  Location     Type
  1979 ;;		None
  1980 ;; Return value:  Size  Location     Type
  1981 ;;		None               void
  1982 ;; Registers used:
  1983 ;;		wreg, status,2, status,0
  1984 ;; Tracked objects:
  1985 ;;		On entry : 0/0
  1986 ;;		On exit  : 0/0
  1987 ;;		Unchanged: 0/0
  1988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1989 ;;      Params:         0       0       0       0       0
  1990 ;;      Locals:         0       0       0       0       0
  1991 ;;      Temps:          0       0       0       0       0
  1992 ;;      Totals:         0       0       0       0       0
  1993 ;;Total ram usage:        0 bytes
  1994 ;; Hardware stack levels used:    1
  1995 ;; Hardware stack levels required when called:    3
  1996 ;; This function calls:
  1997 ;;		Nothing
  1998 ;; This function is called by:
  1999 ;;		_startUp
  2000 ;; This function uses a non-reentrant model
  2001 ;;
  2002                           
  2003                           
  2004                           ;psect for function _initializeTimer0
  2005  06A3                     _initializeTimer0:	
  2006                           
  2007                           ;chrono.c: 408: OPTION_REGbits.T0CS = 0;
  2008                           
  2009                           ;incstack = 0
  2010                           ; Regs used in _initializeTimer0: [wreg+status,2+status,0]
  2011  06A3  1683               	bsf	3,5	;RP0=1, select bank1
  2012  06A4  1303               	bcf	3,6	;RP1=0, select bank1
  2013  06A5  1281               	bcf	1,5	;volatile
  2014                           
  2015                           ;chrono.c: 409: OPTION_REGbits.PSA = 0;
  2016  06A6  1181               	bcf	1,3	;volatile
  2017                           
  2018                           ;chrono.c: 410: OPTION_REGbits.PS = 0b100;
  2019  06A7  0801               	movf	1,w	;volatile
  2020  06A8  39F8               	andlw	-8
  2021  06A9  3804               	iorlw	4
  2022  06AA  0081               	movwf	1	;volatile
  2023  06AB  0008               	return
  2024  06AC                     __end_of_initializeTimer0:	
  2025                           
  2026                           	psect	text10
  2027  068B                     __ptext10:	
  2028 ;; *************** function _initializeInt *****************
  2029 ;; Defined at:
  2030 ;;		line 388 in file "chrono.c"
  2031 ;; Parameters:    Size  Location     Type
  2032 ;;		None
  2033 ;; Auto vars:     Size  Location     Type
  2034 ;;		None
  2035 ;; Return value:  Size  Location     Type
  2036 ;;		None               void
  2037 ;; Registers used:
  2038 ;;		None
  2039 ;; Tracked objects:
  2040 ;;		On entry : 0/0
  2041 ;;		On exit  : 0/0
  2042 ;;		Unchanged: 0/0
  2043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2044 ;;      Params:         0       0       0       0       0
  2045 ;;      Locals:         0       0       0       0       0
  2046 ;;      Temps:          0       0       0       0       0
  2047 ;;      Totals:         0       0       0       0       0
  2048 ;;Total ram usage:        0 bytes
  2049 ;; Hardware stack levels used:    1
  2050 ;; Hardware stack levels required when called:    3
  2051 ;; This function calls:
  2052 ;;		Nothing
  2053 ;; This function is called by:
  2054 ;;		_startUp
  2055 ;; This function uses a non-reentrant model
  2056 ;;
  2057                           
  2058                           
  2059                           ;psect for function _initializeInt
  2060  068B                     _initializeInt:	
  2061                           
  2062                           ;chrono.c: 389: TMR1IE = 1;
  2063                           
  2064                           ;incstack = 0
  2065                           ; Regs used in _initializeInt: []
  2066  068B  1683               	bsf	3,5	;RP0=1, select bank1
  2067  068C  1303               	bcf	3,6	;RP1=0, select bank1
  2068  068D  140C               	bsf	12,0	;volatile
  2069                           
  2070                           ;chrono.c: 390: TMR0IE = 0;
  2071  068E  128B               	bcf	11,5	;volatile
  2072                           
  2073                           ;chrono.c: 391: (GIE = 1);
  2074  068F  178B               	bsf	11,7	;volatile
  2075                           
  2076                           ;chrono.c: 392: INTCONbits.PEIE = 1;
  2077  0690  170B               	bsf	11,6	;volatile
  2078                           
  2079                           ;chrono.c: 393: PIR1bits.RCIF = 0;
  2080  0691  1283               	bcf	3,5	;RP0=0, select bank0
  2081  0692  1303               	bcf	3,6	;RP1=0, select bank0
  2082  0693  128C               	bcf	12,5	;volatile
  2083                           
  2084                           ;chrono.c: 394: PIE1bits.RCIE = 0;
  2085  0694  1683               	bsf	3,5	;RP0=1, select bank1
  2086  0695  1303               	bcf	3,6	;RP1=0, select bank1
  2087  0696  128C               	bcf	12,5	;volatile
  2088                           
  2089                           ;chrono.c: 395: RBIE = 1;
  2090  0697  158B               	bsf	11,3	;volatile
  2091                           
  2092                           ;chrono.c: 396: INT0IE = 1;
  2093  0698  160B               	bsf	11,4	;volatile
  2094  0699  0008               	return
  2095  069A                     __end_of_initializeInt:	
  2096                           
  2097                           	psect	text11
  2098  042F                     __ptext11:	
  2099 ;; *************** function _isr *****************
  2100 ;; Defined at:
  2101 ;;		line 344 in file "chrono.c"
  2102 ;; Parameters:    Size  Location     Type
  2103 ;;		None
  2104 ;; Auto vars:     Size  Location     Type
  2105 ;;		None
  2106 ;; Return value:  Size  Location     Type
  2107 ;;		None               void
  2108 ;; Registers used:
  2109 ;;		wreg, status,2, status,0, pclath, cstack
  2110 ;; Tracked objects:
  2111 ;;		On entry : 0/0
  2112 ;;		On exit  : 0/0
  2113 ;;		Unchanged: 0/0
  2114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2115 ;;      Params:         0       0       0       0       0
  2116 ;;      Locals:         0       0       0       0       0
  2117 ;;      Temps:          0       7       0       0       0
  2118 ;;      Totals:         0       7       0       0       0
  2119 ;;Total ram usage:        7 bytes
  2120 ;; Hardware stack levels used:    1
  2121 ;; Hardware stack levels required when called:    2
  2122 ;; This function calls:
  2123 ;;		___ftadd
  2124 ;;		___ftmul
  2125 ;;		___lwtoft
  2126 ;; This function is called by:
  2127 ;;		Interrupt level 1
  2128 ;; This function uses a non-reentrant model
  2129 ;;
  2130                           
  2131                           
  2132                           ;psect for function _isr
  2133  042F                     _isr:	
  2134                           
  2135                           ;chrono.c: 346: if(RBIF){
  2136  042F  1C0B               	btfss	11,0	;volatile
  2137  0430  2C7B               	goto	i1l1830
  2138                           
  2139                           ;chrono.c: 347: tflag = PORTBbits.RB5;
  2140  0431  0E06               	swapf	6,w	;volatile
  2141  0432  00B7               	movwf	??_isr
  2142  0433  0C37               	rrf	??_isr,w
  2143  0434  3901               	andlw	1
  2144  0435  00B8               	movwf	??_isr+1
  2145  0436  01B9               	clrf	??_isr+2
  2146  0437  0838               	movf	??_isr+1,w
  2147  0438  00D5               	movwf	_tflag
  2148  0439  0839               	movf	??_isr+2,w
  2149  043A  00D6               	movwf	_tflag+1
  2150                           
  2151                           ;chrono.c: 348: RBIF = 0;
  2152  043B  100B               	bcf	11,0	;volatile
  2153                           
  2154                           ;chrono.c: 349: if(tflag == 1 && fflag == 1){
  2155  043C  3001               	movlw	1
  2156  043D  0655               	xorwf	_tflag,w
  2157  043E  0456               	iorwf	_tflag+1,w
  2158  043F  1D03               	skipz
  2159  0440  2C7B               	goto	i1l1830
  2160  0441  3001               	movlw	1
  2161  0442  0653               	xorwf	_fflag,w
  2162  0443  0454               	iorwf	_fflag+1,w
  2163  0444  1D03               	skipz
  2164  0445  2C7B               	goto	i1l1830
  2165                           
  2166                           ;chrono.c: 350: time = TMR1 + count*16384;
  2167  0446  0844               	movf	_count,w
  2168  0447  00FB               	movwf	?___ftmul+3
  2169  0448  0845               	movf	_count+1,w
  2170  0449  00FC               	movwf	?___ftmul+4
  2171  044A  0846               	movf	_count+2,w
  2172  044B  00FD               	movwf	?___ftmul+5
  2173  044C  3000               	movlw	0
  2174  044D  00F8               	movwf	?___ftmul
  2175  044E  3080               	movlw	128
  2176  044F  00F9               	movwf	?___ftmul+1
  2177  0450  3046               	movlw	70
  2178  0451  00FA               	movwf	?___ftmul+2
  2179  0452  118A  2231  118A   	fcall	___ftmul
  2180  0455  0878               	movf	?___ftmul,w
  2181  0456  1283               	bcf	3,5	;RP0=0, select bank0
  2182  0457  1303               	bcf	3,6	;RP1=0, select bank0
  2183  0458  00AA               	movwf	?___ftadd
  2184  0459  0879               	movf	?___ftmul+1,w
  2185  045A  00AB               	movwf	?___ftadd+1
  2186  045B  087A               	movf	?___ftmul+2,w
  2187  045C  00AC               	movwf	?___ftadd+2
  2188  045D  080F               	movf	15,w	;volatile
  2189  045E  01F9               	clrf	?___lwtoft+1
  2190  045F  07F9               	addwf	?___lwtoft+1,f
  2191  0460  080E               	movf	14,w	;volatile
  2192  0461  01F8               	clrf	?___lwtoft
  2193  0462  07F8               	addwf	?___lwtoft,f
  2194  0463  118A  2678  118A   	fcall	___lwtoft
  2195  0466  0878               	movf	?___lwtoft,w
  2196  0467  1283               	bcf	3,5	;RP0=0, select bank0
  2197  0468  1303               	bcf	3,6	;RP1=0, select bank0
  2198  0469  00AD               	movwf	?___ftadd+3
  2199  046A  0879               	movf	?___lwtoft+1,w
  2200  046B  00AE               	movwf	?___ftadd+4
  2201  046C  087A               	movf	?___lwtoft+2,w
  2202  046D  00AF               	movwf	?___ftadd+5
  2203  046E  118A  2129  118A   	fcall	___ftadd
  2204  0471  1283               	bcf	3,5	;RP0=0, select bank0
  2205  0472  1303               	bcf	3,6	;RP1=0, select bank0
  2206  0473  082A               	movf	?___ftadd,w
  2207  0474  00D0               	movwf	_time
  2208  0475  082B               	movf	?___ftadd+1,w
  2209  0476  00D1               	movwf	_time+1
  2210  0477  082C               	movf	?___ftadd+2,w
  2211  0478  00D2               	movwf	_time+2
  2212                           
  2213                           ;chrono.c: 351: fflag = 0;
  2214  0479  01D3               	clrf	_fflag
  2215  047A  01D4               	clrf	_fflag+1
  2216  047B                     i1l1830:	
  2217                           
  2218                           ;chrono.c: 352: }
  2219                           ;chrono.c: 365: }
  2220                           ;chrono.c: 366: if(INT0IF){
  2221  047B  1C8B               	btfss	11,1	;volatile
  2222  047C  2C8A               	goto	i1l1840
  2223                           
  2224                           ;chrono.c: 367: TMR1 = 0;
  2225  047D  018E               	clrf	14	;volatile
  2226  047E  018F               	clrf	15	;volatile
  2227                           
  2228                           ;chrono.c: 368: INT0IF = 0;
  2229  047F  108B               	bcf	11,1	;volatile
  2230                           
  2231                           ;chrono.c: 369: count = 0;
  2232  0480  3000               	movlw	0
  2233  0481  00C4               	movwf	_count
  2234  0482  3000               	movlw	0
  2235  0483  00C5               	movwf	_count+1
  2236  0484  3000               	movlw	0
  2237  0485  00C6               	movwf	_count+2
  2238                           
  2239                           ;chrono.c: 370: fflag = 1;
  2240  0486  3001               	movlw	1
  2241  0487  00D3               	movwf	_fflag
  2242  0488  3000               	movlw	0
  2243  0489  00D4               	movwf	_fflag+1
  2244  048A                     i1l1840:	
  2245                           
  2246                           ;chrono.c: 373: }
  2247                           ;chrono.c: 375: if(TMR1IF){
  2248  048A  1C0C               	btfss	12,0	;volatile
  2249  048B  2CA4               	goto	i1l178
  2250                           
  2251                           ;chrono.c: 376: TMR1IF = 0;
  2252  048C  100C               	bcf	12,0	;volatile
  2253                           
  2254                           ;chrono.c: 378: count++;
  2255  048D  3000               	movlw	0
  2256  048E  00AA               	movwf	?___ftadd
  2257  048F  3080               	movlw	128
  2258  0490  00AB               	movwf	?___ftadd+1
  2259  0491  303F               	movlw	63
  2260  0492  00AC               	movwf	?___ftadd+2
  2261  0493  0844               	movf	_count,w
  2262  0494  00AD               	movwf	?___ftadd+3
  2263  0495  0845               	movf	_count+1,w
  2264  0496  00AE               	movwf	?___ftadd+4
  2265  0497  0846               	movf	_count+2,w
  2266  0498  00AF               	movwf	?___ftadd+5
  2267  0499  118A  2129  118A   	fcall	___ftadd
  2268  049C  1283               	bcf	3,5	;RP0=0, select bank0
  2269  049D  1303               	bcf	3,6	;RP1=0, select bank0
  2270  049E  082A               	movf	?___ftadd,w
  2271  049F  00C4               	movwf	_count
  2272  04A0  082B               	movf	?___ftadd+1,w
  2273  04A1  00C5               	movwf	_count+1
  2274  04A2  082C               	movf	?___ftadd+2,w
  2275  04A3  00C6               	movwf	_count+2
  2276  04A4                     i1l178:	
  2277  04A4  083D               	movf	??_isr+6,w
  2278  04A5  00FF               	movwf	127
  2279  04A6  083C               	movf	??_isr+5,w
  2280  04A7  008A               	movwf	10
  2281  04A8  083B               	movf	??_isr+4,w
  2282  04A9  0084               	movwf	4
  2283  04AA  0E3A               	swapf	(??_isr+3)^0,w
  2284  04AB  0083               	movwf	3
  2285  04AC  0EFE               	swapf	126,f
  2286  04AD  0E7E               	swapf	126,w
  2287  04AE  0009               	retfie
  2288  04AF                     __end_of_isr:	
  2289                           
  2290                           	psect	intentry
  2291  0004                     __pintentry:	
  2292                           ;incstack = 0
  2293                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  2294                           
  2295  0004                     interrupt_function:	
  2296  007E                     saved_w	set	btemp
  2297  0004  00FE               	movwf	btemp
  2298  0005  0E03               	swapf	3,w
  2299  0006  1283               	bcf	3,5	;RP0=0, select bank0
  2300  0007  1303               	bcf	3,6	;RP1=0, select bank0
  2301  0008  00BA               	movwf	??_isr+3
  2302  0009  0804               	movf	4,w
  2303  000A  00BB               	movwf	??_isr+4
  2304  000B  080A               	movf	10,w
  2305  000C  00BC               	movwf	??_isr+5
  2306  000D  087F               	movf	btemp+1,w
  2307  000E  00BD               	movwf	??_isr+6
  2308  000F  118A  2C2F         	ljmp	_isr
  2309                           
  2310                           	psect	text12
  2311  0678                     __ptext12:	
  2312 ;; *************** function ___lwtoft *****************
  2313 ;; Defined at:
  2314 ;;		line 29 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\lwtoft.c"
  2315 ;; Parameters:    Size  Location     Type
  2316 ;;  c               2    8[COMMON] unsigned int 
  2317 ;; Auto vars:     Size  Location     Type
  2318 ;;		None
  2319 ;; Return value:  Size  Location     Type
  2320 ;;                  3    8[COMMON] float 
  2321 ;; Registers used:
  2322 ;;		wreg, status,2, status,0, pclath, cstack
  2323 ;; Tracked objects:
  2324 ;;		On entry : 0/0
  2325 ;;		On exit  : 0/0
  2326 ;;		Unchanged: 0/0
  2327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2328 ;;      Params:         3       0       0       0       0
  2329 ;;      Locals:         0       0       0       0       0
  2330 ;;      Temps:          1       0       0       0       0
  2331 ;;      Totals:         4       0       0       0       0
  2332 ;;Total ram usage:        4 bytes
  2333 ;; Hardware stack levels used:    1
  2334 ;; Hardware stack levels required when called:    1
  2335 ;; This function calls:
  2336 ;;		___ftpack
  2337 ;; This function is called by:
  2338 ;;		_isr
  2339 ;; This function uses a non-reentrant model
  2340 ;;
  2341                           
  2342                           
  2343                           ;psect for function ___lwtoft
  2344  0678                     ___lwtoft:	
  2345                           
  2346                           ;incstack = 0
  2347                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  2348  0678  0878               	movf	___lwtoft@c,w
  2349  0679  00F0               	movwf	?___ftpack
  2350  067A  0879               	movf	___lwtoft@c+1,w
  2351  067B  00F1               	movwf	?___ftpack+1
  2352  067C  01F2               	clrf	?___ftpack+2
  2353  067D  308E               	movlw	142
  2354  067E  00FB               	movwf	??___lwtoft
  2355  067F  087B               	movf	??___lwtoft,w
  2356  0680  00F3               	movwf	?___ftpack+3
  2357  0681  01F4               	clrf	?___ftpack+4
  2358  0682  118A  252D         	fcall	___ftpack
  2359  0684  0870               	movf	?___ftpack,w
  2360  0685  00F8               	movwf	?___lwtoft
  2361  0686  0871               	movf	?___ftpack+1,w
  2362  0687  00F9               	movwf	?___lwtoft+1
  2363  0688  0872               	movf	?___ftpack+2,w
  2364  0689  00FA               	movwf	?___lwtoft+2
  2365  068A  0008               	return
  2366  068B                     __end_of___lwtoft:	
  2367                           
  2368                           	psect	text13
  2369  0231                     __ptext13:	
  2370 ;; *************** function ___ftmul *****************
  2371 ;; Defined at:
  2372 ;;		line 52 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\ftmul.c"
  2373 ;; Parameters:    Size  Location     Type
  2374 ;;  f1              3    8[COMMON] float 
  2375 ;;  f2              3   11[COMMON] float 
  2376 ;; Auto vars:     Size  Location     Type
  2377 ;;  f3_as_produc    3    5[BANK0 ] unsigned um
  2378 ;;  sign            1    9[BANK0 ] unsigned char 
  2379 ;;  cntr            1    8[BANK0 ] unsigned char 
  2380 ;;  exp             1    4[BANK0 ] unsigned char 
  2381 ;; Return value:  Size  Location     Type
  2382 ;;                  3    8[COMMON] float 
  2383 ;; Registers used:
  2384 ;;		wreg, status,2, status,0, pclath, cstack
  2385 ;; Tracked objects:
  2386 ;;		On entry : 0/0
  2387 ;;		On exit  : 0/0
  2388 ;;		Unchanged: 0/0
  2389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2390 ;;      Params:         6       0       0       0       0
  2391 ;;      Locals:         0       6       0       0       0
  2392 ;;      Temps:          0       4       0       0       0
  2393 ;;      Totals:         6      10       0       0       0
  2394 ;;Total ram usage:       16 bytes
  2395 ;; Hardware stack levels used:    1
  2396 ;; Hardware stack levels required when called:    1
  2397 ;; This function calls:
  2398 ;;		___ftpack
  2399 ;; This function is called by:
  2400 ;;		_isr
  2401 ;; This function uses a non-reentrant model
  2402 ;;
  2403                           
  2404                           
  2405                           ;psect for function ___ftmul
  2406  0231                     ___ftmul:	
  2407                           
  2408                           ;incstack = 0
  2409                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  2410  0231  0878               	movf	___ftmul@f1,w
  2411  0232  1283               	bcf	3,5	;RP0=0, select bank0
  2412  0233  1303               	bcf	3,6	;RP1=0, select bank0
  2413  0234  00A0               	movwf	??___ftmul
  2414  0235  0879               	movf	___ftmul@f1+1,w
  2415  0236  00A1               	movwf	??___ftmul+1
  2416  0237  087A               	movf	___ftmul@f1+2,w
  2417  0238  00A2               	movwf	??___ftmul+2
  2418  0239  1003               	clrc
  2419  023A  0D21               	rlf	??___ftmul+1,w
  2420  023B  0D22               	rlf	??___ftmul+2,w
  2421  023C  00A3               	movwf	??___ftmul+3
  2422  023D  0823               	movf	??___ftmul+3,w
  2423  023E  00A4               	movwf	___ftmul@exp
  2424  023F  08A4               	movf	___ftmul@exp,f
  2425  0240  1D03               	skipz
  2426  0241  2A49               	goto	i1l1768
  2427  0242  3000               	movlw	0
  2428  0243  00F8               	movwf	?___ftmul
  2429  0244  3000               	movlw	0
  2430  0245  00F9               	movwf	?___ftmul+1
  2431  0246  3000               	movlw	0
  2432  0247  00FA               	movwf	?___ftmul+2
  2433  0248  0008               	return
  2434  0249                     i1l1768:	
  2435  0249  087B               	movf	___ftmul@f2,w
  2436  024A  00A0               	movwf	??___ftmul
  2437  024B  087C               	movf	___ftmul@f2+1,w
  2438  024C  00A1               	movwf	??___ftmul+1
  2439  024D  087D               	movf	___ftmul@f2+2,w
  2440  024E  00A2               	movwf	??___ftmul+2
  2441  024F  1003               	clrc
  2442  0250  0D21               	rlf	??___ftmul+1,w
  2443  0251  0D22               	rlf	??___ftmul+2,w
  2444  0252  00A3               	movwf	??___ftmul+3
  2445  0253  0823               	movf	??___ftmul+3,w
  2446  0254  00A9               	movwf	___ftmul@sign
  2447  0255  08A9               	movf	___ftmul@sign,f
  2448  0256  1D03               	skipz
  2449  0257  2A5F               	goto	i1l1774
  2450  0258  3000               	movlw	0
  2451  0259  00F8               	movwf	?___ftmul
  2452  025A  3000               	movlw	0
  2453  025B  00F9               	movwf	?___ftmul+1
  2454  025C  3000               	movlw	0
  2455  025D  00FA               	movwf	?___ftmul+2
  2456  025E  0008               	return
  2457  025F                     i1l1774:	
  2458  025F  0829               	movf	___ftmul@sign,w
  2459  0260  3E7B               	addlw	123
  2460  0261  00A0               	movwf	??___ftmul
  2461  0262  0820               	movf	??___ftmul,w
  2462  0263  07A4               	addwf	___ftmul@exp,f
  2463  0264  0878               	movf	___ftmul@f1,w
  2464  0265  00A0               	movwf	??___ftmul
  2465  0266  0879               	movf	___ftmul@f1+1,w
  2466  0267  00A1               	movwf	??___ftmul+1
  2467  0268  087A               	movf	___ftmul@f1+2,w
  2468  0269  00A2               	movwf	??___ftmul+2
  2469  026A  3010               	movlw	16
  2470  026B                     u184_25:	
  2471  026B  1003               	clrc
  2472  026C  0CA2               	rrf	??___ftmul+2,f
  2473  026D  0CA1               	rrf	??___ftmul+1,f
  2474  026E  0CA0               	rrf	??___ftmul,f
  2475  026F  3EFF               	addlw	-1
  2476  0270  1D03               	skipz
  2477  0271  2A6B               	goto	u184_25
  2478  0272  0820               	movf	??___ftmul,w
  2479  0273  00A3               	movwf	??___ftmul+3
  2480  0274  0823               	movf	??___ftmul+3,w
  2481  0275  00A9               	movwf	___ftmul@sign
  2482  0276  087B               	movf	___ftmul@f2,w
  2483  0277  00A0               	movwf	??___ftmul
  2484  0278  087C               	movf	___ftmul@f2+1,w
  2485  0279  00A1               	movwf	??___ftmul+1
  2486  027A  087D               	movf	___ftmul@f2+2,w
  2487  027B  00A2               	movwf	??___ftmul+2
  2488  027C  3010               	movlw	16
  2489  027D                     u185_25:	
  2490  027D  1003               	clrc
  2491  027E  0CA2               	rrf	??___ftmul+2,f
  2492  027F  0CA1               	rrf	??___ftmul+1,f
  2493  0280  0CA0               	rrf	??___ftmul,f
  2494  0281  3EFF               	addlw	-1
  2495  0282  1D03               	skipz
  2496  0283  2A7D               	goto	u185_25
  2497  0284  0820               	movf	??___ftmul,w
  2498  0285  00A3               	movwf	??___ftmul+3
  2499  0286  0823               	movf	??___ftmul+3,w
  2500  0287  06A9               	xorwf	___ftmul@sign,f
  2501  0288  3080               	movlw	128
  2502  0289  00A0               	movwf	??___ftmul
  2503  028A  0820               	movf	??___ftmul,w
  2504  028B  05A9               	andwf	___ftmul@sign,f
  2505  028C  17F9               	bsf	___ftmul@f1+1,7
  2506  028D  17FC               	bsf	___ftmul@f2+1,7
  2507  028E  30FF               	movlw	255
  2508  028F  05FB               	andwf	___ftmul@f2,f
  2509  0290  30FF               	movlw	255
  2510  0291  05FC               	andwf	___ftmul@f2+1,f
  2511  0292  3000               	movlw	0
  2512  0293  05FD               	andwf	___ftmul@f2+2,f
  2513  0294  3000               	movlw	0
  2514  0295  00A5               	movwf	___ftmul@f3_as_product
  2515  0296  3000               	movlw	0
  2516  0297  00A6               	movwf	___ftmul@f3_as_product+1
  2517  0298  3000               	movlw	0
  2518  0299  00A7               	movwf	___ftmul@f3_as_product+2
  2519  029A  3007               	movlw	7
  2520  029B  00A0               	movwf	??___ftmul
  2521  029C  0820               	movf	??___ftmul,w
  2522  029D  00A8               	movwf	___ftmul@cntr
  2523  029E                     i1l1786:	
  2524  029E  1C78               	btfss	___ftmul@f1,0
  2525  029F  2AAE               	goto	i1l1790
  2526  02A0  087B               	movf	___ftmul@f2,w
  2527  02A1  07A5               	addwf	___ftmul@f3_as_product,f
  2528  02A2  087C               	movf	___ftmul@f2+1,w
  2529  02A3  1103               	clrz
  2530  02A4  1803               	skipnc
  2531  02A5  0A7C               	incf	___ftmul@f2+1,w
  2532  02A6  1D03               	btfss	3,2
  2533  02A7  07A6               	addwf	___ftmul@f3_as_product+1,f
  2534  02A8  087D               	movf	___ftmul@f2+2,w
  2535  02A9  1103               	clrz
  2536  02AA  1803               	skipnc
  2537  02AB  0A7D               	incf	___ftmul@f2+2,w
  2538  02AC  1D03               	btfss	3,2
  2539  02AD  07A7               	addwf	___ftmul@f3_as_product+2,f
  2540  02AE                     i1l1790:	
  2541  02AE  3001               	movlw	1
  2542  02AF                     u188_25:	
  2543  02AF  1003               	clrc
  2544  02B0  0CFA               	rrf	___ftmul@f1+2,f
  2545  02B1  0CF9               	rrf	___ftmul@f1+1,f
  2546  02B2  0CF8               	rrf	___ftmul@f1,f
  2547  02B3  3EFF               	addlw	-1
  2548  02B4  1D03               	skipz
  2549  02B5  2AAF               	goto	u188_25
  2550  02B6  3001               	movlw	1
  2551  02B7                     u189_25:	
  2552  02B7  1003               	clrc
  2553  02B8  0DFB               	rlf	___ftmul@f2,f
  2554  02B9  0DFC               	rlf	___ftmul@f2+1,f
  2555  02BA  0DFD               	rlf	___ftmul@f2+2,f
  2556  02BB  3EFF               	addlw	-1
  2557  02BC  1D03               	skipz
  2558  02BD  2AB7               	goto	u189_25
  2559  02BE  3001               	movlw	1
  2560  02BF  02A8               	subwf	___ftmul@cntr,f
  2561  02C0  1D03               	btfss	3,2
  2562  02C1  2A9E               	goto	i1l1786
  2563  02C2  3009               	movlw	9
  2564  02C3  00A0               	movwf	??___ftmul
  2565  02C4  0820               	movf	??___ftmul,w
  2566  02C5  00A8               	movwf	___ftmul@cntr
  2567  02C6                     i1l1798:	
  2568  02C6  1C78               	btfss	___ftmul@f1,0
  2569  02C7  2AD6               	goto	i1l1802
  2570  02C8  087B               	movf	___ftmul@f2,w
  2571  02C9  07A5               	addwf	___ftmul@f3_as_product,f
  2572  02CA  087C               	movf	___ftmul@f2+1,w
  2573  02CB  1103               	clrz
  2574  02CC  1803               	skipnc
  2575  02CD  0A7C               	incf	___ftmul@f2+1,w
  2576  02CE  1D03               	btfss	3,2
  2577  02CF  07A6               	addwf	___ftmul@f3_as_product+1,f
  2578  02D0  087D               	movf	___ftmul@f2+2,w
  2579  02D1  1103               	clrz
  2580  02D2  1803               	skipnc
  2581  02D3  0A7D               	incf	___ftmul@f2+2,w
  2582  02D4  1D03               	btfss	3,2
  2583  02D5  07A7               	addwf	___ftmul@f3_as_product+2,f
  2584  02D6                     i1l1802:	
  2585  02D6  3001               	movlw	1
  2586  02D7                     u193_25:	
  2587  02D7  1003               	clrc
  2588  02D8  0CFA               	rrf	___ftmul@f1+2,f
  2589  02D9  0CF9               	rrf	___ftmul@f1+1,f
  2590  02DA  0CF8               	rrf	___ftmul@f1,f
  2591  02DB  3EFF               	addlw	-1
  2592  02DC  1D03               	skipz
  2593  02DD  2AD7               	goto	u193_25
  2594  02DE  3001               	movlw	1
  2595  02DF                     u194_25:	
  2596  02DF  1003               	clrc
  2597  02E0  0CA7               	rrf	___ftmul@f3_as_product+2,f
  2598  02E1  0CA6               	rrf	___ftmul@f3_as_product+1,f
  2599  02E2  0CA5               	rrf	___ftmul@f3_as_product,f
  2600  02E3  3EFF               	addlw	-1
  2601  02E4  1D03               	skipz
  2602  02E5  2ADF               	goto	u194_25
  2603  02E6  3001               	movlw	1
  2604  02E7  02A8               	subwf	___ftmul@cntr,f
  2605  02E8  1D03               	btfss	3,2
  2606  02E9  2AC6               	goto	i1l1798
  2607  02EA  0825               	movf	___ftmul@f3_as_product,w
  2608  02EB  00F0               	movwf	?___ftpack
  2609  02EC  0826               	movf	___ftmul@f3_as_product+1,w
  2610  02ED  00F1               	movwf	?___ftpack+1
  2611  02EE  0827               	movf	___ftmul@f3_as_product+2,w
  2612  02EF  00F2               	movwf	?___ftpack+2
  2613  02F0  0824               	movf	___ftmul@exp,w
  2614  02F1  00A0               	movwf	??___ftmul
  2615  02F2  0820               	movf	??___ftmul,w
  2616  02F3  00F3               	movwf	?___ftpack+3
  2617  02F4  0829               	movf	___ftmul@sign,w
  2618  02F5  00A1               	movwf	??___ftmul+1
  2619  02F6  0821               	movf	??___ftmul+1,w
  2620  02F7  00F4               	movwf	?___ftpack+4
  2621  02F8  118A  252D         	fcall	___ftpack
  2622  02FA  0870               	movf	?___ftpack,w
  2623  02FB  00F8               	movwf	?___ftmul
  2624  02FC  0871               	movf	?___ftpack+1,w
  2625  02FD  00F9               	movwf	?___ftmul+1
  2626  02FE  0872               	movf	?___ftpack+2,w
  2627  02FF  00FA               	movwf	?___ftmul+2
  2628  0300  0008               	return
  2629  0301                     __end_of___ftmul:	
  2630                           
  2631                           	psect	text14
  2632  0129                     __ptext14:	
  2633 ;; *************** function ___ftadd *****************
  2634 ;; Defined at:
  2635 ;;		line 87 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\ftadd.c"
  2636 ;; Parameters:    Size  Location     Type
  2637 ;;  f1              3   10[BANK0 ] float 
  2638 ;;  f2              3   13[BANK0 ] float 
  2639 ;; Auto vars:     Size  Location     Type
  2640 ;;  exp1            1   22[BANK0 ] unsigned char 
  2641 ;;  exp2            1   21[BANK0 ] unsigned char 
  2642 ;;  sign            1   20[BANK0 ] unsigned char 
  2643 ;; Return value:  Size  Location     Type
  2644 ;;                  3   10[BANK0 ] float 
  2645 ;; Registers used:
  2646 ;;		wreg, status,2, status,0, pclath, cstack
  2647 ;; Tracked objects:
  2648 ;;		On entry : 0/0
  2649 ;;		On exit  : 0/0
  2650 ;;		Unchanged: 0/0
  2651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2652 ;;      Params:         0       6       0       0       0
  2653 ;;      Locals:         0       3       0       0       0
  2654 ;;      Temps:          0       4       0       0       0
  2655 ;;      Totals:         0      13       0       0       0
  2656 ;;Total ram usage:       13 bytes
  2657 ;; Hardware stack levels used:    1
  2658 ;; Hardware stack levels required when called:    1
  2659 ;; This function calls:
  2660 ;;		___ftpack
  2661 ;; This function is called by:
  2662 ;;		_isr
  2663 ;; This function uses a non-reentrant model
  2664 ;;
  2665                           
  2666                           
  2667                           ;psect for function ___ftadd
  2668  0129                     ___ftadd:	
  2669                           
  2670                           ;incstack = 0
  2671                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  2672  0129  1283               	bcf	3,5	;RP0=0, select bank0
  2673  012A  1303               	bcf	3,6	;RP1=0, select bank0
  2674  012B  082A               	movf	___ftadd@f1,w
  2675  012C  00B0               	movwf	??___ftadd
  2676  012D  082B               	movf	___ftadd@f1+1,w
  2677  012E  00B1               	movwf	??___ftadd+1
  2678  012F  082C               	movf	___ftadd@f1+2,w
  2679  0130  00B2               	movwf	??___ftadd+2
  2680  0131  1003               	clrc
  2681  0132  0D31               	rlf	??___ftadd+1,w
  2682  0133  0D32               	rlf	??___ftadd+2,w
  2683  0134  00B3               	movwf	??___ftadd+3
  2684  0135  0833               	movf	??___ftadd+3,w
  2685  0136  00B6               	movwf	___ftadd@exp1
  2686  0137  082D               	movf	___ftadd@f2,w
  2687  0138  00B0               	movwf	??___ftadd
  2688  0139  082E               	movf	___ftadd@f2+1,w
  2689  013A  00B1               	movwf	??___ftadd+1
  2690  013B  082F               	movf	___ftadd@f2+2,w
  2691  013C  00B2               	movwf	??___ftadd+2
  2692  013D  1003               	clrc
  2693  013E  0D31               	rlf	??___ftadd+1,w
  2694  013F  0D32               	rlf	??___ftadd+2,w
  2695  0140  00B3               	movwf	??___ftadd+3
  2696  0141  0833               	movf	??___ftadd+3,w
  2697  0142  00B5               	movwf	___ftadd@exp2
  2698  0143  0836               	movf	___ftadd@exp1,w
  2699  0144  1903               	btfsc	3,2
  2700  0145  2952               	goto	i1l1698
  2701  0146  0835               	movf	___ftadd@exp2,w
  2702  0147  0236               	subwf	___ftadd@exp1,w
  2703  0148  1803               	skipnc
  2704  0149  2959               	goto	i1l1702
  2705  014A  0336               	decf	___ftadd@exp1,w
  2706  014B  3AFF               	xorlw	255
  2707  014C  0735               	addwf	___ftadd@exp2,w
  2708  014D  00B0               	movwf	??___ftadd
  2709  014E  3019               	movlw	25
  2710  014F  0230               	subwf	??___ftadd,w
  2711  0150  1C03               	skipc
  2712  0151  2959               	goto	i1l1702
  2713  0152                     i1l1698:	
  2714  0152  082D               	movf	___ftadd@f2,w
  2715  0153  00AA               	movwf	?___ftadd
  2716  0154  082E               	movf	___ftadd@f2+1,w
  2717  0155  00AB               	movwf	?___ftadd+1
  2718  0156  082F               	movf	___ftadd@f2+2,w
  2719  0157  00AC               	movwf	?___ftadd+2
  2720  0158  0008               	return
  2721  0159                     i1l1702:	
  2722  0159  0835               	movf	___ftadd@exp2,w
  2723  015A  1903               	btfsc	3,2
  2724  015B  0008               	return
  2725  015C  0836               	movf	___ftadd@exp1,w
  2726  015D  0235               	subwf	___ftadd@exp2,w
  2727  015E  1803               	skipnc
  2728  015F  2968               	goto	i1l1708
  2729  0160  0335               	decf	___ftadd@exp2,w
  2730  0161  3AFF               	xorlw	255
  2731  0162  0736               	addwf	___ftadd@exp1,w
  2732  0163  00B0               	movwf	??___ftadd
  2733  0164  3019               	movlw	25
  2734  0165  0230               	subwf	??___ftadd,w
  2735  0166  1803               	btfsc	3,0
  2736  0167  0008               	return
  2737  0168                     i1l1708:	
  2738  0168  3006               	movlw	6
  2739  0169  00B0               	movwf	??___ftadd
  2740  016A  0830               	movf	??___ftadd,w
  2741  016B  00B4               	movwf	___ftadd@sign
  2742  016C  1BAC               	btfsc	___ftadd@f1+2,7
  2743  016D  17B4               	bsf	___ftadd@sign,7
  2744  016E  1BAF               	btfsc	___ftadd@f2+2,7
  2745  016F  1734               	bsf	___ftadd@sign,6
  2746  0170  17AB               	bsf	___ftadd@f1+1,7
  2747  0171  30FF               	movlw	255
  2748  0172  05AA               	andwf	___ftadd@f1,f
  2749  0173  30FF               	movlw	255
  2750  0174  05AB               	andwf	___ftadd@f1+1,f
  2751  0175  3000               	movlw	0
  2752  0176  05AC               	andwf	___ftadd@f1+2,f
  2753  0177  17AE               	bsf	___ftadd@f2+1,7
  2754  0178  30FF               	movlw	255
  2755  0179  05AD               	andwf	___ftadd@f2,f
  2756  017A  30FF               	movlw	255
  2757  017B  05AE               	andwf	___ftadd@f2+1,f
  2758  017C  3000               	movlw	0
  2759  017D  05AF               	andwf	___ftadd@f2+2,f
  2760  017E  0835               	movf	___ftadd@exp2,w
  2761  017F  0236               	subwf	___ftadd@exp1,w
  2762  0180  1803               	skipnc
  2763  0181  29A8               	goto	i1l1730
  2764  0182                     i1l1720:	
  2765  0182  3001               	movlw	1
  2766  0183                     u167_25:	
  2767  0183  1003               	clrc
  2768  0184  0DAD               	rlf	___ftadd@f2,f
  2769  0185  0DAE               	rlf	___ftadd@f2+1,f
  2770  0186  0DAF               	rlf	___ftadd@f2+2,f
  2771  0187  3EFF               	addlw	-1
  2772  0188  1D03               	skipz
  2773  0189  2983               	goto	u167_25
  2774  018A  3001               	movlw	1
  2775  018B  02B5               	subwf	___ftadd@exp2,f
  2776  018C  0835               	movf	___ftadd@exp2,w
  2777  018D  0636               	xorwf	___ftadd@exp1,w
  2778  018E  1903               	skipnz
  2779  018F  29A3               	goto	i1l1728
  2780  0190  3001               	movlw	1
  2781  0191  02B4               	subwf	___ftadd@sign,f
  2782  0192  0834               	movf	___ftadd@sign,w
  2783  0193  3907               	andlw	7
  2784  0194  1903               	btfsc	3,2
  2785  0195  29A3               	goto	i1l1728
  2786  0196  2982               	goto	i1l1720
  2787  0197                     i1l1726:	
  2788  0197  3001               	movlw	1
  2789  0198                     u170_25:	
  2790  0198  1003               	clrc
  2791  0199  0CAC               	rrf	___ftadd@f1+2,f
  2792  019A  0CAB               	rrf	___ftadd@f1+1,f
  2793  019B  0CAA               	rrf	___ftadd@f1,f
  2794  019C  3EFF               	addlw	-1
  2795  019D  1D03               	skipz
  2796  019E  2998               	goto	u170_25
  2797  019F  3001               	movlw	1
  2798  01A0  00B0               	movwf	??___ftadd
  2799  01A1  0830               	movf	??___ftadd,w
  2800  01A2  07B6               	addwf	___ftadd@exp1,f
  2801  01A3                     i1l1728:	
  2802  01A3  0836               	movf	___ftadd@exp1,w
  2803  01A4  0635               	xorwf	___ftadd@exp2,w
  2804  01A5  1903               	btfsc	3,2
  2805  01A6  29D1               	goto	i1l443
  2806  01A7  2997               	goto	i1l1726
  2807  01A8                     i1l1730:	
  2808  01A8  0836               	movf	___ftadd@exp1,w
  2809  01A9  0235               	subwf	___ftadd@exp2,w
  2810  01AA  1803               	skipnc
  2811  01AB  29D1               	goto	i1l443
  2812  01AC                     i1l1732:	
  2813  01AC  3001               	movlw	1
  2814  01AD                     u173_25:	
  2815  01AD  1003               	clrc
  2816  01AE  0DAA               	rlf	___ftadd@f1,f
  2817  01AF  0DAB               	rlf	___ftadd@f1+1,f
  2818  01B0  0DAC               	rlf	___ftadd@f1+2,f
  2819  01B1  3EFF               	addlw	-1
  2820  01B2  1D03               	skipz
  2821  01B3  29AD               	goto	u173_25
  2822  01B4  3001               	movlw	1
  2823  01B5  02B6               	subwf	___ftadd@exp1,f
  2824  01B6  0835               	movf	___ftadd@exp2,w
  2825  01B7  0636               	xorwf	___ftadd@exp1,w
  2826  01B8  1903               	skipnz
  2827  01B9  29CD               	goto	i1l1740
  2828  01BA  3001               	movlw	1
  2829  01BB  02B4               	subwf	___ftadd@sign,f
  2830  01BC  0834               	movf	___ftadd@sign,w
  2831  01BD  3907               	andlw	7
  2832  01BE  1903               	btfsc	3,2
  2833  01BF  29CD               	goto	i1l1740
  2834  01C0  29AC               	goto	i1l1732
  2835  01C1                     i1l1738:	
  2836  01C1  3001               	movlw	1
  2837  01C2                     u176_25:	
  2838  01C2  1003               	clrc
  2839  01C3  0CAF               	rrf	___ftadd@f2+2,f
  2840  01C4  0CAE               	rrf	___ftadd@f2+1,f
  2841  01C5  0CAD               	rrf	___ftadd@f2,f
  2842  01C6  3EFF               	addlw	-1
  2843  01C7  1D03               	skipz
  2844  01C8  29C2               	goto	u176_25
  2845  01C9  3001               	movlw	1
  2846  01CA  00B0               	movwf	??___ftadd
  2847  01CB  0830               	movf	??___ftadd,w
  2848  01CC  07B5               	addwf	___ftadd@exp2,f
  2849  01CD                     i1l1740:	
  2850  01CD  0836               	movf	___ftadd@exp1,w
  2851  01CE  0635               	xorwf	___ftadd@exp2,w
  2852  01CF  1D03               	skipz
  2853  01D0  29C1               	goto	i1l1738
  2854  01D1                     i1l443:	
  2855  01D1  1FB4               	btfss	___ftadd@sign,7
  2856  01D2  29E3               	goto	i1l1744
  2857  01D3  30FF               	movlw	255
  2858  01D4  06AA               	xorwf	___ftadd@f1,f
  2859  01D5  30FF               	movlw	255
  2860  01D6  06AB               	xorwf	___ftadd@f1+1,f
  2861  01D7  30FF               	movlw	255
  2862  01D8  06AC               	xorwf	___ftadd@f1+2,f
  2863  01D9  3001               	movlw	1
  2864  01DA  07AA               	addwf	___ftadd@f1,f
  2865  01DB  3000               	movlw	0
  2866  01DC  1803               	skipnc
  2867  01DD  3001               	movlw	1
  2868  01DE  07AB               	addwf	___ftadd@f1+1,f
  2869  01DF  3000               	movlw	0
  2870  01E0  1803               	skipnc
  2871  01E1  3001               	movlw	1
  2872  01E2  07AC               	addwf	___ftadd@f1+2,f
  2873  01E3                     i1l1744:	
  2874  01E3  1F34               	btfss	___ftadd@sign,6
  2875  01E4  29F5               	goto	i1l1748
  2876  01E5  30FF               	movlw	255
  2877  01E6  06AD               	xorwf	___ftadd@f2,f
  2878  01E7  30FF               	movlw	255
  2879  01E8  06AE               	xorwf	___ftadd@f2+1,f
  2880  01E9  30FF               	movlw	255
  2881  01EA  06AF               	xorwf	___ftadd@f2+2,f
  2882  01EB  3001               	movlw	1
  2883  01EC  07AD               	addwf	___ftadd@f2,f
  2884  01ED  3000               	movlw	0
  2885  01EE  1803               	skipnc
  2886  01EF  3001               	movlw	1
  2887  01F0  07AE               	addwf	___ftadd@f2+1,f
  2888  01F1  3000               	movlw	0
  2889  01F2  1803               	skipnc
  2890  01F3  3001               	movlw	1
  2891  01F4  07AF               	addwf	___ftadd@f2+2,f
  2892  01F5                     i1l1748:	
  2893  01F5  01B4               	clrf	___ftadd@sign
  2894  01F6  082A               	movf	___ftadd@f1,w
  2895  01F7  07AD               	addwf	___ftadd@f2,f
  2896  01F8  082B               	movf	___ftadd@f1+1,w
  2897  01F9  1103               	clrz
  2898  01FA  1803               	skipnc
  2899  01FB  0A2B               	incf	___ftadd@f1+1,w
  2900  01FC  1D03               	btfss	3,2
  2901  01FD  07AE               	addwf	___ftadd@f2+1,f
  2902  01FE  082C               	movf	___ftadd@f1+2,w
  2903  01FF  1103               	clrz
  2904  0200  1803               	skipnc
  2905  0201  0A2C               	incf	___ftadd@f1+2,w
  2906  0202  1D03               	btfss	3,2
  2907  0203  07AF               	addwf	___ftadd@f2+2,f
  2908  0204  1FAF               	btfss	___ftadd@f2+2,7
  2909  0205  2A18               	goto	i1l1758
  2910  0206  30FF               	movlw	255
  2911  0207  06AD               	xorwf	___ftadd@f2,f
  2912  0208  30FF               	movlw	255
  2913  0209  06AE               	xorwf	___ftadd@f2+1,f
  2914  020A  30FF               	movlw	255
  2915  020B  06AF               	xorwf	___ftadd@f2+2,f
  2916  020C  3001               	movlw	1
  2917  020D  07AD               	addwf	___ftadd@f2,f
  2918  020E  3000               	movlw	0
  2919  020F  1803               	skipnc
  2920  0210  3001               	movlw	1
  2921  0211  07AE               	addwf	___ftadd@f2+1,f
  2922  0212  3000               	movlw	0
  2923  0213  1803               	skipnc
  2924  0214  3001               	movlw	1
  2925  0215  07AF               	addwf	___ftadd@f2+2,f
  2926  0216  01B4               	clrf	___ftadd@sign
  2927  0217  0AB4               	incf	___ftadd@sign,f
  2928  0218                     i1l1758:	
  2929  0218  082D               	movf	___ftadd@f2,w
  2930  0219  00F0               	movwf	?___ftpack
  2931  021A  082E               	movf	___ftadd@f2+1,w
  2932  021B  00F1               	movwf	?___ftpack+1
  2933  021C  082F               	movf	___ftadd@f2+2,w
  2934  021D  00F2               	movwf	?___ftpack+2
  2935  021E  0836               	movf	___ftadd@exp1,w
  2936  021F  00B0               	movwf	??___ftadd
  2937  0220  0830               	movf	??___ftadd,w
  2938  0221  00F3               	movwf	?___ftpack+3
  2939  0222  0834               	movf	___ftadd@sign,w
  2940  0223  00B1               	movwf	??___ftadd+1
  2941  0224  0831               	movf	??___ftadd+1,w
  2942  0225  00F4               	movwf	?___ftpack+4
  2943  0226  118A  252D         	fcall	___ftpack
  2944  0228  0870               	movf	?___ftpack,w
  2945  0229  1283               	bcf	3,5	;RP0=0, select bank0
  2946  022A  1303               	bcf	3,6	;RP1=0, select bank0
  2947  022B  00AA               	movwf	?___ftadd
  2948  022C  0871               	movf	?___ftpack+1,w
  2949  022D  00AB               	movwf	?___ftadd+1
  2950  022E  0872               	movf	?___ftpack+2,w
  2951  022F  00AC               	movwf	?___ftadd+2
  2952  0230  0008               	return
  2953  0231                     __end_of___ftadd:	
  2954                           
  2955                           	psect	text15
  2956  052D                     __ptext15:	
  2957 ;; *************** function ___ftpack *****************
  2958 ;; Defined at:
  2959 ;;		line 63 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\float.c"
  2960 ;; Parameters:    Size  Location     Type
  2961 ;;  arg             3    0[COMMON] unsigned um
  2962 ;;  exp             1    3[COMMON] unsigned char 
  2963 ;;  sign            1    4[COMMON] unsigned char 
  2964 ;; Auto vars:     Size  Location     Type
  2965 ;;		None
  2966 ;; Return value:  Size  Location     Type
  2967 ;;                  3    0[COMMON] float 
  2968 ;; Registers used:
  2969 ;;		wreg, status,2, status,0
  2970 ;; Tracked objects:
  2971 ;;		On entry : 0/0
  2972 ;;		On exit  : 0/0
  2973 ;;		Unchanged: 0/0
  2974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2975 ;;      Params:         5       0       0       0       0
  2976 ;;      Locals:         0       0       0       0       0
  2977 ;;      Temps:          3       0       0       0       0
  2978 ;;      Totals:         8       0       0       0       0
  2979 ;;Total ram usage:        8 bytes
  2980 ;; Hardware stack levels used:    1
  2981 ;; This function calls:
  2982 ;;		Nothing
  2983 ;; This function is called by:
  2984 ;;		___ftadd
  2985 ;;		___ftmul
  2986 ;;		___lwtoft
  2987 ;; This function uses a non-reentrant model
  2988 ;;
  2989                           
  2990                           
  2991                           ;psect for function ___ftpack
  2992  052D                     ___ftpack:	
  2993                           
  2994                           ;incstack = 0
  2995                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  2996  052D  0873               	movf	___ftpack@exp,w
  2997  052E  1903               	btfsc	3,2
  2998  052F  2D35               	goto	i1l1576
  2999  0530  0872               	movf	___ftpack@arg+2,w
  3000  0531  0471               	iorwf	___ftpack@arg+1,w
  3001  0532  0470               	iorwf	___ftpack@arg,w
  3002  0533  1D03               	skipz
  3003  0534  2D48               	goto	i1l1582
  3004  0535                     i1l1576:	
  3005  0535  3000               	movlw	0
  3006  0536  00F0               	movwf	?___ftpack
  3007  0537  3000               	movlw	0
  3008  0538  00F1               	movwf	?___ftpack+1
  3009  0539  3000               	movlw	0
  3010  053A  00F2               	movwf	?___ftpack+2
  3011  053B  0008               	return
  3012  053C                     i1l1580:	
  3013  053C  3001               	movlw	1
  3014  053D  00F5               	movwf	??___ftpack
  3015  053E  0875               	movf	??___ftpack,w
  3016  053F  07F3               	addwf	___ftpack@exp,f
  3017  0540  3001               	movlw	1
  3018  0541                     u129_25:	
  3019  0541  1003               	clrc
  3020  0542  0CF2               	rrf	___ftpack@arg+2,f
  3021  0543  0CF1               	rrf	___ftpack@arg+1,f
  3022  0544  0CF0               	rrf	___ftpack@arg,f
  3023  0545  3EFF               	addlw	-1
  3024  0546  1D03               	skipz
  3025  0547  2D41               	goto	u129_25
  3026  0548                     i1l1582:	
  3027  0548  30FE               	movlw	254
  3028  0549  0572               	andwf	___ftpack@arg+2,w
  3029  054A  1903               	btfsc	3,2
  3030  054B  2D63               	goto	i1l414
  3031  054C  2D3C               	goto	i1l1580
  3032  054D                     i1l1584:	
  3033  054D  3001               	movlw	1
  3034  054E  00F5               	movwf	??___ftpack
  3035  054F  0875               	movf	??___ftpack,w
  3036  0550  07F3               	addwf	___ftpack@exp,f
  3037  0551  3001               	movlw	1
  3038  0552  07F0               	addwf	___ftpack@arg,f
  3039  0553  3000               	movlw	0
  3040  0554  1803               	skipnc
  3041  0555  3001               	movlw	1
  3042  0556  07F1               	addwf	___ftpack@arg+1,f
  3043  0557  3000               	movlw	0
  3044  0558  1803               	skipnc
  3045  0559  3001               	movlw	1
  3046  055A  07F2               	addwf	___ftpack@arg+2,f
  3047  055B  3001               	movlw	1
  3048  055C                     u131_25:	
  3049  055C  1003               	clrc
  3050  055D  0CF2               	rrf	___ftpack@arg+2,f
  3051  055E  0CF1               	rrf	___ftpack@arg+1,f
  3052  055F  0CF0               	rrf	___ftpack@arg,f
  3053  0560  3EFF               	addlw	-1
  3054  0561  1D03               	skipz
  3055  0562  2D5C               	goto	u131_25
  3056  0563                     i1l414:	
  3057  0563  30FF               	movlw	255
  3058  0564  0572               	andwf	___ftpack@arg+2,w
  3059  0565  1903               	btfsc	3,2
  3060  0566  2D72               	goto	i1l1592
  3061  0567  2D4D               	goto	i1l1584
  3062  0568                     i1l1590:	
  3063  0568  3001               	movlw	1
  3064  0569  02F3               	subwf	___ftpack@exp,f
  3065  056A  3001               	movlw	1
  3066  056B                     u133_25:	
  3067  056B  1003               	clrc
  3068  056C  0DF0               	rlf	___ftpack@arg,f
  3069  056D  0DF1               	rlf	___ftpack@arg+1,f
  3070  056E  0DF2               	rlf	___ftpack@arg+2,f
  3071  056F  3EFF               	addlw	-1
  3072  0570  1D03               	skipz
  3073  0571  2D6B               	goto	u133_25
  3074  0572                     i1l1592:	
  3075  0572  1FF1               	btfss	___ftpack@arg+1,7
  3076  0573  2D68               	goto	i1l1590
  3077  0574  1873               	btfsc	___ftpack@exp,0
  3078  0575  2D7C               	goto	i1l420
  3079  0576  30FF               	movlw	255
  3080  0577  05F0               	andwf	___ftpack@arg,f
  3081  0578  307F               	movlw	127
  3082  0579  05F1               	andwf	___ftpack@arg+1,f
  3083  057A  30FF               	movlw	255
  3084  057B  05F2               	andwf	___ftpack@arg+2,f
  3085  057C                     i1l420:	
  3086  057C  1003               	clrc
  3087  057D  0CF3               	rrf	___ftpack@exp,f
  3088  057E  0873               	movf	___ftpack@exp,w
  3089  057F  00F5               	movwf	??___ftpack
  3090  0580  01F6               	clrf	??___ftpack+1
  3091  0581  01F7               	clrf	??___ftpack+2
  3092  0582  3010               	movlw	16
  3093  0583                     u136_25:	
  3094  0583  1003               	clrc
  3095  0584  0DF5               	rlf	??___ftpack,f
  3096  0585  0DF6               	rlf	??___ftpack+1,f
  3097  0586  0DF7               	rlf	??___ftpack+2,f
  3098  0587  3EFF               	addlw	-1
  3099  0588  1D03               	skipz
  3100  0589  2D83               	goto	u136_25
  3101  058A  0875               	movf	??___ftpack,w
  3102  058B  04F0               	iorwf	___ftpack@arg,f
  3103  058C  0876               	movf	??___ftpack+1,w
  3104  058D  04F1               	iorwf	___ftpack@arg+1,f
  3105  058E  0877               	movf	??___ftpack+2,w
  3106  058F  04F2               	iorwf	___ftpack@arg+2,f
  3107  0590  0874               	movf	___ftpack@sign,w
  3108  0591  1903               	btfsc	3,2
  3109  0592  0008               	return
  3110  0593  17F2               	bsf	___ftpack@arg+2,7
  3111  0594  0008               	return
  3112  0595                     __end_of___ftpack:	
  3113  007E                     btemp	set	126	;btemp
  3114  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         25
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     30      55
    BANK1            80     23      23
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    ?___ftpack	float  size(1) Largest target is 0

    ?___ftadd	float  size(1) Largest target is 0

    ?___lwtoft	float  size(1) Largest target is 0

    ?___ftmul	float  size(1) Largest target is 0

    ?___awdiv	int  size(1) Largest target is 0

    ?___fttol	long  size(1) Largest target is 0


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->___ftmul
    ___lwtoft->___ftpack
    ___ftmul->___ftpack
    ___ftadd->___ftmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    _isr->___ftadd
    ___ftadd->___ftmul

Critical Paths under _main in BANK1

    _main->_fLCD_PrintNumber
    _fLCD_PrintNumber->___fttol
    _fLCD_Start->_fLCD_Clear
    _fLCD_Clear->_fLCD_RawSend

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    3114
                                             20 BANK1      3     3      0
                            _startUp
                         _fLCD_Start
                   _fLCD_PrintNumber
                         _fLCD_Clear
                            ___fttol
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             14    10      4     371
                                              0 BANK1     14    10      4
 ---------------------------------------------------------------------------------
 (1) _fLCD_PrintNumber                                     6     4      2    1609
                                             14 BANK1      6     4      2
                       _fLCD_RawSend
                            ___awdiv
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     445
                                              0 BANK1      9     5      4
 ---------------------------------------------------------------------------------
 (1) _fLCD_Start                                           2     2      0     756
                                              7 BANK1      2     2      0
                         _fLCD_Clear
                       _fLCD_RawSend
 ---------------------------------------------------------------------------------
 (1) _fLCD_Clear                                           2     2      0     378
                                              5 BANK1      2     2      0
                       _fLCD_RawSend
 ---------------------------------------------------------------------------------
 (2) _fLCD_RawSend                                         5     4      1     378
                                              0 BANK1      5     4      1
 ---------------------------------------------------------------------------------
 (1) _startUp                                              0     0      0       0
                      _initializeInt
                   _initializeTimer0
                   _initializeTimer1
 ---------------------------------------------------------------------------------
 (2) _initializeTimer1                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initializeTimer0                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initializeInt                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  7     7      0    1815
                                             23 BANK0      7     7      0
                            ___ftadd
                            ___ftmul
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (5) ___lwtoft                                             4     1      3     231
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             16    10      6     535
                                              8 COMMON     6     0      6
                                              0 BANK0     10    10      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftadd                                             13     7      6    1049
                                             10 BANK0     13     7      6
                           ___ftpack
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftpack                                             8     3      5     209
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _startUp
     _initializeInt
     _initializeTimer0
     _initializeTimer1
   _fLCD_Start
     _fLCD_Clear
       _fLCD_RawSend
     _fLCD_RawSend
   _fLCD_PrintNumber
     _fLCD_RawSend
     ___awdiv
     ___fttol (ARG)
   _fLCD_Clear
     _fLCD_RawSend
   ___fttol

 _isr (ROOT)
   ___ftadd
     ___ftpack
     ___ftmul (ARG)
       ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   ___ftmul
     ___ftpack
   ___lwtoft
     ___ftpack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       9       2        0.0%
ABS                  0      0      5C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1E      37       5       68.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     17      17       7       28.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      65      12        0.0%


Microchip Technology PIC Macro Assembler V1.20 build 52243 
Symbol Table                                                                                   Mon Aug 18 20:53:59 2014

                        _a 003E                          _b 0041                __CFG_CP$OFF 0000  
                       l95 031C                         l96 0323                         l97 032A  
             ___awdiv@sign 00A6                         fsr 0004             ??_fLCD_RawSend 00A1  
             ___ftadd@exp1 0036               ___ftadd@exp2 0035               ___ftadd@sign 0034  
                      l100 0368                        l101 036F                        l102 0376  
                      _GIE 005F               __CFG_CPD$OFF 0000                        _fin 0047  
                      _isr 042F                        fsr0 0004                        indf 0000  
             __CFG_IESO$ON 0000               __CFG_LVP$OFF 0000                       l2022 0385  
                     l2112 05A1                       l2018 037D                       l2130 05C2  
                     l2140 05E3                       l2118 05AC                       l2144 05EB  
                     l2136 05D8                       l2128 05B4                       l2154 03BB  
                     l2180 040A                       l2172 03ED                       l2182 0415  
                     l2174 03FD                       l2184 0418                       l2188 0426  
                     l1950 00CF                       l1942 0092                       l1934 0055  
                     l1926 0026                       l1862 0606                       l1960 011E  
                     l1952 00E1                       l1944 00A4                       l1936 0067  
                     l1982 0331                       l1958 010C                       l1986 0339  
                     ?_isr 0070                       u2105 030D                       u2025 0035  
                     u2045 0072                       u2305 05B7                       u2065 00AF  
                     u2325 05C3                       u2085 00EC                       u2335 05CF  
                     u2415 03EE                       u2345 05D9                       u2507 04CB  
                     u2517 04DD                       u2445 040C                       u2607 0356  
                     u2527 04EF                       u2617 0389                       u2537 0501  
                     u2385 03C2                       u2627 0393                       u2547 0513  
                     u2637 039D                       u2557 0525                       u2477 05FD  
                     u2567 0646                       u2487 062E                       u2577 0658  
                     u2497 04B9                       u2587 033D                       u2597 0347  
                     _RBIE 005B                       _RBIF 0058                       _TMR1 000E  
             __CFG_WRT$OFF 0000              __CFG_FCMEN$ON 0000                       _main 05F2  
             ___ftpack@arg 0070               ___ftpack@exp 0073                       _time 0050  
                     btemp 007E              __CFG_BOREN$ON 0000                       start 0011  
            __CFG_MCLRE$ON 0000               ___ftmul@cntr 0028               ___ftmul@sign 0029  
             ___fttol@exp1 00AD               ___fttol@lval 00A9                      ??_isr 0037  
                    ?_main 0070            __end_of___awdiv 05F2            __end_of___ftadd 0231  
            __CFG_WDTE$OFF 0000                      _CMCON 009C                      _ANSEL 009B  
          __end_of___ftmul 0301            ___awdiv@divisor 00A0            __end_of___fttol 042F  
                    i1l420 057C                      i1l414 0563                      i1l178 04A4  
                    i1l443 01D1            ___awdiv@counter 00A5                      _PORTA 0005  
                    _PORTB 0006                      _TRISA 0085                      _TRISB 0086  
           __CFG_CCPMX$RB0 0000   __end_of_fLCD_PrintNumber 0129                 _fLCD_Clear 0639  
                    _fflag 0053                      _count 0044                 _fLCD_Start 04AF  
                    _tflag 0055                      _tdist 004D              ___ftpack@sign 0074  
                    _speed 004A                      pclath 000A            __end_of_startUp 0678  
                    status 0003                      wtemp0 007E            __initialization 069A  
             __end_of_main 0639                     ??_main 00B4              ___fttol@sign1 00A8  
         ___awdiv@dividend 00A2           __end_of___ftpack 0595                     _INT0IE 005C  
                   _INT0IF 0059                     i1l1702 0159                     i1l1720 0182  
                   i1l1730 01A8                     i1l1802 02D6                     i1l1580 053C  
                   i1l1740 01CD                     i1l1732 01AC                     i1l1708 0168  
                   i1l1590 0568                     i1l1582 0548                     i1l1726 0197  
                   i1l1830 047B                     i1l1592 0572                     i1l1584 054D  
                   i1l1576 0535                     i1l1744 01E3                     i1l1728 01A3  
                   i1l1840 048A                     i1l1738 01C1                     i1l1748 01F5  
                   i1l1758 0218                     i1l1790 02AE                     i1l1774 025F  
                   i1l1768 0249                     i1l1698 0152                     i1l1786 029E  
                   u131_25 055C                     i1l1798 02C6                     u133_25 056B  
                   u136_25 0583                     u129_25 0541                     u170_25 0198  
                   u173_25 01AD                     u167_25 0183                     u176_25 01C2  
                   u184_25 026B                     u193_25 02D7                     u185_25 027D  
         __end_of___lwtoft 068B                     u194_25 02DF                     u188_25 02AF  
                   u189_25 02B7                     _OSCCON 008F                     _TMR0IE 005D  
                   _TMR1IE 0460                     _TMR1IF 0060          ?_initializeTimer0 0070  
        ?_initializeTimer1 0070       __end_of_fLCD_RawSend 03A1         ??_initializeTimer0 00A0  
       ??_initializeTimer1 00A0             __CFG_PWRTE$OFF 0000                  ??___awdiv 00A4  
                ??___ftadd 0030                  ??___ftmul 0020                  ??___fttol 00A4  
         ___awdiv@quotient 00A7      ___ftmul@f3_as_product 0025                     saved_w 007E  
              ?_fLCD_Clear 0070     __size_of_initializeInt 000F                  ??_startUp 00A0  
              ?_fLCD_Start 0070    __end_of__initialization 06A0                 ___ftadd@f1 002A  
               ___ftadd@f2 002D                 ___ftmul@f1 0078                 ___ftmul@f2 007B  
               ___fttol@f1 00A0             __pcstackCOMMON 0070                 ___lwtoft@c 0078  
           _OPTION_REGbits 0081                 __pbssBANK0 003E     fLCD_PrintNumber@Number 00AE  
               __pmaintext 05F2              _initializeInt 068B        __size_of_fLCD_Clear 0025  
               __pintentry 0004        __size_of_fLCD_Start 007E                  ?___ftpack 0070  
                ?___lwtoft 0078   fLCD_PrintNumber@tmp_byte 00B3          ?_fLCD_PrintNumber 00AE  
    __size_of_fLCD_RawSend 00A0         ??_fLCD_PrintNumber 00B0             ?_initializeInt 0070  
                  ___awdiv 0595                    ___ftadd 0129                    ___ftmul 0231  
                  ___fttol 03A1                 ??___ftpack 0075                    __ptext0 0000  
                  __ptext1 03A1                    __ptext2 0013                    __ptext3 0595  
                  __ptext4 04AF                    __ptext5 0639                    __ptext6 0301  
                  __ptext7 065E                    __ptext8 06B4                    __ptext9 06A3  
               ??___lwtoft 007B               _fLCD_RawSend 0301                  _T1CONbits 0010  
             __size_of_isr 0080                    _startUp 065E                    clrloop0 06AD  
     end_of_initialization 06A0  __size_of_initializeTimer0 0009  __size_of_initializeTimer1 0008  
                _PORTAbits 0005                  _PORTBbits 0006               ??_fLCD_Clear 00A5  
             ??_fLCD_Start 00A7            ??_initializeInt 00A0                ___ftmul@exp 0024  
       __end_of_fLCD_Clear 065E         __end_of_fLCD_Start 052D        start_initialization 069A  
              __end_of_isr 04AF          __size_of___ftpack 0068          __size_of___lwtoft 0013  
            __pcstackBANK0 0020              __pcstackBANK1 00A0           fLCD_RawSend@mask 00A0  
__size_of_fLCD_PrintNumber 0116                   ?___awdiv 00A0                   ?___ftadd 002A  
                 ?___ftmul 0078                   ?___fttol 00A0    fLCD_PrintNumber@tmp_int 00B1  
         _initializeTimer0 06A3           _initializeTimer1 06B4                   ?_startUp 0070  
        interrupt_function 0004                  clear_ram0 06AC                   _PIE1bits 008C  
                 _PIR1bits 000C           __size_of___awdiv 005D           __size_of___ftadd 0108  
         __size_of___ftmul 00D0           __size_of___fttol 008E                   ___ftpack 052D  
                 ___lwtoft 0678                   __ptext10 068B                   __ptext11 042F  
                 __ptext12 0678                   __ptext13 0231                   __ptext14 0129  
                 __ptext15 052D           __size_of_startUp 001A              __size_of_main 0047  
    __end_of_initializeInt 069A           _fLCD_PrintNumber 0013                 _INTCONbits 000B  
                 intlevel1 0000             fLCD_RawSend@in 00A3             fLCD_RawSend@pt 00A4  
 __end_of_initializeTimer0 06AC   __end_of_initializeTimer1 06BC              ?_fLCD_RawSend 00A0  
               _OPTION_REG 0081         __CFG_FOSC$INTOSCIO 0000  
