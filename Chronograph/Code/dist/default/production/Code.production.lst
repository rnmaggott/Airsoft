

Microchip Technology PIC LITE Macro Assembler V1.20 build 52243 
                                                                                               Sat Aug 16 02:13:09 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 52243
     1                           	processor	16F88
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	intentry,global,class=CODE,delta=2
    31                           	dabs	1,0x7E,2
    32  0000                     	;# 
    33  0001                     	;# 
    34  0002                     	;# 
    35  0003                     	;# 
    36  0004                     	;# 
    37  0005                     	;# 
    38  0006                     	;# 
    39  000A                     	;# 
    40  000B                     	;# 
    41  000C                     	;# 
    42  000D                     	;# 
    43  000E                     	;# 
    44  000E                     	;# 
    45  000F                     	;# 
    46  0010                     	;# 
    47  0011                     	;# 
    48  0012                     	;# 
    49  0013                     	;# 
    50  0014                     	;# 
    51  0015                     	;# 
    52  0015                     	;# 
    53  0016                     	;# 
    54  0017                     	;# 
    55  0018                     	;# 
    56  0019                     	;# 
    57  001A                     	;# 
    58  001E                     	;# 
    59  001F                     	;# 
    60  0081                     	;# 
    61  0085                     	;# 
    62  0086                     	;# 
    63  008C                     	;# 
    64  008D                     	;# 
    65  008E                     	;# 
    66  008F                     	;# 
    67  0090                     	;# 
    68  0092                     	;# 
    69  0093                     	;# 
    70  0094                     	;# 
    71  0098                     	;# 
    72  0099                     	;# 
    73  009B                     	;# 
    74  009C                     	;# 
    75  009D                     	;# 
    76  009E                     	;# 
    77  009F                     	;# 
    78  0105                     	;# 
    79  010C                     	;# 
    80  010D                     	;# 
    81  010E                     	;# 
    82  010F                     	;# 
    83  018C                     	;# 
    84  018D                     	;# 
    85  000E                     _TMR1	set	14
    86  000B                     _INTCONbits	set	11
    87  000C                     _PIR1bits	set	12
    88  0005                     _PORTA	set	5
    89  0005                     _PORTAbits	set	5
    90  0006                     _PORTB	set	6
    91  0006                     _PORTBbits	set	6
    92  0010                     _T1CONbits	set	16
    93  005F                     _GIE	set	95
    94  005C                     _INT0IE	set	92
    95  0059                     _INT0IF	set	89
    96  005B                     _RBIE	set	91
    97  0058                     _RBIF	set	88
    98  005D                     _TMR0IE	set	93
    99  0060                     _TMR1IF	set	96
   100  009B                     _ANSEL	set	155
   101  009C                     _CMCON	set	156
   102  0081                     _OPTION_REG	set	129
   103  0081                     _OPTION_REGbits	set	129
   104  008F                     _OSCCON	set	143
   105  008C                     _PIE1bits	set	140
   106  0085                     _TRISA	set	133
   107  0086                     _TRISB	set	134
   108  0460                     _TMR1IE	set	1120
   109                           
   110                           	psect	text0
   111  0000                     __ptext0:	
   112                           
   113                           ;psect for function _isr
   114                           ; #config settings
   115  0000                     
   116                           	psect	cinit
   117  0782                     start_initialization:	
   118  0782                     __initialization:	
   119                           
   120                           ; Clear objects allocated to COMMON
   121  0782  01F7               	clrf	__pbssCOMMON& (0+127)
   122  0783  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   123  0784  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   124  0785  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
   125  0786  01FB               	clrf	(__pbssCOMMON+4)& (0+127)
   126                           
   127                           ; Clear objects allocated to BANK0
   128  0787  1383               	bcf	3,7	;select IRP bank0
   129  0788  3057               	movlw	low __pbssBANK0
   130  0789  0084               	movwf	4
   131  078A  3065               	movlw	low (__pbssBANK0+14)
   132  078B  118A  27A3         	fcall	clear_ram0
   133  078D                     end_of_initialization:	
   134                           ;End of C runtime variable initialization code
   135                           
   136  078D                     __end_of__initialization:	
   137  078D  0183               	clrf	3
   138  078E  118A  2A31         	ljmp	_main	;jump to C main() function
   139                           
   140                           	psect	bssCOMMON
   141  0077                     __pbssCOMMON:	
   142  0077                     _a:	
   143  0077                     	ds	3
   144  007A                     _tflag:	
   145  007A                     	ds	2
   146                           
   147                           	psect	bssBANK0
   148  0057                     __pbssBANK0:	
   149  0057                     _b:	
   150  0057                     	ds	3
   151  005A                     _fin:	
   152  005A                     	ds	3
   153  005D                     _time:	
   154  005D                     	ds	2
   155  005F                     _speed:	
   156  005F                     	ds	3
   157  0062                     _tdist:	
   158  0062                     	ds	3
   159                           
   160                           	psect	clrtext
   161  07A3                     clear_ram0:	
   162                           ;	Called with FSR containing the base address, and
   163                           ;	W with the last address+1
   164                           
   165  07A3  0064               	clrwdt	;clear the watchdog before getting into this loop
   166  07A4                     clrloop0:	
   167  07A4  0180               	clrf	0	;clear RAM location pointed to by FSR
   168  07A5  0A84               	incf	4,f	;increment pointer
   169  07A6  0604               	xorwf	4,w	;XOR with final address
   170  07A7  1903               	btfsc	3,2	;have we reached the end yet?
   171  07A8  3400               	retlw	0	;all done for this memory range, return
   172  07A9  0604               	xorwf	4,w	;XOR again to restore value
   173  07AA  2FA4               	goto	clrloop0	;do the next byte
   174                           
   175                           	psect	cstackCOMMON
   176  0070                     __pcstackCOMMON:	
   177  0070                     ?_startUp:	
   178  0070                     ?_fLCD_Start:	
   179                           ; 0 bytes @ 0x0
   180                           
   181  0070                     ?_fLCD_Clear:	
   182                           ; 0 bytes @ 0x0
   183                           
   184  0070                     ?_initializeInt:	
   185                           ; 0 bytes @ 0x0
   186                           
   187  0070                     ?_initializeTimer0:	
   188                           ; 0 bytes @ 0x0
   189                           
   190  0070                     ?_initializeTimer1:	
   191                           ; 0 bytes @ 0x0
   192                           
   193  0070                     ?_main:	
   194                           ; 0 bytes @ 0x0
   195                           
   196  0070                     ?_isr:	
   197                           ; 0 bytes @ 0x0
   198                           
   199  0070                     ??_isr:	
   200                           ; 0 bytes @ 0x0
   201                           
   202                           
   203                           ; 0 bytes @ 0x0
   204  0070                     	ds	7
   205                           
   206                           	psect	cstackBANK0
   207  0020                     __pcstackBANK0:	
   208  0020                     ??_startUp:	
   209  0020                     ?_fLCD_RawSend:	
   210                           ; 0 bytes @ 0x0
   211                           
   212  0020                     ??_initializeInt:	
   213                           ; 0 bytes @ 0x0
   214                           
   215  0020                     ??_initializeTimer0:	
   216                           ; 0 bytes @ 0x0
   217                           
   218  0020                     ??_initializeTimer1:	
   219                           ; 0 bytes @ 0x0
   220                           
   221  0020                     ?___awdiv:	
   222                           ; 0 bytes @ 0x0
   223                           
   224  0020                     ?___ftpack:	
   225                           ; 2 bytes @ 0x0
   226                           
   227  0020                     ?___fttol:	
   228                           ; 3 bytes @ 0x0
   229                           
   230  0020                     fLCD_RawSend@mask:	
   231                           ; 4 bytes @ 0x0
   232                           
   233  0020                     ___awdiv@divisor:	
   234                           ; 1 bytes @ 0x0
   235                           
   236  0020                     ___ftpack@arg:	
   237                           ; 2 bytes @ 0x0
   238                           
   239  0020                     ___fttol@f1:	
   240                           ; 3 bytes @ 0x0
   241                           
   242                           
   243                           ; 3 bytes @ 0x0
   244  0020                     	ds	1
   245  0021                     ??_fLCD_RawSend:	
   246                           
   247                           ; 0 bytes @ 0x1
   248  0021                     	ds	1
   249  0022                     ___awdiv@dividend:	
   250                           
   251                           ; 2 bytes @ 0x2
   252  0022                     	ds	1
   253  0023                     fLCD_RawSend@in:	
   254  0023                     ___ftpack@exp:	
   255                           ; 1 bytes @ 0x3
   256                           
   257                           
   258                           ; 1 bytes @ 0x3
   259  0023                     	ds	1
   260  0024                     ??___awdiv:	
   261  0024                     ??___fttol:	
   262                           ; 0 bytes @ 0x4
   263                           
   264  0024                     fLCD_RawSend@pt:	
   265                           ; 0 bytes @ 0x4
   266                           
   267  0024                     ___ftpack@sign:	
   268                           ; 1 bytes @ 0x4
   269                           
   270                           
   271                           ; 1 bytes @ 0x4
   272  0024                     	ds	1
   273  0025                     ??_fLCD_Clear:	
   274  0025                     ??___ftpack:	
   275                           ; 0 bytes @ 0x5
   276                           
   277  0025                     ___awdiv@counter:	
   278                           ; 0 bytes @ 0x5
   279                           
   280                           
   281                           ; 1 bytes @ 0x5
   282  0025                     	ds	1
   283  0026                     ___awdiv@sign:	
   284                           
   285                           ; 1 bytes @ 0x6
   286  0026                     	ds	1
   287  0027                     ??_fLCD_Start:	
   288  0027                     ___awdiv@quotient:	
   289                           ; 0 bytes @ 0x7
   290                           
   291                           
   292                           ; 2 bytes @ 0x7
   293  0027                     	ds	1
   294  0028                     ?___ftdiv:	
   295  0028                     ?___lwtoft:	
   296                           ; 3 bytes @ 0x8
   297                           
   298  0028                     ___fttol@sign1:	
   299                           ; 3 bytes @ 0x8
   300                           
   301  0028                     ___lwtoft@c:	
   302                           ; 1 bytes @ 0x8
   303                           
   304  0028                     ___ftdiv@f2:	
   305                           ; 2 bytes @ 0x8
   306                           
   307                           
   308                           ; 3 bytes @ 0x8
   309  0028                     	ds	1
   310  0029                     ___fttol@lval:	
   311                           
   312                           ; 4 bytes @ 0x9
   313  0029                     	ds	2
   314  002B                     ??___lwtoft:	
   315  002B                     ___ftdiv@f1:	
   316                           ; 0 bytes @ 0xB
   317                           
   318                           
   319                           ; 3 bytes @ 0xB
   320  002B                     	ds	2
   321  002D                     ___fttol@exp1:	
   322                           
   323                           ; 1 bytes @ 0xD
   324  002D                     	ds	1
   325  002E                     ?_fLCD_PrintNumber:	
   326  002E                     ??___ftdiv:	
   327                           ; 0 bytes @ 0xE
   328                           
   329  002E                     ?___awtoft:	
   330                           ; 0 bytes @ 0xE
   331                           
   332  002E                     fLCD_PrintNumber@Number:	
   333                           ; 3 bytes @ 0xE
   334                           
   335  002E                     ___awtoft@c:	
   336                           ; 2 bytes @ 0xE
   337                           
   338                           
   339                           ; 2 bytes @ 0xE
   340  002E                     	ds	2
   341  0030                     ??_fLCD_PrintNumber:	
   342                           
   343                           ; 0 bytes @ 0x10
   344  0030                     	ds	1
   345  0031                     ??___awtoft:	
   346  0031                     fLCD_PrintNumber@tmp_int:	
   347                           ; 0 bytes @ 0x11
   348                           
   349                           
   350                           ; 2 bytes @ 0x11
   351  0031                     	ds	1
   352  0032                     ___ftdiv@cntr:	
   353                           
   354                           ; 1 bytes @ 0x12
   355  0032                     	ds	1
   356  0033                     fLCD_PrintNumber@tmp_byte:	
   357  0033                     ___awtoft@sign:	
   358                           ; 1 bytes @ 0x13
   359                           
   360  0033                     ___ftdiv@f3:	
   361                           ; 1 bytes @ 0x13
   362                           
   363                           
   364                           ; 3 bytes @ 0x13
   365  0033                     	ds	1
   366  0034                     ?___ftneg:	
   367  0034                     ___ftneg@f1:	
   368                           ; 3 bytes @ 0x14
   369                           
   370                           
   371                           ; 3 bytes @ 0x14
   372  0034                     	ds	2
   373  0036                     ___ftdiv@exp:	
   374                           
   375                           ; 1 bytes @ 0x16
   376  0036                     	ds	1
   377  0037                     ??___ftneg:	
   378  0037                     ?___ftadd:	
   379                           ; 0 bytes @ 0x17
   380                           
   381  0037                     ___ftdiv@sign:	
   382                           ; 3 bytes @ 0x17
   383                           
   384  0037                     ___ftadd@f1:	
   385                           ; 1 bytes @ 0x17
   386                           
   387                           
   388                           ; 3 bytes @ 0x17
   389  0037                     	ds	3
   390  003A                     ___ftadd@f2:	
   391                           
   392                           ; 3 bytes @ 0x1A
   393  003A                     	ds	3
   394  003D                     ??___ftadd:	
   395                           
   396                           ; 0 bytes @ 0x1D
   397  003D                     	ds	4
   398  0041                     ___ftadd@sign:	
   399                           
   400                           ; 1 bytes @ 0x21
   401  0041                     	ds	1
   402  0042                     ___ftadd@exp2:	
   403                           
   404                           ; 1 bytes @ 0x22
   405  0042                     	ds	1
   406  0043                     ___ftadd@exp1:	
   407                           
   408                           ; 1 bytes @ 0x23
   409  0043                     	ds	1
   410  0044                     ?___ftmul:	
   411  0044                     ___ftmul@f1:	
   412                           ; 3 bytes @ 0x24
   413                           
   414                           
   415                           ; 3 bytes @ 0x24
   416  0044                     	ds	3
   417  0047                     ___ftmul@f2:	
   418                           
   419                           ; 3 bytes @ 0x27
   420  0047                     	ds	3
   421  004A                     ??___ftmul:	
   422                           
   423                           ; 0 bytes @ 0x2A
   424  004A                     	ds	4
   425  004E                     ___ftmul@exp:	
   426                           
   427                           ; 1 bytes @ 0x2E
   428  004E                     	ds	1
   429  004F                     ___ftmul@f3_as_product:	
   430                           
   431                           ; 3 bytes @ 0x2F
   432  004F                     	ds	3
   433  0052                     ___ftmul@cntr:	
   434                           
   435                           ; 1 bytes @ 0x32
   436  0052                     	ds	1
   437  0053                     ___ftmul@sign:	
   438                           
   439                           ; 1 bytes @ 0x33
   440  0053                     	ds	1
   441  0054                     ??_main:	
   442                           
   443                           ; 0 bytes @ 0x34
   444  0054                     	ds	3
   445                           
   446                           	psect	maintext
   447  0231                     __pmaintext:	
   448 ;;
   449 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   450 ;;
   451 ;; *************** function _main *****************
   452 ;; Defined at:
   453 ;;		line 67 in file "chrono.c"
   454 ;; Parameters:    Size  Location     Type
   455 ;;		None
   456 ;; Auto vars:     Size  Location     Type
   457 ;;		None
   458 ;; Return value:  Size  Location     Type
   459 ;;		None               void
   460 ;; Registers used:
   461 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   462 ;; Tracked objects:
   463 ;;		On entry : 17F/0
   464 ;;		On exit  : 0/0
   465 ;;		Unchanged: 0/0
   466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   467 ;;      Params:         0       0       0       0       0
   468 ;;      Locals:         0       0       0       0       0
   469 ;;      Temps:          0       3       0       0       0
   470 ;;      Totals:         0       3       0       0       0
   471 ;;Total ram usage:        3 bytes
   472 ;; Hardware stack levels required when called:    4
   473 ;; This function calls:
   474 ;;		_startUp
   475 ;;		_fLCD_Start
   476 ;;		_fLCD_PrintNumber
   477 ;;		_fLCD_RawSend
   478 ;;		_fLCD_Clear
   479 ;;		___awtoft
   480 ;;		___ftadd
   481 ;;		___ftdiv
   482 ;;		___ftmul
   483 ;;		___ftneg
   484 ;;		___fttol
   485 ;;		___lwtoft
   486 ;; This function is called by:
   487 ;;		Startup code after reset
   488 ;; This function uses a non-reentrant model
   489 ;;
   490                           
   491                           
   492                           ;psect for function _main
   493  0231                     _main:	
   494                           
   495                           ;chrono.c: 69: startUp();
   496                           
   497                           ;incstack = 0
   498                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   499  0231  118A  2743  118A   	fcall	_startUp
   500                           
   501                           ;chrono.c: 70: _delay((unsigned long)((120)*(8000000/4000.0)));
   502  0234  3002               	movlw	2
   503  0235  1283               	bcf	3,5	;RP0=0, select bank0
   504  0236  1303               	bcf	3,6	;RP1=0, select bank0
   505  0237  00D6               	movwf	??_main+2
   506  0238  3038               	movlw	56
   507  0239  00D5               	movwf	??_main+1
   508  023A  30AD               	movlw	173
   509  023B  00D4               	movwf	??_main
   510  023C                     u2187:	
   511  023C  0BD4               	decfsz	??_main,f
   512  023D  2A3C               	goto	u2187
   513  023E  0BD5               	decfsz	??_main+1,f
   514  023F  2A3C               	goto	u2187
   515  0240  0BD6               	decfsz	??_main+2,f
   516  0241  2A3C               	goto	u2187
   517                           
   518                           ;chrono.c: 71: fLCD_Start();
   519  0242  118A  2532  118A   	fcall	_fLCD_Start
   520  0245                     l2065:	
   521                           ;chrono.c: 73: for(;;){
   522                           
   523                           
   524                           ;chrono.c: 74: tdist = time/(2);
   525  0245  1283               	bcf	3,5	;RP0=0, select bank0
   526  0246  1303               	bcf	3,6	;RP1=0, select bank0
   527  0247  085E               	movf	_time+1,w
   528  0248  00D5               	movwf	??_main+1
   529  0249  085D               	movf	_time,w
   530  024A  00D4               	movwf	??_main
   531  024B  1003               	clrc
   532  024C  0CD5               	rrf	??_main+1,f
   533  024D  0CD4               	rrf	??_main,f
   534  024E  0854               	movf	??_main,w
   535  024F  00A8               	movwf	?___lwtoft
   536  0250  0855               	movf	??_main+1,w
   537  0251  00A9               	movwf	?___lwtoft+1
   538  0252  118A  275C  118A   	fcall	___lwtoft
   539  0255  1283               	bcf	3,5	;RP0=0, select bank0
   540  0256  1303               	bcf	3,6	;RP1=0, select bank0
   541  0257  0828               	movf	?___lwtoft,w
   542  0258  00E2               	movwf	_tdist
   543  0259  0829               	movf	?___lwtoft+1,w
   544  025A  00E3               	movwf	_tdist+1
   545  025B  082A               	movf	?___lwtoft+2,w
   546  025C  00E4               	movwf	_tdist+2
   547                           
   548                           ;chrono.c: 75: speed = 20.5/tdist;
   549  025D  0862               	movf	_tdist,w
   550  025E  00A8               	movwf	?___ftdiv
   551  025F  0863               	movf	_tdist+1,w
   552  0260  00A9               	movwf	?___ftdiv+1
   553  0261  0864               	movf	_tdist+2,w
   554  0262  00AA               	movwf	?___ftdiv+2
   555  0263  3000               	movlw	0
   556  0264  00AB               	movwf	?___ftdiv+3
   557  0265  30A4               	movlw	164
   558  0266  00AC               	movwf	?___ftdiv+4
   559  0267  3041               	movlw	65
   560  0268  00AD               	movwf	?___ftdiv+5
   561  0269  118A  23ED  118A   	fcall	___ftdiv
   562  026C  1283               	bcf	3,5	;RP0=0, select bank0
   563  026D  1303               	bcf	3,6	;RP1=0, select bank0
   564  026E  0828               	movf	?___ftdiv,w
   565  026F  00DF               	movwf	_speed
   566  0270  0829               	movf	?___ftdiv+1,w
   567  0271  00E0               	movwf	_speed+1
   568  0272  082A               	movf	?___ftdiv+2,w
   569  0273  00E1               	movwf	_speed+2
   570                           
   571                           ;chrono.c: 76: fin = (speed*1000*3.280839895);
   572  0274  300D               	movlw	13
   573  0275  00C4               	movwf	?___ftmul
   574  0276  304D               	movlw	77
   575  0277  00C5               	movwf	?___ftmul+1
   576  0278  3045               	movlw	69
   577  0279  00C6               	movwf	?___ftmul+2
   578  027A  085F               	movf	_speed,w
   579  027B  00C7               	movwf	?___ftmul+3
   580  027C  0860               	movf	_speed+1,w
   581  027D  00C8               	movwf	?___ftmul+4
   582  027E  0861               	movf	_speed+2,w
   583  027F  00C9               	movwf	?___ftmul+5
   584  0280  118A  231B  118A   	fcall	___ftmul
   585  0283  1283               	bcf	3,5	;RP0=0, select bank0
   586  0284  1303               	bcf	3,6	;RP1=0, select bank0
   587  0285  0844               	movf	?___ftmul,w
   588  0286  00DA               	movwf	_fin
   589  0287  0845               	movf	?___ftmul+1,w
   590  0288  00DB               	movwf	_fin+1
   591  0289  0846               	movf	?___ftmul+2,w
   592  028A  00DC               	movwf	_fin+2
   593                           
   594                           ;chrono.c: 77: fLCD_PrintNumber((int)fin);
   595  028B  085A               	movf	_fin,w
   596  028C  00A0               	movwf	?___fttol
   597  028D  085B               	movf	_fin+1,w
   598  028E  00A1               	movwf	?___fttol+1
   599  028F  085C               	movf	_fin+2,w
   600  0290  00A2               	movwf	?___fttol+2
   601  0291  118A  24A4  118A   	fcall	___fttol
   602  0294  1283               	bcf	3,5	;RP0=0, select bank0
   603  0295  1303               	bcf	3,6	;RP1=0, select bank0
   604  0296  0821               	movf	?___fttol+1,w
   605  0297  01AF               	clrf	?_fLCD_PrintNumber+1
   606  0298  07AF               	addwf	?_fLCD_PrintNumber+1,f
   607  0299  0820               	movf	?___fttol,w
   608  029A  01AE               	clrf	?_fLCD_PrintNumber
   609  029B  07AE               	addwf	?_fLCD_PrintNumber,f
   610  029C  118A  2013  118A   	fcall	_fLCD_PrintNumber
   611                           
   612                           ;chrono.c: 78: fLCD_RawSend('.', 0x10);
   613  029F  3010               	movlw	16
   614  02A0  1283               	bcf	3,5	;RP0=0, select bank0
   615  02A1  1303               	bcf	3,6	;RP1=0, select bank0
   616  02A2  00D4               	movwf	??_main
   617  02A3  0854               	movf	??_main,w
   618  02A4  00A0               	movwf	?_fLCD_RawSend
   619  02A5  302E               	movlw	46
   620  02A6  118A  2618  118A   	fcall	_fLCD_RawSend
   621                           
   622                           ;chrono.c: 79: b = (fin-(int)fin)*1000;
   623  02A9  3000               	movlw	0
   624  02AA  1283               	bcf	3,5	;RP0=0, select bank0
   625  02AB  1303               	bcf	3,6	;RP1=0, select bank0
   626  02AC  00C4               	movwf	?___ftmul
   627  02AD  307A               	movlw	122
   628  02AE  00C5               	movwf	?___ftmul+1
   629  02AF  3044               	movlw	68
   630  02B0  00C6               	movwf	?___ftmul+2
   631  02B1  085A               	movf	_fin,w
   632  02B2  00B7               	movwf	?___ftadd
   633  02B3  085B               	movf	_fin+1,w
   634  02B4  00B8               	movwf	?___ftadd+1
   635  02B5  085C               	movf	_fin+2,w
   636  02B6  00B9               	movwf	?___ftadd+2
   637  02B7  085A               	movf	_fin,w
   638  02B8  00A0               	movwf	?___fttol
   639  02B9  085B               	movf	_fin+1,w
   640  02BA  00A1               	movwf	?___fttol+1
   641  02BB  085C               	movf	_fin+2,w
   642  02BC  00A2               	movwf	?___fttol+2
   643  02BD  118A  24A4  118A   	fcall	___fttol
   644  02C0  1283               	bcf	3,5	;RP0=0, select bank0
   645  02C1  1303               	bcf	3,6	;RP1=0, select bank0
   646  02C2  0821               	movf	?___fttol+1,w
   647  02C3  01AF               	clrf	?___awtoft+1
   648  02C4  07AF               	addwf	?___awtoft+1,f
   649  02C5  0820               	movf	?___fttol,w
   650  02C6  01AE               	clrf	?___awtoft
   651  02C7  07AE               	addwf	?___awtoft,f
   652  02C8  118A  271F  118A   	fcall	___awtoft
   653  02CB  1283               	bcf	3,5	;RP0=0, select bank0
   654  02CC  1303               	bcf	3,6	;RP1=0, select bank0
   655  02CD  082E               	movf	?___awtoft,w
   656  02CE  00B4               	movwf	?___ftneg
   657  02CF  082F               	movf	?___awtoft+1,w
   658  02D0  00B5               	movwf	?___ftneg+1
   659  02D1  0830               	movf	?___awtoft+2,w
   660  02D2  00B6               	movwf	?___ftneg+2
   661  02D3  118A  2790  118A   	fcall	___ftneg
   662  02D6  1283               	bcf	3,5	;RP0=0, select bank0
   663  02D7  1303               	bcf	3,6	;RP1=0, select bank0
   664  02D8  0834               	movf	?___ftneg,w
   665  02D9  00BA               	movwf	?___ftadd+3
   666  02DA  0835               	movf	?___ftneg+1,w
   667  02DB  00BB               	movwf	?___ftadd+4
   668  02DC  0836               	movf	?___ftneg+2,w
   669  02DD  00BC               	movwf	?___ftadd+5
   670  02DE  118A  2129  118A   	fcall	___ftadd
   671  02E1  1283               	bcf	3,5	;RP0=0, select bank0
   672  02E2  1303               	bcf	3,6	;RP1=0, select bank0
   673  02E3  0837               	movf	?___ftadd,w
   674  02E4  00C7               	movwf	?___ftmul+3
   675  02E5  0838               	movf	?___ftadd+1,w
   676  02E6  00C8               	movwf	?___ftmul+4
   677  02E7  0839               	movf	?___ftadd+2,w
   678  02E8  00C9               	movwf	?___ftmul+5
   679  02E9  118A  231B  118A   	fcall	___ftmul
   680  02EC  1283               	bcf	3,5	;RP0=0, select bank0
   681  02ED  1303               	bcf	3,6	;RP1=0, select bank0
   682  02EE  0844               	movf	?___ftmul,w
   683  02EF  00D7               	movwf	_b
   684  02F0  0845               	movf	?___ftmul+1,w
   685  02F1  00D8               	movwf	_b+1
   686  02F2  0846               	movf	?___ftmul+2,w
   687  02F3  00D9               	movwf	_b+2
   688                           
   689                           ;chrono.c: 80: fLCD_PrintNumber((int)b);
   690  02F4  0857               	movf	_b,w
   691  02F5  00A0               	movwf	?___fttol
   692  02F6  0858               	movf	_b+1,w
   693  02F7  00A1               	movwf	?___fttol+1
   694  02F8  0859               	movf	_b+2,w
   695  02F9  00A2               	movwf	?___fttol+2
   696  02FA  118A  24A4  118A   	fcall	___fttol
   697  02FD  1283               	bcf	3,5	;RP0=0, select bank0
   698  02FE  1303               	bcf	3,6	;RP1=0, select bank0
   699  02FF  0821               	movf	?___fttol+1,w
   700  0300  01AF               	clrf	?_fLCD_PrintNumber+1
   701  0301  07AF               	addwf	?_fLCD_PrintNumber+1,f
   702  0302  0820               	movf	?___fttol,w
   703  0303  01AE               	clrf	?_fLCD_PrintNumber
   704  0304  07AE               	addwf	?_fLCD_PrintNumber,f
   705  0305  118A  2013  118A   	fcall	_fLCD_PrintNumber
   706                           
   707                           ;chrono.c: 81: _delay((unsigned long)((100)*(8000000/4000.0)));
   708  0308  3002               	movlw	2
   709  0309  1283               	bcf	3,5	;RP0=0, select bank0
   710  030A  1303               	bcf	3,6	;RP1=0, select bank0
   711  030B  00D6               	movwf	??_main+2
   712  030C  3004               	movlw	4
   713  030D  00D5               	movwf	??_main+1
   714  030E  30BA               	movlw	186
   715  030F  00D4               	movwf	??_main
   716  0310                     u2197:	
   717  0310  0BD4               	decfsz	??_main,f
   718  0311  2B10               	goto	u2197
   719  0312  0BD5               	decfsz	??_main+1,f
   720  0313  2B10               	goto	u2197
   721  0314  0BD6               	decfsz	??_main+2,f
   722  0315  2B10               	goto	u2197
   723  0316  0000               	nop
   724                           
   725                           ;chrono.c: 83: fLCD_Clear();
   726  0317  118A  26D5  118A   	fcall	_fLCD_Clear
   727                           
   728                           ;chrono.c: 84: }
   729  031A  2A45               	goto	l2065
   730  031B                     __end_of_main:	
   731                           
   732                           	psect	text1
   733  075C                     __ptext1:	
   734 ;; *************** function ___lwtoft *****************
   735 ;; Defined at:
   736 ;;		line 29 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\lwtoft.c"
   737 ;; Parameters:    Size  Location     Type
   738 ;;  c               2    8[BANK0 ] unsigned int 
   739 ;; Auto vars:     Size  Location     Type
   740 ;;		None
   741 ;; Return value:  Size  Location     Type
   742 ;;                  3    8[BANK0 ] float 
   743 ;; Registers used:
   744 ;;		wreg, status,2, status,0, pclath, cstack
   745 ;; Tracked objects:
   746 ;;		On entry : 0/0
   747 ;;		On exit  : 0/0
   748 ;;		Unchanged: 0/0
   749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   750 ;;      Params:         0       3       0       0       0
   751 ;;      Locals:         0       0       0       0       0
   752 ;;      Temps:          0       1       0       0       0
   753 ;;      Totals:         0       4       0       0       0
   754 ;;Total ram usage:        4 bytes
   755 ;; Hardware stack levels used:    1
   756 ;; Hardware stack levels required when called:    2
   757 ;; This function calls:
   758 ;;		___ftpack
   759 ;; This function is called by:
   760 ;;		_main
   761 ;; This function uses a non-reentrant model
   762 ;;
   763                           
   764                           
   765                           ;psect for function ___lwtoft
   766  075C                     ___lwtoft:	
   767                           
   768                           ;incstack = 0
   769                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
   770  075C  1283               	bcf	3,5	;RP0=0, select bank0
   771  075D  1303               	bcf	3,6	;RP1=0, select bank0
   772  075E  0828               	movf	___lwtoft@c,w
   773  075F  00A0               	movwf	?___ftpack
   774  0760  0829               	movf	___lwtoft@c+1,w
   775  0761  00A1               	movwf	?___ftpack+1
   776  0762  01A2               	clrf	?___ftpack+2
   777  0763  308E               	movlw	142
   778  0764  00AB               	movwf	??___lwtoft
   779  0765  082B               	movf	??___lwtoft,w
   780  0766  00A3               	movwf	?___ftpack+3
   781  0767  01A4               	clrf	?___ftpack+4
   782  0768  118A  25AE         	fcall	___ftpack
   783  076A  1283               	bcf	3,5	;RP0=0, select bank0
   784  076B  1303               	bcf	3,6	;RP1=0, select bank0
   785  076C  0820               	movf	?___ftpack,w
   786  076D  00A8               	movwf	?___lwtoft
   787  076E  0821               	movf	?___ftpack+1,w
   788  076F  00A9               	movwf	?___lwtoft+1
   789  0770  0822               	movf	?___ftpack+2,w
   790  0771  00AA               	movwf	?___lwtoft+2
   791  0772  0008               	return
   792  0773                     __end_of___lwtoft:	
   793                           
   794                           	psect	text2
   795  04A4                     __ptext2:	
   796 ;; *************** function ___fttol *****************
   797 ;; Defined at:
   798 ;;		line 45 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\fttol.c"
   799 ;; Parameters:    Size  Location     Type
   800 ;;  f1              3    0[BANK0 ] float 
   801 ;; Auto vars:     Size  Location     Type
   802 ;;  lval            4    9[BANK0 ] unsigned long 
   803 ;;  exp1            1   13[BANK0 ] unsigned char 
   804 ;;  sign1           1    8[BANK0 ] unsigned char 
   805 ;; Return value:  Size  Location     Type
   806 ;;                  4    0[BANK0 ] long 
   807 ;; Registers used:
   808 ;;		wreg, status,2, status,0
   809 ;; Tracked objects:
   810 ;;		On entry : 0/0
   811 ;;		On exit  : 0/0
   812 ;;		Unchanged: 0/0
   813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   814 ;;      Params:         0       4       0       0       0
   815 ;;      Locals:         0       6       0       0       0
   816 ;;      Temps:          0       4       0       0       0
   817 ;;      Totals:         0      14       0       0       0
   818 ;;Total ram usage:       14 bytes
   819 ;; Hardware stack levels used:    1
   820 ;; Hardware stack levels required when called:    1
   821 ;; This function calls:
   822 ;;		Nothing
   823 ;; This function is called by:
   824 ;;		_main
   825 ;; This function uses a non-reentrant model
   826 ;;
   827                           
   828                           
   829                           ;psect for function ___fttol
   830  04A4                     ___fttol:	
   831                           
   832                           ;incstack = 0
   833                           ; Regs used in ___fttol: [wreg+status,2+status,0]
   834  04A4  1283               	bcf	3,5	;RP0=0, select bank0
   835  04A5  1303               	bcf	3,6	;RP1=0, select bank0
   836  04A6  0820               	movf	___fttol@f1,w
   837  04A7  00A4               	movwf	??___fttol
   838  04A8  0821               	movf	___fttol@f1+1,w
   839  04A9  00A5               	movwf	??___fttol+1
   840  04AA  0822               	movf	___fttol@f1+2,w
   841  04AB  00A6               	movwf	??___fttol+2
   842  04AC  1003               	clrc
   843  04AD  0D25               	rlf	??___fttol+1,w
   844  04AE  0D26               	rlf	??___fttol+2,w
   845  04AF  00A7               	movwf	??___fttol+3
   846  04B0  0827               	movf	??___fttol+3,w
   847  04B1  00AD               	movwf	___fttol@exp1
   848  04B2  08AD               	movf	___fttol@exp1,f
   849  04B3  1D03               	skipz
   850  04B4  2CBE               	goto	l1997
   851  04B5  3000               	movlw	0
   852  04B6  00A3               	movwf	?___fttol+3
   853  04B7  3000               	movlw	0
   854  04B8  00A2               	movwf	?___fttol+2
   855  04B9  3000               	movlw	0
   856  04BA  00A1               	movwf	?___fttol+1
   857  04BB  3000               	movlw	0
   858  04BC  00A0               	movwf	?___fttol
   859  04BD  0008               	return
   860  04BE                     l1997:	
   861  04BE  0820               	movf	___fttol@f1,w
   862  04BF  00A4               	movwf	??___fttol
   863  04C0  0821               	movf	___fttol@f1+1,w
   864  04C1  00A5               	movwf	??___fttol+1
   865  04C2  0822               	movf	___fttol@f1+2,w
   866  04C3  00A6               	movwf	??___fttol+2
   867  04C4  3017               	movlw	23
   868  04C5                     u2085:	
   869  04C5  1003               	clrc
   870  04C6  0CA6               	rrf	??___fttol+2,f
   871  04C7  0CA5               	rrf	??___fttol+1,f
   872  04C8  0CA4               	rrf	??___fttol,f
   873  04C9  3EFF               	addlw	-1
   874  04CA  1D03               	skipz
   875  04CB  2CC5               	goto	u2085
   876  04CC  0824               	movf	??___fttol,w
   877  04CD  00A7               	movwf	??___fttol+3
   878  04CE  0827               	movf	??___fttol+3,w
   879  04CF  00A8               	movwf	___fttol@sign1
   880  04D0  17A1               	bsf	___fttol@f1+1,7
   881  04D1  30FF               	movlw	255
   882  04D2  05A0               	andwf	___fttol@f1,f
   883  04D3  30FF               	movlw	255
   884  04D4  05A1               	andwf	___fttol@f1+1,f
   885  04D5  3000               	movlw	0
   886  04D6  05A2               	andwf	___fttol@f1+2,f
   887  04D7  0820               	movf	___fttol@f1,w
   888  04D8  00A9               	movwf	___fttol@lval
   889  04D9  0821               	movf	___fttol@f1+1,w
   890  04DA  00AA               	movwf	___fttol@lval+1
   891  04DB  0822               	movf	___fttol@f1+2,w
   892  04DC  00AB               	movwf	___fttol@lval+2
   893  04DD  01AC               	clrf	___fttol@lval+3
   894  04DE  308E               	movlw	142
   895  04DF  02AD               	subwf	___fttol@exp1,f
   896  04E0  1FAD               	btfss	___fttol@exp1,7
   897  04E1  2D00               	goto	l2017
   898  04E2  082D               	movf	___fttol@exp1,w
   899  04E3  3A80               	xorlw	128
   900  04E4  3E8F               	addlw	143
   901  04E5  1803               	skipnc
   902  04E6  2CF0               	goto	l2015
   903  04E7  3000               	movlw	0
   904  04E8  00A3               	movwf	?___fttol+3
   905  04E9  3000               	movlw	0
   906  04EA  00A2               	movwf	?___fttol+2
   907  04EB  3000               	movlw	0
   908  04EC  00A1               	movwf	?___fttol+1
   909  04ED  3000               	movlw	0
   910  04EE  00A0               	movwf	?___fttol
   911  04EF  0008               	return
   912  04F0                     l2015:	
   913  04F0  3001               	movlw	1
   914  04F1                     u2115:	
   915  04F1  1003               	clrc
   916  04F2  0CAC               	rrf	___fttol@lval+3,f
   917  04F3  0CAB               	rrf	___fttol@lval+2,f
   918  04F4  0CAA               	rrf	___fttol@lval+1,f
   919  04F5  0CA9               	rrf	___fttol@lval,f
   920  04F6  3EFF               	addlw	-1
   921  04F7  1D03               	skipz
   922  04F8  2CF1               	goto	u2115
   923  04F9  3001               	movlw	1
   924  04FA  00A4               	movwf	??___fttol
   925  04FB  0824               	movf	??___fttol,w
   926  04FC  07AD               	addwf	___fttol@exp1,f
   927  04FD  1903               	btfsc	3,2
   928  04FE  2D1B               	goto	l2027
   929  04FF  2CF0               	goto	l2015
   930  0500                     l2017:	
   931  0500  3018               	movlw	24
   932  0501  022D               	subwf	___fttol@exp1,w
   933  0502  1C03               	skipc
   934  0503  2D18               	goto	l2025
   935  0504  3000               	movlw	0
   936  0505  00A3               	movwf	?___fttol+3
   937  0506  3000               	movlw	0
   938  0507  00A2               	movwf	?___fttol+2
   939  0508  3000               	movlw	0
   940  0509  00A1               	movwf	?___fttol+1
   941  050A  3000               	movlw	0
   942  050B  00A0               	movwf	?___fttol
   943  050C  0008               	return
   944  050D                     l2023:	
   945  050D  3001               	movlw	1
   946  050E  00A4               	movwf	??___fttol
   947  050F                     u2145:	
   948  050F  1003               	clrc
   949  0510  0DA9               	rlf	___fttol@lval,f
   950  0511  0DAA               	rlf	___fttol@lval+1,f
   951  0512  0DAB               	rlf	___fttol@lval+2,f
   952  0513  0DAC               	rlf	___fttol@lval+3,f
   953  0514  0BA4               	decfsz	??___fttol,f
   954  0515  2D0F               	goto	u2145
   955  0516  3001               	movlw	1
   956  0517  02AD               	subwf	___fttol@exp1,f
   957  0518                     l2025:	
   958  0518  08AD               	movf	___fttol@exp1,f
   959  0519  1D03               	skipz
   960  051A  2D0D               	goto	l2023
   961  051B                     l2027:	
   962  051B  0828               	movf	___fttol@sign1,w
   963  051C  1903               	btfsc	3,2
   964  051D  2D29               	goto	l2031
   965  051E  09A9               	comf	___fttol@lval,f
   966  051F  09AA               	comf	___fttol@lval+1,f
   967  0520  09AB               	comf	___fttol@lval+2,f
   968  0521  09AC               	comf	___fttol@lval+3,f
   969  0522  0AA9               	incf	___fttol@lval,f
   970  0523  1903               	skipnz
   971  0524  0AAA               	incf	___fttol@lval+1,f
   972  0525  1903               	skipnz
   973  0526  0AAB               	incf	___fttol@lval+2,f
   974  0527  1903               	skipnz
   975  0528  0AAC               	incf	___fttol@lval+3,f
   976  0529                     l2031:	
   977  0529  082C               	movf	___fttol@lval+3,w
   978  052A  00A3               	movwf	?___fttol+3
   979  052B  082B               	movf	___fttol@lval+2,w
   980  052C  00A2               	movwf	?___fttol+2
   981  052D  082A               	movf	___fttol@lval+1,w
   982  052E  00A1               	movwf	?___fttol+1
   983  052F  0829               	movf	___fttol@lval,w
   984  0530  00A0               	movwf	?___fttol
   985  0531  0008               	return
   986  0532                     __end_of___fttol:	
   987                           
   988                           	psect	text3
   989  0790                     __ptext3:	
   990 ;; *************** function ___ftneg *****************
   991 ;; Defined at:
   992 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\ftneg.c"
   993 ;; Parameters:    Size  Location     Type
   994 ;;  f1              3   20[BANK0 ] float 
   995 ;; Auto vars:     Size  Location     Type
   996 ;;		None
   997 ;; Return value:  Size  Location     Type
   998 ;;                  3   20[BANK0 ] float 
   999 ;; Registers used:
  1000 ;;		wreg
  1001 ;; Tracked objects:
  1002 ;;		On entry : 0/0
  1003 ;;		On exit  : 0/0
  1004 ;;		Unchanged: 0/0
  1005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1006 ;;      Params:         0       3       0       0       0
  1007 ;;      Locals:         0       0       0       0       0
  1008 ;;      Temps:          0       0       0       0       0
  1009 ;;      Totals:         0       3       0       0       0
  1010 ;;Total ram usage:        3 bytes
  1011 ;; Hardware stack levels used:    1
  1012 ;; Hardware stack levels required when called:    1
  1013 ;; This function calls:
  1014 ;;		Nothing
  1015 ;; This function is called by:
  1016 ;;		_main
  1017 ;; This function uses a non-reentrant model
  1018 ;;
  1019                           
  1020                           
  1021                           ;psect for function ___ftneg
  1022  0790                     ___ftneg:	
  1023                           
  1024                           ;incstack = 0
  1025                           ; Regs used in ___ftneg: [wreg]
  1026  0790  1283               	bcf	3,5	;RP0=0, select bank0
  1027  0791  1303               	bcf	3,6	;RP1=0, select bank0
  1028  0792  0836               	movf	___ftneg@f1+2,w
  1029  0793  0435               	iorwf	___ftneg@f1+1,w
  1030  0794  0434               	iorwf	___ftneg@f1,w
  1031  0795  1903               	skipnz
  1032  0796  0008               	return
  1033  0797  3080               	movlw	128
  1034  0798  06B6               	xorwf	___ftneg@f1+2,f
  1035  0799  0008               	return
  1036  079A                     __end_of___ftneg:	
  1037                           
  1038                           	psect	text4
  1039  031B                     __ptext4:	
  1040 ;; *************** function ___ftmul *****************
  1041 ;; Defined at:
  1042 ;;		line 52 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\ftmul.c"
  1043 ;; Parameters:    Size  Location     Type
  1044 ;;  f1              3   36[BANK0 ] float 
  1045 ;;  f2              3   39[BANK0 ] float 
  1046 ;; Auto vars:     Size  Location     Type
  1047 ;;  f3_as_produc    3   47[BANK0 ] unsigned um
  1048 ;;  sign            1   51[BANK0 ] unsigned char 
  1049 ;;  cntr            1   50[BANK0 ] unsigned char 
  1050 ;;  exp             1   46[BANK0 ] unsigned char 
  1051 ;; Return value:  Size  Location     Type
  1052 ;;                  3   36[BANK0 ] float 
  1053 ;; Registers used:
  1054 ;;		wreg, status,2, status,0, pclath, cstack
  1055 ;; Tracked objects:
  1056 ;;		On entry : 0/0
  1057 ;;		On exit  : 0/0
  1058 ;;		Unchanged: 0/0
  1059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1060 ;;      Params:         0       6       0       0       0
  1061 ;;      Locals:         0       6       0       0       0
  1062 ;;      Temps:          0       4       0       0       0
  1063 ;;      Totals:         0      16       0       0       0
  1064 ;;Total ram usage:       16 bytes
  1065 ;; Hardware stack levels used:    1
  1066 ;; Hardware stack levels required when called:    2
  1067 ;; This function calls:
  1068 ;;		___ftpack
  1069 ;; This function is called by:
  1070 ;;		_main
  1071 ;; This function uses a non-reentrant model
  1072 ;;
  1073                           
  1074                           
  1075                           ;psect for function ___ftmul
  1076  031B                     ___ftmul:	
  1077                           
  1078                           ;incstack = 0
  1079                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  1080  031B  1283               	bcf	3,5	;RP0=0, select bank0
  1081  031C  1303               	bcf	3,6	;RP1=0, select bank0
  1082  031D  0844               	movf	___ftmul@f1,w
  1083  031E  00CA               	movwf	??___ftmul
  1084  031F  0845               	movf	___ftmul@f1+1,w
  1085  0320  00CB               	movwf	??___ftmul+1
  1086  0321  0846               	movf	___ftmul@f1+2,w
  1087  0322  00CC               	movwf	??___ftmul+2
  1088  0323  1003               	clrc
  1089  0324  0D4B               	rlf	??___ftmul+1,w
  1090  0325  0D4C               	rlf	??___ftmul+2,w
  1091  0326  00CD               	movwf	??___ftmul+3
  1092  0327  084D               	movf	??___ftmul+3,w
  1093  0328  00CE               	movwf	___ftmul@exp
  1094  0329  08CE               	movf	___ftmul@exp,f
  1095  032A  1D03               	skipz
  1096  032B  2B33               	goto	l1939
  1097  032C  3000               	movlw	0
  1098  032D  00C4               	movwf	?___ftmul
  1099  032E  3000               	movlw	0
  1100  032F  00C5               	movwf	?___ftmul+1
  1101  0330  3000               	movlw	0
  1102  0331  00C6               	movwf	?___ftmul+2
  1103  0332  0008               	return
  1104  0333                     l1939:	
  1105  0333  0847               	movf	___ftmul@f2,w
  1106  0334  00CA               	movwf	??___ftmul
  1107  0335  0848               	movf	___ftmul@f2+1,w
  1108  0336  00CB               	movwf	??___ftmul+1
  1109  0337  0849               	movf	___ftmul@f2+2,w
  1110  0338  00CC               	movwf	??___ftmul+2
  1111  0339  1003               	clrc
  1112  033A  0D4B               	rlf	??___ftmul+1,w
  1113  033B  0D4C               	rlf	??___ftmul+2,w
  1114  033C  00CD               	movwf	??___ftmul+3
  1115  033D  084D               	movf	??___ftmul+3,w
  1116  033E  00D3               	movwf	___ftmul@sign
  1117  033F  08D3               	movf	___ftmul@sign,f
  1118  0340  1D03               	skipz
  1119  0341  2B49               	goto	l1945
  1120  0342  3000               	movlw	0
  1121  0343  00C4               	movwf	?___ftmul
  1122  0344  3000               	movlw	0
  1123  0345  00C5               	movwf	?___ftmul+1
  1124  0346  3000               	movlw	0
  1125  0347  00C6               	movwf	?___ftmul+2
  1126  0348  0008               	return
  1127  0349                     l1945:	
  1128  0349  0853               	movf	___ftmul@sign,w
  1129  034A  3E7B               	addlw	123
  1130  034B  00CA               	movwf	??___ftmul
  1131  034C  084A               	movf	??___ftmul,w
  1132  034D  07CE               	addwf	___ftmul@exp,f
  1133  034E  0844               	movf	___ftmul@f1,w
  1134  034F  00CA               	movwf	??___ftmul
  1135  0350  0845               	movf	___ftmul@f1+1,w
  1136  0351  00CB               	movwf	??___ftmul+1
  1137  0352  0846               	movf	___ftmul@f1+2,w
  1138  0353  00CC               	movwf	??___ftmul+2
  1139  0354  3010               	movlw	16
  1140  0355                     u1945:	
  1141  0355  1003               	clrc
  1142  0356  0CCC               	rrf	??___ftmul+2,f
  1143  0357  0CCB               	rrf	??___ftmul+1,f
  1144  0358  0CCA               	rrf	??___ftmul,f
  1145  0359  3EFF               	addlw	-1
  1146  035A  1D03               	skipz
  1147  035B  2B55               	goto	u1945
  1148  035C  084A               	movf	??___ftmul,w
  1149  035D  00CD               	movwf	??___ftmul+3
  1150  035E  084D               	movf	??___ftmul+3,w
  1151  035F  00D3               	movwf	___ftmul@sign
  1152  0360  0847               	movf	___ftmul@f2,w
  1153  0361  00CA               	movwf	??___ftmul
  1154  0362  0848               	movf	___ftmul@f2+1,w
  1155  0363  00CB               	movwf	??___ftmul+1
  1156  0364  0849               	movf	___ftmul@f2+2,w
  1157  0365  00CC               	movwf	??___ftmul+2
  1158  0366  3010               	movlw	16
  1159  0367                     u1955:	
  1160  0367  1003               	clrc
  1161  0368  0CCC               	rrf	??___ftmul+2,f
  1162  0369  0CCB               	rrf	??___ftmul+1,f
  1163  036A  0CCA               	rrf	??___ftmul,f
  1164  036B  3EFF               	addlw	-1
  1165  036C  1D03               	skipz
  1166  036D  2B67               	goto	u1955
  1167  036E  084A               	movf	??___ftmul,w
  1168  036F  00CD               	movwf	??___ftmul+3
  1169  0370  084D               	movf	??___ftmul+3,w
  1170  0371  06D3               	xorwf	___ftmul@sign,f
  1171  0372  3080               	movlw	128
  1172  0373  00CA               	movwf	??___ftmul
  1173  0374  084A               	movf	??___ftmul,w
  1174  0375  05D3               	andwf	___ftmul@sign,f
  1175  0376  17C5               	bsf	___ftmul@f1+1,7
  1176  0377  17C8               	bsf	___ftmul@f2+1,7
  1177  0378  30FF               	movlw	255
  1178  0379  05C7               	andwf	___ftmul@f2,f
  1179  037A  30FF               	movlw	255
  1180  037B  05C8               	andwf	___ftmul@f2+1,f
  1181  037C  3000               	movlw	0
  1182  037D  05C9               	andwf	___ftmul@f2+2,f
  1183  037E  3000               	movlw	0
  1184  037F  00CF               	movwf	___ftmul@f3_as_product
  1185  0380  3000               	movlw	0
  1186  0381  00D0               	movwf	___ftmul@f3_as_product+1
  1187  0382  3000               	movlw	0
  1188  0383  00D1               	movwf	___ftmul@f3_as_product+2
  1189  0384  3007               	movlw	7
  1190  0385  00CA               	movwf	??___ftmul
  1191  0386  084A               	movf	??___ftmul,w
  1192  0387  00D2               	movwf	___ftmul@cntr
  1193  0388                     l1957:	
  1194  0388  1C44               	btfss	___ftmul@f1,0
  1195  0389  2B98               	goto	l1961
  1196  038A  0847               	movf	___ftmul@f2,w
  1197  038B  07CF               	addwf	___ftmul@f3_as_product,f
  1198  038C  0848               	movf	___ftmul@f2+1,w
  1199  038D  1103               	clrz
  1200  038E  1803               	skipnc
  1201  038F  0A48               	incf	___ftmul@f2+1,w
  1202  0390  1D03               	btfss	3,2
  1203  0391  07D0               	addwf	___ftmul@f3_as_product+1,f
  1204  0392  0849               	movf	___ftmul@f2+2,w
  1205  0393  1103               	clrz
  1206  0394  1803               	skipnc
  1207  0395  0A49               	incf	___ftmul@f2+2,w
  1208  0396  1D03               	btfss	3,2
  1209  0397  07D1               	addwf	___ftmul@f3_as_product+2,f
  1210  0398                     l1961:	
  1211  0398  3001               	movlw	1
  1212  0399                     u1985:	
  1213  0399  1003               	clrc
  1214  039A  0CC6               	rrf	___ftmul@f1+2,f
  1215  039B  0CC5               	rrf	___ftmul@f1+1,f
  1216  039C  0CC4               	rrf	___ftmul@f1,f
  1217  039D  3EFF               	addlw	-1
  1218  039E  1D03               	skipz
  1219  039F  2B99               	goto	u1985
  1220  03A0  3001               	movlw	1
  1221  03A1                     u1995:	
  1222  03A1  1003               	clrc
  1223  03A2  0DC7               	rlf	___ftmul@f2,f
  1224  03A3  0DC8               	rlf	___ftmul@f2+1,f
  1225  03A4  0DC9               	rlf	___ftmul@f2+2,f
  1226  03A5  3EFF               	addlw	-1
  1227  03A6  1D03               	skipz
  1228  03A7  2BA1               	goto	u1995
  1229  03A8  3001               	movlw	1
  1230  03A9  02D2               	subwf	___ftmul@cntr,f
  1231  03AA  1D03               	btfss	3,2
  1232  03AB  2B88               	goto	l1957
  1233  03AC  3009               	movlw	9
  1234  03AD  00CA               	movwf	??___ftmul
  1235  03AE  084A               	movf	??___ftmul,w
  1236  03AF  00D2               	movwf	___ftmul@cntr
  1237  03B0                     l1969:	
  1238  03B0  1C44               	btfss	___ftmul@f1,0
  1239  03B1  2BC0               	goto	l1973
  1240  03B2  0847               	movf	___ftmul@f2,w
  1241  03B3  07CF               	addwf	___ftmul@f3_as_product,f
  1242  03B4  0848               	movf	___ftmul@f2+1,w
  1243  03B5  1103               	clrz
  1244  03B6  1803               	skipnc
  1245  03B7  0A48               	incf	___ftmul@f2+1,w
  1246  03B8  1D03               	btfss	3,2
  1247  03B9  07D0               	addwf	___ftmul@f3_as_product+1,f
  1248  03BA  0849               	movf	___ftmul@f2+2,w
  1249  03BB  1103               	clrz
  1250  03BC  1803               	skipnc
  1251  03BD  0A49               	incf	___ftmul@f2+2,w
  1252  03BE  1D03               	btfss	3,2
  1253  03BF  07D1               	addwf	___ftmul@f3_as_product+2,f
  1254  03C0                     l1973:	
  1255  03C0  3001               	movlw	1
  1256  03C1                     u2035:	
  1257  03C1  1003               	clrc
  1258  03C2  0CC6               	rrf	___ftmul@f1+2,f
  1259  03C3  0CC5               	rrf	___ftmul@f1+1,f
  1260  03C4  0CC4               	rrf	___ftmul@f1,f
  1261  03C5  3EFF               	addlw	-1
  1262  03C6  1D03               	skipz
  1263  03C7  2BC1               	goto	u2035
  1264  03C8  3001               	movlw	1
  1265  03C9                     u2045:	
  1266  03C9  1003               	clrc
  1267  03CA  0CD1               	rrf	___ftmul@f3_as_product+2,f
  1268  03CB  0CD0               	rrf	___ftmul@f3_as_product+1,f
  1269  03CC  0CCF               	rrf	___ftmul@f3_as_product,f
  1270  03CD  3EFF               	addlw	-1
  1271  03CE  1D03               	skipz
  1272  03CF  2BC9               	goto	u2045
  1273  03D0  3001               	movlw	1
  1274  03D1  02D2               	subwf	___ftmul@cntr,f
  1275  03D2  1D03               	btfss	3,2
  1276  03D3  2BB0               	goto	l1969
  1277  03D4  084F               	movf	___ftmul@f3_as_product,w
  1278  03D5  00A0               	movwf	?___ftpack
  1279  03D6  0850               	movf	___ftmul@f3_as_product+1,w
  1280  03D7  00A1               	movwf	?___ftpack+1
  1281  03D8  0851               	movf	___ftmul@f3_as_product+2,w
  1282  03D9  00A2               	movwf	?___ftpack+2
  1283  03DA  084E               	movf	___ftmul@exp,w
  1284  03DB  00CA               	movwf	??___ftmul
  1285  03DC  084A               	movf	??___ftmul,w
  1286  03DD  00A3               	movwf	?___ftpack+3
  1287  03DE  0853               	movf	___ftmul@sign,w
  1288  03DF  00CB               	movwf	??___ftmul+1
  1289  03E0  084B               	movf	??___ftmul+1,w
  1290  03E1  00A4               	movwf	?___ftpack+4
  1291  03E2  118A  25AE         	fcall	___ftpack
  1292  03E4  1283               	bcf	3,5	;RP0=0, select bank0
  1293  03E5  1303               	bcf	3,6	;RP1=0, select bank0
  1294  03E6  0820               	movf	?___ftpack,w
  1295  03E7  00C4               	movwf	?___ftmul
  1296  03E8  0821               	movf	?___ftpack+1,w
  1297  03E9  00C5               	movwf	?___ftmul+1
  1298  03EA  0822               	movf	?___ftpack+2,w
  1299  03EB  00C6               	movwf	?___ftmul+2
  1300  03EC  0008               	return
  1301  03ED                     __end_of___ftmul:	
  1302                           
  1303                           	psect	text5
  1304  03ED                     __ptext5:	
  1305 ;; *************** function ___ftdiv *****************
  1306 ;; Defined at:
  1307 ;;		line 50 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\ftdiv.c"
  1308 ;; Parameters:    Size  Location     Type
  1309 ;;  f2              3    8[BANK0 ] float 
  1310 ;;  f1              3   11[BANK0 ] float 
  1311 ;; Auto vars:     Size  Location     Type
  1312 ;;  f3              3   19[BANK0 ] float 
  1313 ;;  sign            1   23[BANK0 ] unsigned char 
  1314 ;;  exp             1   22[BANK0 ] unsigned char 
  1315 ;;  cntr            1   18[BANK0 ] unsigned char 
  1316 ;; Return value:  Size  Location     Type
  1317 ;;                  3    8[BANK0 ] float 
  1318 ;; Registers used:
  1319 ;;		wreg, status,2, status,0, pclath, cstack
  1320 ;; Tracked objects:
  1321 ;;		On entry : 0/0
  1322 ;;		On exit  : 0/0
  1323 ;;		Unchanged: 0/0
  1324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1325 ;;      Params:         0       6       0       0       0
  1326 ;;      Locals:         0       6       0       0       0
  1327 ;;      Temps:          0       4       0       0       0
  1328 ;;      Totals:         0      16       0       0       0
  1329 ;;Total ram usage:       16 bytes
  1330 ;; Hardware stack levels used:    1
  1331 ;; Hardware stack levels required when called:    2
  1332 ;; This function calls:
  1333 ;;		___ftpack
  1334 ;; This function is called by:
  1335 ;;		_main
  1336 ;; This function uses a non-reentrant model
  1337 ;;
  1338                           
  1339                           
  1340                           ;psect for function ___ftdiv
  1341  03ED                     ___ftdiv:	
  1342                           
  1343                           ;incstack = 0
  1344                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  1345  03ED  1283               	bcf	3,5	;RP0=0, select bank0
  1346  03EE  1303               	bcf	3,6	;RP1=0, select bank0
  1347  03EF  082B               	movf	___ftdiv@f1,w
  1348  03F0  00AE               	movwf	??___ftdiv
  1349  03F1  082C               	movf	___ftdiv@f1+1,w
  1350  03F2  00AF               	movwf	??___ftdiv+1
  1351  03F3  082D               	movf	___ftdiv@f1+2,w
  1352  03F4  00B0               	movwf	??___ftdiv+2
  1353  03F5  1003               	clrc
  1354  03F6  0D2F               	rlf	??___ftdiv+1,w
  1355  03F7  0D30               	rlf	??___ftdiv+2,w
  1356  03F8  00B1               	movwf	??___ftdiv+3
  1357  03F9  0831               	movf	??___ftdiv+3,w
  1358  03FA  00B6               	movwf	___ftdiv@exp
  1359  03FB  08B6               	movf	___ftdiv@exp,f
  1360  03FC  1D03               	skipz
  1361  03FD  2C05               	goto	l1897
  1362  03FE  3000               	movlw	0
  1363  03FF  00A8               	movwf	?___ftdiv
  1364  0400  3000               	movlw	0
  1365  0401  00A9               	movwf	?___ftdiv+1
  1366  0402  3000               	movlw	0
  1367  0403  00AA               	movwf	?___ftdiv+2
  1368  0404  0008               	return
  1369  0405                     l1897:	
  1370  0405  0828               	movf	___ftdiv@f2,w
  1371  0406  00AE               	movwf	??___ftdiv
  1372  0407  0829               	movf	___ftdiv@f2+1,w
  1373  0408  00AF               	movwf	??___ftdiv+1
  1374  0409  082A               	movf	___ftdiv@f2+2,w
  1375  040A  00B0               	movwf	??___ftdiv+2
  1376  040B  1003               	clrc
  1377  040C  0D2F               	rlf	??___ftdiv+1,w
  1378  040D  0D30               	rlf	??___ftdiv+2,w
  1379  040E  00B1               	movwf	??___ftdiv+3
  1380  040F  0831               	movf	??___ftdiv+3,w
  1381  0410  00B7               	movwf	___ftdiv@sign
  1382  0411  08B7               	movf	___ftdiv@sign,f
  1383  0412  1D03               	skipz
  1384  0413  2C1B               	goto	l1903
  1385  0414  3000               	movlw	0
  1386  0415  00A8               	movwf	?___ftdiv
  1387  0416  3000               	movlw	0
  1388  0417  00A9               	movwf	?___ftdiv+1
  1389  0418  3000               	movlw	0
  1390  0419  00AA               	movwf	?___ftdiv+2
  1391  041A  0008               	return
  1392  041B                     l1903:	
  1393  041B  3000               	movlw	0
  1394  041C  00B3               	movwf	___ftdiv@f3
  1395  041D  3000               	movlw	0
  1396  041E  00B4               	movwf	___ftdiv@f3+1
  1397  041F  3000               	movlw	0
  1398  0420  00B5               	movwf	___ftdiv@f3+2
  1399  0421  3089               	movlw	137
  1400  0422  0737               	addwf	___ftdiv@sign,w
  1401  0423  00AE               	movwf	??___ftdiv
  1402  0424  082E               	movf	??___ftdiv,w
  1403  0425  02B6               	subwf	___ftdiv@exp,f
  1404  0426  082B               	movf	___ftdiv@f1,w
  1405  0427  00AE               	movwf	??___ftdiv
  1406  0428  082C               	movf	___ftdiv@f1+1,w
  1407  0429  00AF               	movwf	??___ftdiv+1
  1408  042A  082D               	movf	___ftdiv@f1+2,w
  1409  042B  00B0               	movwf	??___ftdiv+2
  1410  042C  3010               	movlw	16
  1411  042D                     u1865:	
  1412  042D  1003               	clrc
  1413  042E  0CB0               	rrf	??___ftdiv+2,f
  1414  042F  0CAF               	rrf	??___ftdiv+1,f
  1415  0430  0CAE               	rrf	??___ftdiv,f
  1416  0431  3EFF               	addlw	-1
  1417  0432  1D03               	skipz
  1418  0433  2C2D               	goto	u1865
  1419  0434  082E               	movf	??___ftdiv,w
  1420  0435  00B1               	movwf	??___ftdiv+3
  1421  0436  0831               	movf	??___ftdiv+3,w
  1422  0437  00B7               	movwf	___ftdiv@sign
  1423  0438  0828               	movf	___ftdiv@f2,w
  1424  0439  00AE               	movwf	??___ftdiv
  1425  043A  0829               	movf	___ftdiv@f2+1,w
  1426  043B  00AF               	movwf	??___ftdiv+1
  1427  043C  082A               	movf	___ftdiv@f2+2,w
  1428  043D  00B0               	movwf	??___ftdiv+2
  1429  043E  3010               	movlw	16
  1430  043F                     u1875:	
  1431  043F  1003               	clrc
  1432  0440  0CB0               	rrf	??___ftdiv+2,f
  1433  0441  0CAF               	rrf	??___ftdiv+1,f
  1434  0442  0CAE               	rrf	??___ftdiv,f
  1435  0443  3EFF               	addlw	-1
  1436  0444  1D03               	skipz
  1437  0445  2C3F               	goto	u1875
  1438  0446  082E               	movf	??___ftdiv,w
  1439  0447  00B1               	movwf	??___ftdiv+3
  1440  0448  0831               	movf	??___ftdiv+3,w
  1441  0449  06B7               	xorwf	___ftdiv@sign,f
  1442  044A  3080               	movlw	128
  1443  044B  00AE               	movwf	??___ftdiv
  1444  044C  082E               	movf	??___ftdiv,w
  1445  044D  05B7               	andwf	___ftdiv@sign,f
  1446  044E  17AC               	bsf	___ftdiv@f1+1,7
  1447  044F  30FF               	movlw	255
  1448  0450  05AB               	andwf	___ftdiv@f1,f
  1449  0451  30FF               	movlw	255
  1450  0452  05AC               	andwf	___ftdiv@f1+1,f
  1451  0453  3000               	movlw	0
  1452  0454  05AD               	andwf	___ftdiv@f1+2,f
  1453  0455  17A9               	bsf	___ftdiv@f2+1,7
  1454  0456  30FF               	movlw	255
  1455  0457  05A8               	andwf	___ftdiv@f2,f
  1456  0458  30FF               	movlw	255
  1457  0459  05A9               	andwf	___ftdiv@f2+1,f
  1458  045A  3000               	movlw	0
  1459  045B  05AA               	andwf	___ftdiv@f2+2,f
  1460  045C  3018               	movlw	24
  1461  045D  00AE               	movwf	??___ftdiv
  1462  045E  082E               	movf	??___ftdiv,w
  1463  045F  00B2               	movwf	___ftdiv@cntr
  1464  0460                     l1917:	
  1465  0460  3001               	movlw	1
  1466  0461                     u1885:	
  1467  0461  1003               	clrc
  1468  0462  0DB3               	rlf	___ftdiv@f3,f
  1469  0463  0DB4               	rlf	___ftdiv@f3+1,f
  1470  0464  0DB5               	rlf	___ftdiv@f3+2,f
  1471  0465  3EFF               	addlw	-1
  1472  0466  1D03               	skipz
  1473  0467  2C61               	goto	u1885
  1474  0468  082A               	movf	___ftdiv@f2+2,w
  1475  0469  022D               	subwf	___ftdiv@f1+2,w
  1476  046A  1D03               	skipz
  1477  046B  2C72               	goto	u1895
  1478  046C  0829               	movf	___ftdiv@f2+1,w
  1479  046D  022C               	subwf	___ftdiv@f1+1,w
  1480  046E  1D03               	skipz
  1481  046F  2C72               	goto	u1895
  1482  0470  0828               	movf	___ftdiv@f2,w
  1483  0471  022B               	subwf	___ftdiv@f1,w
  1484  0472                     u1895:	
  1485  0472  1C03               	skipc
  1486  0473  2C7F               	goto	l1925
  1487  0474  0828               	movf	___ftdiv@f2,w
  1488  0475  02AB               	subwf	___ftdiv@f1,f
  1489  0476  0829               	movf	___ftdiv@f2+1,w
  1490  0477  1C03               	skipc
  1491  0478  0F29               	incfsz	___ftdiv@f2+1,w
  1492  0479  02AC               	subwf	___ftdiv@f1+1,f
  1493  047A  082A               	movf	___ftdiv@f2+2,w
  1494  047B  1C03               	skipc
  1495  047C  0A2A               	incf	___ftdiv@f2+2,w
  1496  047D  02AD               	subwf	___ftdiv@f1+2,f
  1497  047E  1433               	bsf	___ftdiv@f3,0
  1498  047F                     l1925:	
  1499  047F  3001               	movlw	1
  1500  0480                     u1905:	
  1501  0480  1003               	clrc
  1502  0481  0DAB               	rlf	___ftdiv@f1,f
  1503  0482  0DAC               	rlf	___ftdiv@f1+1,f
  1504  0483  0DAD               	rlf	___ftdiv@f1+2,f
  1505  0484  3EFF               	addlw	-1
  1506  0485  1D03               	skipz
  1507  0486  2C80               	goto	u1905
  1508  0487  3001               	movlw	1
  1509  0488  02B2               	subwf	___ftdiv@cntr,f
  1510  0489  1D03               	btfss	3,2
  1511  048A  2C60               	goto	l1917
  1512  048B  0833               	movf	___ftdiv@f3,w
  1513  048C  00A0               	movwf	?___ftpack
  1514  048D  0834               	movf	___ftdiv@f3+1,w
  1515  048E  00A1               	movwf	?___ftpack+1
  1516  048F  0835               	movf	___ftdiv@f3+2,w
  1517  0490  00A2               	movwf	?___ftpack+2
  1518  0491  0836               	movf	___ftdiv@exp,w
  1519  0492  00AE               	movwf	??___ftdiv
  1520  0493  082E               	movf	??___ftdiv,w
  1521  0494  00A3               	movwf	?___ftpack+3
  1522  0495  0837               	movf	___ftdiv@sign,w
  1523  0496  00AF               	movwf	??___ftdiv+1
  1524  0497  082F               	movf	??___ftdiv+1,w
  1525  0498  00A4               	movwf	?___ftpack+4
  1526  0499  118A  25AE         	fcall	___ftpack
  1527  049B  1283               	bcf	3,5	;RP0=0, select bank0
  1528  049C  1303               	bcf	3,6	;RP1=0, select bank0
  1529  049D  0820               	movf	?___ftpack,w
  1530  049E  00A8               	movwf	?___ftdiv
  1531  049F  0821               	movf	?___ftpack+1,w
  1532  04A0  00A9               	movwf	?___ftdiv+1
  1533  04A1  0822               	movf	?___ftpack+2,w
  1534  04A2  00AA               	movwf	?___ftdiv+2
  1535  04A3  0008               	return
  1536  04A4                     __end_of___ftdiv:	
  1537                           
  1538                           	psect	text6
  1539  0129                     __ptext6:	
  1540 ;; *************** function ___ftadd *****************
  1541 ;; Defined at:
  1542 ;;		line 87 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\ftadd.c"
  1543 ;; Parameters:    Size  Location     Type
  1544 ;;  f1              3   23[BANK0 ] float 
  1545 ;;  f2              3   26[BANK0 ] float 
  1546 ;; Auto vars:     Size  Location     Type
  1547 ;;  exp1            1   35[BANK0 ] unsigned char 
  1548 ;;  exp2            1   34[BANK0 ] unsigned char 
  1549 ;;  sign            1   33[BANK0 ] unsigned char 
  1550 ;; Return value:  Size  Location     Type
  1551 ;;                  3   23[BANK0 ] float 
  1552 ;; Registers used:
  1553 ;;		wreg, status,2, status,0, pclath, cstack
  1554 ;; Tracked objects:
  1555 ;;		On entry : 0/0
  1556 ;;		On exit  : 0/0
  1557 ;;		Unchanged: 0/0
  1558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1559 ;;      Params:         0       6       0       0       0
  1560 ;;      Locals:         0       3       0       0       0
  1561 ;;      Temps:          0       4       0       0       0
  1562 ;;      Totals:         0      13       0       0       0
  1563 ;;Total ram usage:       13 bytes
  1564 ;; Hardware stack levels used:    1
  1565 ;; Hardware stack levels required when called:    2
  1566 ;; This function calls:
  1567 ;;		___ftpack
  1568 ;; This function is called by:
  1569 ;;		_main
  1570 ;; This function uses a non-reentrant model
  1571 ;;
  1572                           
  1573                           
  1574                           ;psect for function ___ftadd
  1575  0129                     ___ftadd:	
  1576                           
  1577                           ;incstack = 0
  1578                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  1579  0129  1283               	bcf	3,5	;RP0=0, select bank0
  1580  012A  1303               	bcf	3,6	;RP1=0, select bank0
  1581  012B  0837               	movf	___ftadd@f1,w
  1582  012C  00BD               	movwf	??___ftadd
  1583  012D  0838               	movf	___ftadd@f1+1,w
  1584  012E  00BE               	movwf	??___ftadd+1
  1585  012F  0839               	movf	___ftadd@f1+2,w
  1586  0130  00BF               	movwf	??___ftadd+2
  1587  0131  1003               	clrc
  1588  0132  0D3E               	rlf	??___ftadd+1,w
  1589  0133  0D3F               	rlf	??___ftadd+2,w
  1590  0134  00C0               	movwf	??___ftadd+3
  1591  0135  0840               	movf	??___ftadd+3,w
  1592  0136  00C3               	movwf	___ftadd@exp1
  1593  0137  083A               	movf	___ftadd@f2,w
  1594  0138  00BD               	movwf	??___ftadd
  1595  0139  083B               	movf	___ftadd@f2+1,w
  1596  013A  00BE               	movwf	??___ftadd+1
  1597  013B  083C               	movf	___ftadd@f2+2,w
  1598  013C  00BF               	movwf	??___ftadd+2
  1599  013D  1003               	clrc
  1600  013E  0D3E               	rlf	??___ftadd+1,w
  1601  013F  0D3F               	rlf	??___ftadd+2,w
  1602  0140  00C0               	movwf	??___ftadd+3
  1603  0141  0840               	movf	??___ftadd+3,w
  1604  0142  00C2               	movwf	___ftadd@exp2
  1605  0143  0843               	movf	___ftadd@exp1,w
  1606  0144  1903               	btfsc	3,2
  1607  0145  2952               	goto	l1827
  1608  0146  0842               	movf	___ftadd@exp2,w
  1609  0147  0243               	subwf	___ftadd@exp1,w
  1610  0148  1803               	skipnc
  1611  0149  2959               	goto	l1831
  1612  014A  0343               	decf	___ftadd@exp1,w
  1613  014B  3AFF               	xorlw	255
  1614  014C  0742               	addwf	___ftadd@exp2,w
  1615  014D  00BD               	movwf	??___ftadd
  1616  014E  3019               	movlw	25
  1617  014F  023D               	subwf	??___ftadd,w
  1618  0150  1C03               	skipc
  1619  0151  2959               	goto	l1831
  1620  0152                     l1827:	
  1621  0152  083A               	movf	___ftadd@f2,w
  1622  0153  00B7               	movwf	?___ftadd
  1623  0154  083B               	movf	___ftadd@f2+1,w
  1624  0155  00B8               	movwf	?___ftadd+1
  1625  0156  083C               	movf	___ftadd@f2+2,w
  1626  0157  00B9               	movwf	?___ftadd+2
  1627  0158  0008               	return
  1628  0159                     l1831:	
  1629  0159  0842               	movf	___ftadd@exp2,w
  1630  015A  1903               	btfsc	3,2
  1631  015B  0008               	return
  1632  015C  0843               	movf	___ftadd@exp1,w
  1633  015D  0242               	subwf	___ftadd@exp2,w
  1634  015E  1803               	skipnc
  1635  015F  2968               	goto	l1837
  1636  0160  0342               	decf	___ftadd@exp2,w
  1637  0161  3AFF               	xorlw	255
  1638  0162  0743               	addwf	___ftadd@exp1,w
  1639  0163  00BD               	movwf	??___ftadd
  1640  0164  3019               	movlw	25
  1641  0165  023D               	subwf	??___ftadd,w
  1642  0166  1803               	btfsc	3,0
  1643  0167  0008               	return
  1644  0168                     l1837:	
  1645  0168  3006               	movlw	6
  1646  0169  00BD               	movwf	??___ftadd
  1647  016A  083D               	movf	??___ftadd,w
  1648  016B  00C1               	movwf	___ftadd@sign
  1649  016C  1BB9               	btfsc	___ftadd@f1+2,7
  1650  016D  17C1               	bsf	___ftadd@sign,7
  1651  016E  1BBC               	btfsc	___ftadd@f2+2,7
  1652  016F  1741               	bsf	___ftadd@sign,6
  1653  0170  17B8               	bsf	___ftadd@f1+1,7
  1654  0171  30FF               	movlw	255
  1655  0172  05B7               	andwf	___ftadd@f1,f
  1656  0173  30FF               	movlw	255
  1657  0174  05B8               	andwf	___ftadd@f1+1,f
  1658  0175  3000               	movlw	0
  1659  0176  05B9               	andwf	___ftadd@f1+2,f
  1660  0177  17BB               	bsf	___ftadd@f2+1,7
  1661  0178  30FF               	movlw	255
  1662  0179  05BA               	andwf	___ftadd@f2,f
  1663  017A  30FF               	movlw	255
  1664  017B  05BB               	andwf	___ftadd@f2+1,f
  1665  017C  3000               	movlw	0
  1666  017D  05BC               	andwf	___ftadd@f2+2,f
  1667  017E  0842               	movf	___ftadd@exp2,w
  1668  017F  0243               	subwf	___ftadd@exp1,w
  1669  0180  1803               	skipnc
  1670  0181  29A8               	goto	l1859
  1671  0182                     l1849:	
  1672  0182  3001               	movlw	1
  1673  0183                     u1695:	
  1674  0183  1003               	clrc
  1675  0184  0DBA               	rlf	___ftadd@f2,f
  1676  0185  0DBB               	rlf	___ftadd@f2+1,f
  1677  0186  0DBC               	rlf	___ftadd@f2+2,f
  1678  0187  3EFF               	addlw	-1
  1679  0188  1D03               	skipz
  1680  0189  2983               	goto	u1695
  1681  018A  3001               	movlw	1
  1682  018B  02C2               	subwf	___ftadd@exp2,f
  1683  018C  0842               	movf	___ftadd@exp2,w
  1684  018D  0643               	xorwf	___ftadd@exp1,w
  1685  018E  1903               	skipnz
  1686  018F  29A3               	goto	l1857
  1687  0190  3001               	movlw	1
  1688  0191  02C1               	subwf	___ftadd@sign,f
  1689  0192  0841               	movf	___ftadd@sign,w
  1690  0193  3907               	andlw	7
  1691  0194  1903               	btfsc	3,2
  1692  0195  29A3               	goto	l1857
  1693  0196  2982               	goto	l1849
  1694  0197                     l1855:	
  1695  0197  3001               	movlw	1
  1696  0198                     u1725:	
  1697  0198  1003               	clrc
  1698  0199  0CB9               	rrf	___ftadd@f1+2,f
  1699  019A  0CB8               	rrf	___ftadd@f1+1,f
  1700  019B  0CB7               	rrf	___ftadd@f1,f
  1701  019C  3EFF               	addlw	-1
  1702  019D  1D03               	skipz
  1703  019E  2998               	goto	u1725
  1704  019F  3001               	movlw	1
  1705  01A0  00BD               	movwf	??___ftadd
  1706  01A1  083D               	movf	??___ftadd,w
  1707  01A2  07C3               	addwf	___ftadd@exp1,f
  1708  01A3                     l1857:	
  1709  01A3  0843               	movf	___ftadd@exp1,w
  1710  01A4  0642               	xorwf	___ftadd@exp2,w
  1711  01A5  1903               	btfsc	3,2
  1712  01A6  29D1               	goto	l438
  1713  01A7  2997               	goto	l1855
  1714  01A8                     l1859:	
  1715  01A8  0843               	movf	___ftadd@exp1,w
  1716  01A9  0242               	subwf	___ftadd@exp2,w
  1717  01AA  1803               	skipnc
  1718  01AB  29D1               	goto	l438
  1719  01AC                     l1861:	
  1720  01AC  3001               	movlw	1
  1721  01AD                     u1755:	
  1722  01AD  1003               	clrc
  1723  01AE  0DB7               	rlf	___ftadd@f1,f
  1724  01AF  0DB8               	rlf	___ftadd@f1+1,f
  1725  01B0  0DB9               	rlf	___ftadd@f1+2,f
  1726  01B1  3EFF               	addlw	-1
  1727  01B2  1D03               	skipz
  1728  01B3  29AD               	goto	u1755
  1729  01B4  3001               	movlw	1
  1730  01B5  02C3               	subwf	___ftadd@exp1,f
  1731  01B6  0842               	movf	___ftadd@exp2,w
  1732  01B7  0643               	xorwf	___ftadd@exp1,w
  1733  01B8  1903               	skipnz
  1734  01B9  29CD               	goto	l1869
  1735  01BA  3001               	movlw	1
  1736  01BB  02C1               	subwf	___ftadd@sign,f
  1737  01BC  0841               	movf	___ftadd@sign,w
  1738  01BD  3907               	andlw	7
  1739  01BE  1903               	btfsc	3,2
  1740  01BF  29CD               	goto	l1869
  1741  01C0  29AC               	goto	l1861
  1742  01C1                     l1867:	
  1743  01C1  3001               	movlw	1
  1744  01C2                     u1785:	
  1745  01C2  1003               	clrc
  1746  01C3  0CBC               	rrf	___ftadd@f2+2,f
  1747  01C4  0CBB               	rrf	___ftadd@f2+1,f
  1748  01C5  0CBA               	rrf	___ftadd@f2,f
  1749  01C6  3EFF               	addlw	-1
  1750  01C7  1D03               	skipz
  1751  01C8  29C2               	goto	u1785
  1752  01C9  3001               	movlw	1
  1753  01CA  00BD               	movwf	??___ftadd
  1754  01CB  083D               	movf	??___ftadd,w
  1755  01CC  07C2               	addwf	___ftadd@exp2,f
  1756  01CD                     l1869:	
  1757  01CD  0843               	movf	___ftadd@exp1,w
  1758  01CE  0642               	xorwf	___ftadd@exp2,w
  1759  01CF  1D03               	skipz
  1760  01D0  29C1               	goto	l1867
  1761  01D1                     l438:	
  1762  01D1  1FC1               	btfss	___ftadd@sign,7
  1763  01D2  29E3               	goto	l1873
  1764  01D3  30FF               	movlw	255
  1765  01D4  06B7               	xorwf	___ftadd@f1,f
  1766  01D5  30FF               	movlw	255
  1767  01D6  06B8               	xorwf	___ftadd@f1+1,f
  1768  01D7  30FF               	movlw	255
  1769  01D8  06B9               	xorwf	___ftadd@f1+2,f
  1770  01D9  3001               	movlw	1
  1771  01DA  07B7               	addwf	___ftadd@f1,f
  1772  01DB  3000               	movlw	0
  1773  01DC  1803               	skipnc
  1774  01DD  3001               	movlw	1
  1775  01DE  07B8               	addwf	___ftadd@f1+1,f
  1776  01DF  3000               	movlw	0
  1777  01E0  1803               	skipnc
  1778  01E1  3001               	movlw	1
  1779  01E2  07B9               	addwf	___ftadd@f1+2,f
  1780  01E3                     l1873:	
  1781  01E3  1F41               	btfss	___ftadd@sign,6
  1782  01E4  29F5               	goto	l1877
  1783  01E5  30FF               	movlw	255
  1784  01E6  06BA               	xorwf	___ftadd@f2,f
  1785  01E7  30FF               	movlw	255
  1786  01E8  06BB               	xorwf	___ftadd@f2+1,f
  1787  01E9  30FF               	movlw	255
  1788  01EA  06BC               	xorwf	___ftadd@f2+2,f
  1789  01EB  3001               	movlw	1
  1790  01EC  07BA               	addwf	___ftadd@f2,f
  1791  01ED  3000               	movlw	0
  1792  01EE  1803               	skipnc
  1793  01EF  3001               	movlw	1
  1794  01F0  07BB               	addwf	___ftadd@f2+1,f
  1795  01F1  3000               	movlw	0
  1796  01F2  1803               	skipnc
  1797  01F3  3001               	movlw	1
  1798  01F4  07BC               	addwf	___ftadd@f2+2,f
  1799  01F5                     l1877:	
  1800  01F5  01C1               	clrf	___ftadd@sign
  1801  01F6  0837               	movf	___ftadd@f1,w
  1802  01F7  07BA               	addwf	___ftadd@f2,f
  1803  01F8  0838               	movf	___ftadd@f1+1,w
  1804  01F9  1103               	clrz
  1805  01FA  1803               	skipnc
  1806  01FB  0A38               	incf	___ftadd@f1+1,w
  1807  01FC  1D03               	btfss	3,2
  1808  01FD  07BB               	addwf	___ftadd@f2+1,f
  1809  01FE  0839               	movf	___ftadd@f1+2,w
  1810  01FF  1103               	clrz
  1811  0200  1803               	skipnc
  1812  0201  0A39               	incf	___ftadd@f1+2,w
  1813  0202  1D03               	btfss	3,2
  1814  0203  07BC               	addwf	___ftadd@f2+2,f
  1815  0204  1FBC               	btfss	___ftadd@f2+2,7
  1816  0205  2A18               	goto	l1887
  1817  0206  30FF               	movlw	255
  1818  0207  06BA               	xorwf	___ftadd@f2,f
  1819  0208  30FF               	movlw	255
  1820  0209  06BB               	xorwf	___ftadd@f2+1,f
  1821  020A  30FF               	movlw	255
  1822  020B  06BC               	xorwf	___ftadd@f2+2,f
  1823  020C  3001               	movlw	1
  1824  020D  07BA               	addwf	___ftadd@f2,f
  1825  020E  3000               	movlw	0
  1826  020F  1803               	skipnc
  1827  0210  3001               	movlw	1
  1828  0211  07BB               	addwf	___ftadd@f2+1,f
  1829  0212  3000               	movlw	0
  1830  0213  1803               	skipnc
  1831  0214  3001               	movlw	1
  1832  0215  07BC               	addwf	___ftadd@f2+2,f
  1833  0216  01C1               	clrf	___ftadd@sign
  1834  0217  0AC1               	incf	___ftadd@sign,f
  1835  0218                     l1887:	
  1836  0218  083A               	movf	___ftadd@f2,w
  1837  0219  00A0               	movwf	?___ftpack
  1838  021A  083B               	movf	___ftadd@f2+1,w
  1839  021B  00A1               	movwf	?___ftpack+1
  1840  021C  083C               	movf	___ftadd@f2+2,w
  1841  021D  00A2               	movwf	?___ftpack+2
  1842  021E  0843               	movf	___ftadd@exp1,w
  1843  021F  00BD               	movwf	??___ftadd
  1844  0220  083D               	movf	??___ftadd,w
  1845  0221  00A3               	movwf	?___ftpack+3
  1846  0222  0841               	movf	___ftadd@sign,w
  1847  0223  00BE               	movwf	??___ftadd+1
  1848  0224  083E               	movf	??___ftadd+1,w
  1849  0225  00A4               	movwf	?___ftpack+4
  1850  0226  118A  25AE         	fcall	___ftpack
  1851  0228  1283               	bcf	3,5	;RP0=0, select bank0
  1852  0229  1303               	bcf	3,6	;RP1=0, select bank0
  1853  022A  0820               	movf	?___ftpack,w
  1854  022B  00B7               	movwf	?___ftadd
  1855  022C  0821               	movf	?___ftpack+1,w
  1856  022D  00B8               	movwf	?___ftadd+1
  1857  022E  0822               	movf	?___ftpack+2,w
  1858  022F  00B9               	movwf	?___ftadd+2
  1859  0230  0008               	return
  1860  0231                     __end_of___ftadd:	
  1861                           
  1862                           	psect	text7
  1863  071F                     __ptext7:	
  1864 ;; *************** function ___awtoft *****************
  1865 ;; Defined at:
  1866 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\awtoft.c"
  1867 ;; Parameters:    Size  Location     Type
  1868 ;;  c               2   14[BANK0 ] int 
  1869 ;; Auto vars:     Size  Location     Type
  1870 ;;  sign            1   19[BANK0 ] unsigned char 
  1871 ;; Return value:  Size  Location     Type
  1872 ;;                  3   14[BANK0 ] float 
  1873 ;; Registers used:
  1874 ;;		wreg, status,2, status,0, pclath, cstack
  1875 ;; Tracked objects:
  1876 ;;		On entry : 0/0
  1877 ;;		On exit  : 0/0
  1878 ;;		Unchanged: 0/0
  1879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1880 ;;      Params:         0       3       0       0       0
  1881 ;;      Locals:         0       1       0       0       0
  1882 ;;      Temps:          0       2       0       0       0
  1883 ;;      Totals:         0       6       0       0       0
  1884 ;;Total ram usage:        6 bytes
  1885 ;; Hardware stack levels used:    1
  1886 ;; Hardware stack levels required when called:    2
  1887 ;; This function calls:
  1888 ;;		___ftpack
  1889 ;; This function is called by:
  1890 ;;		_main
  1891 ;; This function uses a non-reentrant model
  1892 ;;
  1893                           
  1894                           
  1895                           ;psect for function ___awtoft
  1896  071F                     ___awtoft:	
  1897                           
  1898                           ;incstack = 0
  1899                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  1900  071F  1283               	bcf	3,5	;RP0=0, select bank0
  1901  0720  1303               	bcf	3,6	;RP1=0, select bank0
  1902  0721  01B3               	clrf	___awtoft@sign
  1903  0722  1FAF               	btfss	___awtoft@c+1,7
  1904  0723  2F2B               	goto	l1815
  1905  0724  09AE               	comf	___awtoft@c,f
  1906  0725  09AF               	comf	___awtoft@c+1,f
  1907  0726  0AAE               	incf	___awtoft@c,f
  1908  0727  1903               	skipnz
  1909  0728  0AAF               	incf	___awtoft@c+1,f
  1910  0729  01B3               	clrf	___awtoft@sign
  1911  072A  0AB3               	incf	___awtoft@sign,f
  1912  072B                     l1815:	
  1913  072B  082E               	movf	___awtoft@c,w
  1914  072C  00A0               	movwf	?___ftpack
  1915  072D  082F               	movf	___awtoft@c+1,w
  1916  072E  00A1               	movwf	?___ftpack+1
  1917  072F  01A2               	clrf	?___ftpack+2
  1918  0730  308E               	movlw	142
  1919  0731  00B1               	movwf	??___awtoft
  1920  0732  0831               	movf	??___awtoft,w
  1921  0733  00A3               	movwf	?___ftpack+3
  1922  0734  0833               	movf	___awtoft@sign,w
  1923  0735  00B2               	movwf	??___awtoft+1
  1924  0736  0832               	movf	??___awtoft+1,w
  1925  0737  00A4               	movwf	?___ftpack+4
  1926  0738  118A  25AE         	fcall	___ftpack
  1927  073A  1283               	bcf	3,5	;RP0=0, select bank0
  1928  073B  1303               	bcf	3,6	;RP1=0, select bank0
  1929  073C  0820               	movf	?___ftpack,w
  1930  073D  00AE               	movwf	?___awtoft
  1931  073E  0821               	movf	?___ftpack+1,w
  1932  073F  00AF               	movwf	?___awtoft+1
  1933  0740  0822               	movf	?___ftpack+2,w
  1934  0741  00B0               	movwf	?___awtoft+2
  1935  0742  0008               	return
  1936  0743                     __end_of___awtoft:	
  1937                           
  1938                           	psect	text8
  1939  05AE                     __ptext8:	
  1940 ;; *************** function ___ftpack *****************
  1941 ;; Defined at:
  1942 ;;		line 63 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\float.c"
  1943 ;; Parameters:    Size  Location     Type
  1944 ;;  arg             3    0[BANK0 ] unsigned um
  1945 ;;  exp             1    3[BANK0 ] unsigned char 
  1946 ;;  sign            1    4[BANK0 ] unsigned char 
  1947 ;; Auto vars:     Size  Location     Type
  1948 ;;		None
  1949 ;; Return value:  Size  Location     Type
  1950 ;;                  3    0[BANK0 ] float 
  1951 ;; Registers used:
  1952 ;;		wreg, status,2, status,0
  1953 ;; Tracked objects:
  1954 ;;		On entry : 0/0
  1955 ;;		On exit  : 0/0
  1956 ;;		Unchanged: 0/0
  1957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1958 ;;      Params:         0       5       0       0       0
  1959 ;;      Locals:         0       0       0       0       0
  1960 ;;      Temps:          0       3       0       0       0
  1961 ;;      Totals:         0       8       0       0       0
  1962 ;;Total ram usage:        8 bytes
  1963 ;; Hardware stack levels used:    1
  1964 ;; Hardware stack levels required when called:    1
  1965 ;; This function calls:
  1966 ;;		Nothing
  1967 ;; This function is called by:
  1968 ;;		___awtoft
  1969 ;;		___ftadd
  1970 ;;		___ftdiv
  1971 ;;		___ftmul
  1972 ;;		___lwtoft
  1973 ;; This function uses a non-reentrant model
  1974 ;;
  1975                           
  1976                           
  1977                           ;psect for function ___ftpack
  1978  05AE                     ___ftpack:	
  1979                           
  1980                           ;incstack = 0
  1981                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  1982  05AE  1283               	bcf	3,5	;RP0=0, select bank0
  1983  05AF  1303               	bcf	3,6	;RP1=0, select bank0
  1984  05B0  0823               	movf	___ftpack@exp,w
  1985  05B1  1903               	btfsc	3,2
  1986  05B2  2DB8               	goto	l1737
  1987  05B3  0822               	movf	___ftpack@arg+2,w
  1988  05B4  0421               	iorwf	___ftpack@arg+1,w
  1989  05B5  0420               	iorwf	___ftpack@arg,w
  1990  05B6  1D03               	skipz
  1991  05B7  2DCB               	goto	l1743
  1992  05B8                     l1737:	
  1993  05B8  3000               	movlw	0
  1994  05B9  00A0               	movwf	?___ftpack
  1995  05BA  3000               	movlw	0
  1996  05BB  00A1               	movwf	?___ftpack+1
  1997  05BC  3000               	movlw	0
  1998  05BD  00A2               	movwf	?___ftpack+2
  1999  05BE  0008               	return
  2000  05BF                     l1741:	
  2001  05BF  3001               	movlw	1
  2002  05C0  00A5               	movwf	??___ftpack
  2003  05C1  0825               	movf	??___ftpack,w
  2004  05C2  07A3               	addwf	___ftpack@exp,f
  2005  05C3  3001               	movlw	1
  2006  05C4                     u1405:	
  2007  05C4  1003               	clrc
  2008  05C5  0CA2               	rrf	___ftpack@arg+2,f
  2009  05C6  0CA1               	rrf	___ftpack@arg+1,f
  2010  05C7  0CA0               	rrf	___ftpack@arg,f
  2011  05C8  3EFF               	addlw	-1
  2012  05C9  1D03               	skipz
  2013  05CA  2DC4               	goto	u1405
  2014  05CB                     l1743:	
  2015  05CB  30FE               	movlw	254
  2016  05CC  0522               	andwf	___ftpack@arg+2,w
  2017  05CD  1903               	btfsc	3,2
  2018  05CE  2DE6               	goto	l409
  2019  05CF  2DBF               	goto	l1741
  2020  05D0                     l1745:	
  2021  05D0  3001               	movlw	1
  2022  05D1  00A5               	movwf	??___ftpack
  2023  05D2  0825               	movf	??___ftpack,w
  2024  05D3  07A3               	addwf	___ftpack@exp,f
  2025  05D4  3001               	movlw	1
  2026  05D5  07A0               	addwf	___ftpack@arg,f
  2027  05D6  3000               	movlw	0
  2028  05D7  1803               	skipnc
  2029  05D8  3001               	movlw	1
  2030  05D9  07A1               	addwf	___ftpack@arg+1,f
  2031  05DA  3000               	movlw	0
  2032  05DB  1803               	skipnc
  2033  05DC  3001               	movlw	1
  2034  05DD  07A2               	addwf	___ftpack@arg+2,f
  2035  05DE  3001               	movlw	1
  2036  05DF                     u1425:	
  2037  05DF  1003               	clrc
  2038  05E0  0CA2               	rrf	___ftpack@arg+2,f
  2039  05E1  0CA1               	rrf	___ftpack@arg+1,f
  2040  05E2  0CA0               	rrf	___ftpack@arg,f
  2041  05E3  3EFF               	addlw	-1
  2042  05E4  1D03               	skipz
  2043  05E5  2DDF               	goto	u1425
  2044  05E6                     l409:	
  2045  05E6  30FF               	movlw	255
  2046  05E7  0522               	andwf	___ftpack@arg+2,w
  2047  05E8  1903               	btfsc	3,2
  2048  05E9  2DF5               	goto	l1753
  2049  05EA  2DD0               	goto	l1745
  2050  05EB                     l1751:	
  2051  05EB  3001               	movlw	1
  2052  05EC  02A3               	subwf	___ftpack@exp,f
  2053  05ED  3001               	movlw	1
  2054  05EE                     u1445:	
  2055  05EE  1003               	clrc
  2056  05EF  0DA0               	rlf	___ftpack@arg,f
  2057  05F0  0DA1               	rlf	___ftpack@arg+1,f
  2058  05F1  0DA2               	rlf	___ftpack@arg+2,f
  2059  05F2  3EFF               	addlw	-1
  2060  05F3  1D03               	skipz
  2061  05F4  2DEE               	goto	u1445
  2062  05F5                     l1753:	
  2063  05F5  1FA1               	btfss	___ftpack@arg+1,7
  2064  05F6  2DEB               	goto	l1751
  2065  05F7  1823               	btfsc	___ftpack@exp,0
  2066  05F8  2DFF               	goto	l415
  2067  05F9  30FF               	movlw	255
  2068  05FA  05A0               	andwf	___ftpack@arg,f
  2069  05FB  307F               	movlw	127
  2070  05FC  05A1               	andwf	___ftpack@arg+1,f
  2071  05FD  30FF               	movlw	255
  2072  05FE  05A2               	andwf	___ftpack@arg+2,f
  2073  05FF                     l415:	
  2074  05FF  1003               	clrc
  2075  0600  0CA3               	rrf	___ftpack@exp,f
  2076  0601  0823               	movf	___ftpack@exp,w
  2077  0602  00A5               	movwf	??___ftpack
  2078  0603  01A6               	clrf	??___ftpack+1
  2079  0604  01A7               	clrf	??___ftpack+2
  2080  0605  3010               	movlw	16
  2081  0606                     u1475:	
  2082  0606  1003               	clrc
  2083  0607  0DA5               	rlf	??___ftpack,f
  2084  0608  0DA6               	rlf	??___ftpack+1,f
  2085  0609  0DA7               	rlf	??___ftpack+2,f
  2086  060A  3EFF               	addlw	-1
  2087  060B  1D03               	skipz
  2088  060C  2E06               	goto	u1475
  2089  060D  0825               	movf	??___ftpack,w
  2090  060E  04A0               	iorwf	___ftpack@arg,f
  2091  060F  0826               	movf	??___ftpack+1,w
  2092  0610  04A1               	iorwf	___ftpack@arg+1,f
  2093  0611  0827               	movf	??___ftpack+2,w
  2094  0612  04A2               	iorwf	___ftpack@arg+2,f
  2095  0613  0824               	movf	___ftpack@sign,w
  2096  0614  1903               	btfsc	3,2
  2097  0615  0008               	return
  2098  0616  17A2               	bsf	___ftpack@arg+2,7
  2099  0617  0008               	return
  2100  0618                     __end_of___ftpack:	
  2101                           
  2102                           	psect	text9
  2103  0013                     __ptext9:	
  2104 ;; *************** function _fLCD_PrintNumber *****************
  2105 ;; Defined at:
  2106 ;;		line 207 in file "chrono.c"
  2107 ;; Parameters:    Size  Location     Type
  2108 ;;  Number          2   14[BANK0 ] short 
  2109 ;; Auto vars:     Size  Location     Type
  2110 ;;  tmp_int         2   17[BANK0 ] short 
  2111 ;;  tmp_byte        1   19[BANK0 ] unsigned char 
  2112 ;; Return value:  Size  Location     Type
  2113 ;;		None               void
  2114 ;; Registers used:
  2115 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2116 ;; Tracked objects:
  2117 ;;		On entry : 0/0
  2118 ;;		On exit  : 0/0
  2119 ;;		Unchanged: 0/0
  2120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2121 ;;      Params:         0       2       0       0       0
  2122 ;;      Locals:         0       3       0       0       0
  2123 ;;      Temps:          0       1       0       0       0
  2124 ;;      Totals:         0       6       0       0       0
  2125 ;;Total ram usage:        6 bytes
  2126 ;; Hardware stack levels used:    1
  2127 ;; Hardware stack levels required when called:    2
  2128 ;; This function calls:
  2129 ;;		_fLCD_RawSend
  2130 ;;		___awdiv
  2131 ;; This function is called by:
  2132 ;;		_main
  2133 ;; This function uses a non-reentrant model
  2134 ;;
  2135                           
  2136                           
  2137                           ;psect for function _fLCD_PrintNumber
  2138  0013                     _fLCD_PrintNumber:	
  2139                           
  2140                           ;chrono.c: 208: short tmp_int;
  2141                           ;chrono.c: 209: char tmp_byte;
  2142                           ;chrono.c: 210: if(Number < 0){
  2143                           
  2144                           ;incstack = 0
  2145                           ; Regs used in _fLCD_PrintNumber: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2146  0013  1283               	bcf	3,5	;RP0=0, select bank0
  2147  0014  1303               	bcf	3,6	;RP1=0, select bank0
  2148  0015  1FAF               	btfss	fLCD_PrintNumber@Number+1,7
  2149  0016  2826               	goto	l1539
  2150                           
  2151                           ;chrono.c: 211: fLCD_RawSend('-', 0x10);
  2152  0017  3010               	movlw	16
  2153  0018  00B0               	movwf	??_fLCD_PrintNumber
  2154  0019  0830               	movf	??_fLCD_PrintNumber,w
  2155  001A  00A0               	movwf	?_fLCD_RawSend
  2156  001B  302D               	movlw	45
  2157  001C  118A  2618  118A   	fcall	_fLCD_RawSend
  2158                           
  2159                           ;chrono.c: 212: Number = 0 - Number;
  2160  001F  1283               	bcf	3,5	;RP0=0, select bank0
  2161  0020  1303               	bcf	3,6	;RP1=0, select bank0
  2162  0021  09AE               	comf	fLCD_PrintNumber@Number,f
  2163  0022  09AF               	comf	fLCD_PrintNumber@Number+1,f
  2164  0023  0AAE               	incf	fLCD_PrintNumber@Number,f
  2165  0024  1903               	skipnz
  2166  0025  0AAF               	incf	fLCD_PrintNumber@Number+1,f
  2167  0026                     l1539:	
  2168                           
  2169                           ;chrono.c: 213: }
  2170                           ;chrono.c: 215: tmp_int = Number;
  2171  0026  082F               	movf	fLCD_PrintNumber@Number+1,w
  2172  0027  01B2               	clrf	fLCD_PrintNumber@tmp_int+1
  2173  0028  07B2               	addwf	fLCD_PrintNumber@tmp_int+1,f
  2174  0029  082E               	movf	fLCD_PrintNumber@Number,w
  2175  002A  01B1               	clrf	fLCD_PrintNumber@tmp_int
  2176  002B  07B1               	addwf	fLCD_PrintNumber@tmp_int,f
  2177                           
  2178                           ;chrono.c: 216: if(Number >= 10000){
  2179  002C  082F               	movf	fLCD_PrintNumber@Number+1,w
  2180  002D  3A80               	xorlw	128
  2181  002E  00FF               	movwf	127
  2182  002F  30A7               	movlw	167
  2183  0030  027F               	subwf	127,w
  2184  0031  1D03               	skipz
  2185  0032  2835               	goto	u1105
  2186  0033  3010               	movlw	16
  2187  0034  022E               	subwf	fLCD_PrintNumber@Number,w
  2188  0035                     u1105:	
  2189  0035  1C03               	skipc
  2190  0036  2867               	goto	l1549
  2191                           
  2192                           ;chrono.c: 217: tmp_byte = tmp_int/10000;
  2193  0037  3010               	movlw	16
  2194  0038  1283               	bcf	3,5	;RP0=0, select bank0
  2195  0039  1303               	bcf	3,6	;RP1=0, select bank0
  2196  003A  00A0               	movwf	?___awdiv
  2197  003B  3027               	movlw	39
  2198  003C  00A1               	movwf	?___awdiv+1
  2199  003D  0832               	movf	fLCD_PrintNumber@tmp_int+1,w
  2200  003E  01A3               	clrf	?___awdiv+3
  2201  003F  07A3               	addwf	?___awdiv+3,f
  2202  0040  0831               	movf	fLCD_PrintNumber@tmp_int,w
  2203  0041  01A2               	clrf	?___awdiv+2
  2204  0042  07A2               	addwf	?___awdiv+2,f
  2205  0043  118A  2678  118A   	fcall	___awdiv
  2206  0046  1283               	bcf	3,5	;RP0=0, select bank0
  2207  0047  1303               	bcf	3,6	;RP1=0, select bank0
  2208  0048  0820               	movf	?___awdiv,w
  2209  0049  00B0               	movwf	??_fLCD_PrintNumber
  2210  004A  0830               	movf	??_fLCD_PrintNumber,w
  2211  004B  00B3               	movwf	fLCD_PrintNumber@tmp_byte
  2212                           
  2213                           ;chrono.c: 218: fLCD_RawSend('0' + tmp_byte, 0x10);
  2214  004C  3010               	movlw	16
  2215  004D  00B0               	movwf	??_fLCD_PrintNumber
  2216  004E  0830               	movf	??_fLCD_PrintNumber,w
  2217  004F  00A0               	movwf	?_fLCD_RawSend
  2218  0050  0833               	movf	fLCD_PrintNumber@tmp_byte,w
  2219  0051  3E30               	addlw	48
  2220  0052  118A  2618  118A   	fcall	_fLCD_RawSend
  2221  0055                     l1547:	
  2222                           ;chrono.c: 220: while(tmp_byte > 0){
  2223                           
  2224  0055  1283               	bcf	3,5	;RP0=0, select bank0
  2225  0056  1303               	bcf	3,6	;RP1=0, select bank0
  2226  0057  08B3               	movf	fLCD_PrintNumber@tmp_byte,f
  2227  0058  1903               	btfsc	3,2
  2228  0059  2867               	goto	l1549
  2229                           
  2230                           ;chrono.c: 221: tmp_int = tmp_int - 10000;
  2231  005A  1283               	bcf	3,5	;RP0=0, select bank0
  2232  005B  1303               	bcf	3,6	;RP1=0, select bank0
  2233  005C  0831               	movf	fLCD_PrintNumber@tmp_int,w
  2234  005D  3EF0               	addlw	240
  2235  005E  00B1               	movwf	fLCD_PrintNumber@tmp_int
  2236  005F  0832               	movf	fLCD_PrintNumber@tmp_int+1,w
  2237  0060  1803               	skipnc
  2238  0061  3E01               	addlw	1
  2239  0062  3ED8               	addlw	216
  2240  0063  00B2               	movwf	fLCD_PrintNumber@tmp_int+1
  2241                           
  2242                           ;chrono.c: 222: tmp_byte--;
  2243  0064  3001               	movlw	1
  2244  0065  02B3               	subwf	fLCD_PrintNumber@tmp_byte,f
  2245  0066  2855               	goto	l1547
  2246  0067                     l1549:	
  2247                           
  2248                           ;chrono.c: 223: }
  2249                           ;chrono.c: 224: }
  2250                           ;chrono.c: 226: if(Number >= 1000){
  2251  0067  1283               	bcf	3,5	;RP0=0, select bank0
  2252  0068  1303               	bcf	3,6	;RP1=0, select bank0
  2253  0069  082F               	movf	fLCD_PrintNumber@Number+1,w
  2254  006A  3A80               	xorlw	128
  2255  006B  00FF               	movwf	127
  2256  006C  3083               	movlw	131
  2257  006D  027F               	subwf	127,w
  2258  006E  1D03               	skipz
  2259  006F  2872               	goto	u1125
  2260  0070  30E8               	movlw	232
  2261  0071  022E               	subwf	fLCD_PrintNumber@Number,w
  2262  0072                     u1125:	
  2263  0072  1C03               	skipc
  2264  0073  28A4               	goto	l1557
  2265                           
  2266                           ;chrono.c: 227: tmp_byte = tmp_int/1000;
  2267  0074  30E8               	movlw	232
  2268  0075  1283               	bcf	3,5	;RP0=0, select bank0
  2269  0076  1303               	bcf	3,6	;RP1=0, select bank0
  2270  0077  00A0               	movwf	?___awdiv
  2271  0078  3003               	movlw	3
  2272  0079  00A1               	movwf	?___awdiv+1
  2273  007A  0832               	movf	fLCD_PrintNumber@tmp_int+1,w
  2274  007B  01A3               	clrf	?___awdiv+3
  2275  007C  07A3               	addwf	?___awdiv+3,f
  2276  007D  0831               	movf	fLCD_PrintNumber@tmp_int,w
  2277  007E  01A2               	clrf	?___awdiv+2
  2278  007F  07A2               	addwf	?___awdiv+2,f
  2279  0080  118A  2678  118A   	fcall	___awdiv
  2280  0083  1283               	bcf	3,5	;RP0=0, select bank0
  2281  0084  1303               	bcf	3,6	;RP1=0, select bank0
  2282  0085  0820               	movf	?___awdiv,w
  2283  0086  00B0               	movwf	??_fLCD_PrintNumber
  2284  0087  0830               	movf	??_fLCD_PrintNumber,w
  2285  0088  00B3               	movwf	fLCD_PrintNumber@tmp_byte
  2286                           
  2287                           ;chrono.c: 228: fLCD_RawSend('0' + tmp_byte, 0x10);
  2288  0089  3010               	movlw	16
  2289  008A  00B0               	movwf	??_fLCD_PrintNumber
  2290  008B  0830               	movf	??_fLCD_PrintNumber,w
  2291  008C  00A0               	movwf	?_fLCD_RawSend
  2292  008D  0833               	movf	fLCD_PrintNumber@tmp_byte,w
  2293  008E  3E30               	addlw	48
  2294  008F  118A  2618  118A   	fcall	_fLCD_RawSend
  2295  0092                     l1555:	
  2296                           ;chrono.c: 230: while(tmp_byte > 0){
  2297                           
  2298  0092  1283               	bcf	3,5	;RP0=0, select bank0
  2299  0093  1303               	bcf	3,6	;RP1=0, select bank0
  2300  0094  08B3               	movf	fLCD_PrintNumber@tmp_byte,f
  2301  0095  1903               	btfsc	3,2
  2302  0096  28A4               	goto	l1557
  2303                           
  2304                           ;chrono.c: 231: tmp_int = tmp_int - 1000;
  2305  0097  1283               	bcf	3,5	;RP0=0, select bank0
  2306  0098  1303               	bcf	3,6	;RP1=0, select bank0
  2307  0099  0831               	movf	fLCD_PrintNumber@tmp_int,w
  2308  009A  3E18               	addlw	24
  2309  009B  00B1               	movwf	fLCD_PrintNumber@tmp_int
  2310  009C  0832               	movf	fLCD_PrintNumber@tmp_int+1,w
  2311  009D  1803               	skipnc
  2312  009E  3E01               	addlw	1
  2313  009F  3EFC               	addlw	252
  2314  00A0  00B2               	movwf	fLCD_PrintNumber@tmp_int+1
  2315                           
  2316                           ;chrono.c: 232: tmp_byte--;
  2317  00A1  3001               	movlw	1
  2318  00A2  02B3               	subwf	fLCD_PrintNumber@tmp_byte,f
  2319  00A3  2892               	goto	l1555
  2320  00A4                     l1557:	
  2321                           
  2322                           ;chrono.c: 233: }
  2323                           ;chrono.c: 234: }
  2324                           ;chrono.c: 236: if(Number >= 100){
  2325  00A4  1283               	bcf	3,5	;RP0=0, select bank0
  2326  00A5  1303               	bcf	3,6	;RP1=0, select bank0
  2327  00A6  082F               	movf	fLCD_PrintNumber@Number+1,w
  2328  00A7  3A80               	xorlw	128
  2329  00A8  00FF               	movwf	127
  2330  00A9  3080               	movlw	128
  2331  00AA  027F               	subwf	127,w
  2332  00AB  1D03               	skipz
  2333  00AC  28AF               	goto	u1145
  2334  00AD  3064               	movlw	100
  2335  00AE  022E               	subwf	fLCD_PrintNumber@Number,w
  2336  00AF                     u1145:	
  2337  00AF  1C03               	skipc
  2338  00B0  28E1               	goto	l1565
  2339                           
  2340                           ;chrono.c: 237: tmp_byte = tmp_int/100;
  2341  00B1  3064               	movlw	100
  2342  00B2  1283               	bcf	3,5	;RP0=0, select bank0
  2343  00B3  1303               	bcf	3,6	;RP1=0, select bank0
  2344  00B4  00A0               	movwf	?___awdiv
  2345  00B5  3000               	movlw	0
  2346  00B6  00A1               	movwf	?___awdiv+1
  2347  00B7  0832               	movf	fLCD_PrintNumber@tmp_int+1,w
  2348  00B8  01A3               	clrf	?___awdiv+3
  2349  00B9  07A3               	addwf	?___awdiv+3,f
  2350  00BA  0831               	movf	fLCD_PrintNumber@tmp_int,w
  2351  00BB  01A2               	clrf	?___awdiv+2
  2352  00BC  07A2               	addwf	?___awdiv+2,f
  2353  00BD  118A  2678  118A   	fcall	___awdiv
  2354  00C0  1283               	bcf	3,5	;RP0=0, select bank0
  2355  00C1  1303               	bcf	3,6	;RP1=0, select bank0
  2356  00C2  0820               	movf	?___awdiv,w
  2357  00C3  00B0               	movwf	??_fLCD_PrintNumber
  2358  00C4  0830               	movf	??_fLCD_PrintNumber,w
  2359  00C5  00B3               	movwf	fLCD_PrintNumber@tmp_byte
  2360                           
  2361                           ;chrono.c: 238: fLCD_RawSend('0' + tmp_byte, 0x10);
  2362  00C6  3010               	movlw	16
  2363  00C7  00B0               	movwf	??_fLCD_PrintNumber
  2364  00C8  0830               	movf	??_fLCD_PrintNumber,w
  2365  00C9  00A0               	movwf	?_fLCD_RawSend
  2366  00CA  0833               	movf	fLCD_PrintNumber@tmp_byte,w
  2367  00CB  3E30               	addlw	48
  2368  00CC  118A  2618  118A   	fcall	_fLCD_RawSend
  2369  00CF                     l1563:	
  2370                           ;chrono.c: 240: while(tmp_byte > 0){
  2371                           
  2372  00CF  1283               	bcf	3,5	;RP0=0, select bank0
  2373  00D0  1303               	bcf	3,6	;RP1=0, select bank0
  2374  00D1  08B3               	movf	fLCD_PrintNumber@tmp_byte,f
  2375  00D2  1903               	btfsc	3,2
  2376  00D3  28E1               	goto	l1565
  2377                           
  2378                           ;chrono.c: 241: tmp_int = tmp_int - 100;
  2379  00D4  1283               	bcf	3,5	;RP0=0, select bank0
  2380  00D5  1303               	bcf	3,6	;RP1=0, select bank0
  2381  00D6  0831               	movf	fLCD_PrintNumber@tmp_int,w
  2382  00D7  3E9C               	addlw	156
  2383  00D8  00B1               	movwf	fLCD_PrintNumber@tmp_int
  2384  00D9  0832               	movf	fLCD_PrintNumber@tmp_int+1,w
  2385  00DA  1803               	skipnc
  2386  00DB  3E01               	addlw	1
  2387  00DC  3EFF               	addlw	255
  2388  00DD  00B2               	movwf	fLCD_PrintNumber@tmp_int+1
  2389                           
  2390                           ;chrono.c: 242: tmp_byte--;
  2391  00DE  3001               	movlw	1
  2392  00DF  02B3               	subwf	fLCD_PrintNumber@tmp_byte,f
  2393  00E0  28CF               	goto	l1563
  2394  00E1                     l1565:	
  2395                           
  2396                           ;chrono.c: 243: }
  2397                           ;chrono.c: 244: }
  2398                           ;chrono.c: 246: if(Number >= 10){
  2399  00E1  1283               	bcf	3,5	;RP0=0, select bank0
  2400  00E2  1303               	bcf	3,6	;RP1=0, select bank0
  2401  00E3  082F               	movf	fLCD_PrintNumber@Number+1,w
  2402  00E4  3A80               	xorlw	128
  2403  00E5  00FF               	movwf	127
  2404  00E6  3080               	movlw	128
  2405  00E7  027F               	subwf	127,w
  2406  00E8  1D03               	skipz
  2407  00E9  28EC               	goto	u1165
  2408  00EA  300A               	movlw	10
  2409  00EB  022E               	subwf	fLCD_PrintNumber@Number,w
  2410  00EC                     u1165:	
  2411  00EC  1C03               	skipc
  2412  00ED  291E               	goto	l1573
  2413                           
  2414                           ;chrono.c: 247: tmp_byte = tmp_int/10;
  2415  00EE  300A               	movlw	10
  2416  00EF  1283               	bcf	3,5	;RP0=0, select bank0
  2417  00F0  1303               	bcf	3,6	;RP1=0, select bank0
  2418  00F1  00A0               	movwf	?___awdiv
  2419  00F2  3000               	movlw	0
  2420  00F3  00A1               	movwf	?___awdiv+1
  2421  00F4  0832               	movf	fLCD_PrintNumber@tmp_int+1,w
  2422  00F5  01A3               	clrf	?___awdiv+3
  2423  00F6  07A3               	addwf	?___awdiv+3,f
  2424  00F7  0831               	movf	fLCD_PrintNumber@tmp_int,w
  2425  00F8  01A2               	clrf	?___awdiv+2
  2426  00F9  07A2               	addwf	?___awdiv+2,f
  2427  00FA  118A  2678  118A   	fcall	___awdiv
  2428  00FD  1283               	bcf	3,5	;RP0=0, select bank0
  2429  00FE  1303               	bcf	3,6	;RP1=0, select bank0
  2430  00FF  0820               	movf	?___awdiv,w
  2431  0100  00B0               	movwf	??_fLCD_PrintNumber
  2432  0101  0830               	movf	??_fLCD_PrintNumber,w
  2433  0102  00B3               	movwf	fLCD_PrintNumber@tmp_byte
  2434                           
  2435                           ;chrono.c: 248: fLCD_RawSend('0' + tmp_byte, 0x10);
  2436  0103  3010               	movlw	16
  2437  0104  00B0               	movwf	??_fLCD_PrintNumber
  2438  0105  0830               	movf	??_fLCD_PrintNumber,w
  2439  0106  00A0               	movwf	?_fLCD_RawSend
  2440  0107  0833               	movf	fLCD_PrintNumber@tmp_byte,w
  2441  0108  3E30               	addlw	48
  2442  0109  118A  2618  118A   	fcall	_fLCD_RawSend
  2443  010C                     l1571:	
  2444                           ;chrono.c: 250: while(tmp_byte > 0){
  2445                           
  2446  010C  1283               	bcf	3,5	;RP0=0, select bank0
  2447  010D  1303               	bcf	3,6	;RP1=0, select bank0
  2448  010E  08B3               	movf	fLCD_PrintNumber@tmp_byte,f
  2449  010F  1903               	btfsc	3,2
  2450  0110  291E               	goto	l1573
  2451                           
  2452                           ;chrono.c: 251: tmp_int = tmp_int - 10;
  2453  0111  1283               	bcf	3,5	;RP0=0, select bank0
  2454  0112  1303               	bcf	3,6	;RP1=0, select bank0
  2455  0113  0831               	movf	fLCD_PrintNumber@tmp_int,w
  2456  0114  3EF6               	addlw	246
  2457  0115  00B1               	movwf	fLCD_PrintNumber@tmp_int
  2458  0116  0832               	movf	fLCD_PrintNumber@tmp_int+1,w
  2459  0117  1803               	skipnc
  2460  0118  3E01               	addlw	1
  2461  0119  3EFF               	addlw	255
  2462  011A  00B2               	movwf	fLCD_PrintNumber@tmp_int+1
  2463                           
  2464                           ;chrono.c: 252: tmp_byte--;
  2465  011B  3001               	movlw	1
  2466  011C  02B3               	subwf	fLCD_PrintNumber@tmp_byte,f
  2467  011D  290C               	goto	l1571
  2468  011E                     l1573:	
  2469                           
  2470                           ;chrono.c: 253: }
  2471                           ;chrono.c: 254: }
  2472                           ;chrono.c: 255: fLCD_RawSend('0' + tmp_int, 0x10);
  2473  011E  3010               	movlw	16
  2474  011F  1283               	bcf	3,5	;RP0=0, select bank0
  2475  0120  1303               	bcf	3,6	;RP1=0, select bank0
  2476  0121  00B0               	movwf	??_fLCD_PrintNumber
  2477  0122  0830               	movf	??_fLCD_PrintNumber,w
  2478  0123  00A0               	movwf	?_fLCD_RawSend
  2479  0124  0831               	movf	fLCD_PrintNumber@tmp_int,w
  2480  0125  3E30               	addlw	48
  2481  0126  118A  2618         	fcall	_fLCD_RawSend
  2482  0128  0008               	return
  2483  0129                     __end_of_fLCD_PrintNumber:	
  2484                           
  2485                           	psect	text10
  2486  0678                     __ptext10:	
  2487 ;; *************** function ___awdiv *****************
  2488 ;; Defined at:
  2489 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\awdiv.c"
  2490 ;; Parameters:    Size  Location     Type
  2491 ;;  divisor         2    0[BANK0 ] int 
  2492 ;;  dividend        2    2[BANK0 ] int 
  2493 ;; Auto vars:     Size  Location     Type
  2494 ;;  quotient        2    7[BANK0 ] int 
  2495 ;;  sign            1    6[BANK0 ] unsigned char 
  2496 ;;  counter         1    5[BANK0 ] unsigned char 
  2497 ;; Return value:  Size  Location     Type
  2498 ;;                  2    0[BANK0 ] int 
  2499 ;; Registers used:
  2500 ;;		wreg, status,2, status,0
  2501 ;; Tracked objects:
  2502 ;;		On entry : 0/0
  2503 ;;		On exit  : 0/0
  2504 ;;		Unchanged: 0/0
  2505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2506 ;;      Params:         0       4       0       0       0
  2507 ;;      Locals:         0       4       0       0       0
  2508 ;;      Temps:          0       1       0       0       0
  2509 ;;      Totals:         0       9       0       0       0
  2510 ;;Total ram usage:        9 bytes
  2511 ;; Hardware stack levels used:    1
  2512 ;; Hardware stack levels required when called:    1
  2513 ;; This function calls:
  2514 ;;		Nothing
  2515 ;; This function is called by:
  2516 ;;		_fLCD_PrintNumber
  2517 ;; This function uses a non-reentrant model
  2518 ;;
  2519                           
  2520                           
  2521                           ;psect for function ___awdiv
  2522  0678                     ___awdiv:	
  2523                           
  2524                           ;incstack = 0
  2525                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2526  0678  1283               	bcf	3,5	;RP0=0, select bank0
  2527  0679  1303               	bcf	3,6	;RP1=0, select bank0
  2528  067A  01A6               	clrf	___awdiv@sign
  2529  067B  1FA1               	btfss	___awdiv@divisor+1,7
  2530  067C  2E84               	goto	l1771
  2531  067D  09A0               	comf	___awdiv@divisor,f
  2532  067E  09A1               	comf	___awdiv@divisor+1,f
  2533  067F  0AA0               	incf	___awdiv@divisor,f
  2534  0680  1903               	skipnz
  2535  0681  0AA1               	incf	___awdiv@divisor+1,f
  2536  0682  01A6               	clrf	___awdiv@sign
  2537  0683  0AA6               	incf	___awdiv@sign,f
  2538  0684                     l1771:	
  2539  0684  1FA3               	btfss	___awdiv@dividend+1,7
  2540  0685  2E8F               	goto	l1777
  2541  0686  09A2               	comf	___awdiv@dividend,f
  2542  0687  09A3               	comf	___awdiv@dividend+1,f
  2543  0688  0AA2               	incf	___awdiv@dividend,f
  2544  0689  1903               	skipnz
  2545  068A  0AA3               	incf	___awdiv@dividend+1,f
  2546  068B  3001               	movlw	1
  2547  068C  00A4               	movwf	??___awdiv
  2548  068D  0824               	movf	??___awdiv,w
  2549  068E  06A6               	xorwf	___awdiv@sign,f
  2550  068F                     l1777:	
  2551  068F  01A7               	clrf	___awdiv@quotient
  2552  0690  01A8               	clrf	___awdiv@quotient+1
  2553  0691  0821               	movf	___awdiv@divisor+1,w
  2554  0692  0420               	iorwf	___awdiv@divisor,w
  2555  0693  1903               	skipnz
  2556  0694  2EC6               	goto	l1799
  2557  0695  01A5               	clrf	___awdiv@counter
  2558  0696  0AA5               	incf	___awdiv@counter,f
  2559  0697                     l1787:	
  2560  0697  1BA1               	btfsc	___awdiv@divisor+1,7
  2561  0698  2EA5               	goto	l1789
  2562  0699  3001               	movlw	1
  2563  069A                     u1525:	
  2564  069A  1003               	clrc
  2565  069B  0DA0               	rlf	___awdiv@divisor,f
  2566  069C  0DA1               	rlf	___awdiv@divisor+1,f
  2567  069D  3EFF               	addlw	-1
  2568  069E  1D03               	skipz
  2569  069F  2E9A               	goto	u1525
  2570  06A0  3001               	movlw	1
  2571  06A1  00A4               	movwf	??___awdiv
  2572  06A2  0824               	movf	??___awdiv,w
  2573  06A3  07A5               	addwf	___awdiv@counter,f
  2574  06A4  2E97               	goto	l1787
  2575  06A5                     l1789:	
  2576  06A5  3001               	movlw	1
  2577  06A6                     u1545:	
  2578  06A6  1003               	clrc
  2579  06A7  0DA7               	rlf	___awdiv@quotient,f
  2580  06A8  0DA8               	rlf	___awdiv@quotient+1,f
  2581  06A9  3EFF               	addlw	-1
  2582  06AA  1D03               	skipz
  2583  06AB  2EA6               	goto	u1545
  2584  06AC  0821               	movf	___awdiv@divisor+1,w
  2585  06AD  0223               	subwf	___awdiv@dividend+1,w
  2586  06AE  1D03               	skipz
  2587  06AF  2EB2               	goto	u1555
  2588  06B0  0820               	movf	___awdiv@divisor,w
  2589  06B1  0222               	subwf	___awdiv@dividend,w
  2590  06B2                     u1555:	
  2591  06B2  1C03               	skipc
  2592  06B3  2EBB               	goto	l1795
  2593  06B4  0820               	movf	___awdiv@divisor,w
  2594  06B5  02A2               	subwf	___awdiv@dividend,f
  2595  06B6  0821               	movf	___awdiv@divisor+1,w
  2596  06B7  1C03               	skipc
  2597  06B8  03A3               	decf	___awdiv@dividend+1,f
  2598  06B9  02A3               	subwf	___awdiv@dividend+1,f
  2599  06BA  1427               	bsf	___awdiv@quotient,0
  2600  06BB                     l1795:	
  2601  06BB  3001               	movlw	1
  2602  06BC                     u1565:	
  2603  06BC  1003               	clrc
  2604  06BD  0CA1               	rrf	___awdiv@divisor+1,f
  2605  06BE  0CA0               	rrf	___awdiv@divisor,f
  2606  06BF  3EFF               	addlw	-1
  2607  06C0  1D03               	skipz
  2608  06C1  2EBC               	goto	u1565
  2609  06C2  3001               	movlw	1
  2610  06C3  02A5               	subwf	___awdiv@counter,f
  2611  06C4  1D03               	btfss	3,2
  2612  06C5  2EA5               	goto	l1789
  2613  06C6                     l1799:	
  2614  06C6  0826               	movf	___awdiv@sign,w
  2615  06C7  1903               	btfsc	3,2
  2616  06C8  2ECE               	goto	l1803
  2617  06C9  09A7               	comf	___awdiv@quotient,f
  2618  06CA  09A8               	comf	___awdiv@quotient+1,f
  2619  06CB  0AA7               	incf	___awdiv@quotient,f
  2620  06CC  1903               	skipnz
  2621  06CD  0AA8               	incf	___awdiv@quotient+1,f
  2622  06CE                     l1803:	
  2623  06CE  0828               	movf	___awdiv@quotient+1,w
  2624  06CF  01A1               	clrf	?___awdiv+1
  2625  06D0  07A1               	addwf	?___awdiv+1,f
  2626  06D1  0827               	movf	___awdiv@quotient,w
  2627  06D2  01A0               	clrf	?___awdiv
  2628  06D3  07A0               	addwf	?___awdiv,f
  2629  06D4  0008               	return
  2630  06D5                     __end_of___awdiv:	
  2631                           
  2632                           	psect	text11
  2633  0532                     __ptext11:	
  2634 ;; *************** function _fLCD_Start *****************
  2635 ;; Defined at:
  2636 ;;		line 89 in file "chrono.c"
  2637 ;; Parameters:    Size  Location     Type
  2638 ;;		None
  2639 ;; Auto vars:     Size  Location     Type
  2640 ;;		None
  2641 ;; Return value:  Size  Location     Type
  2642 ;;		None               void
  2643 ;; Registers used:
  2644 ;;		wreg, status,2, status,0, pclath, cstack
  2645 ;; Tracked objects:
  2646 ;;		On entry : 0/0
  2647 ;;		On exit  : 0/0
  2648 ;;		Unchanged: 0/0
  2649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2650 ;;      Params:         0       0       0       0       0
  2651 ;;      Locals:         0       0       0       0       0
  2652 ;;      Temps:          0       2       0       0       0
  2653 ;;      Totals:         0       2       0       0       0
  2654 ;;Total ram usage:        2 bytes
  2655 ;; Hardware stack levels used:    1
  2656 ;; Hardware stack levels required when called:    3
  2657 ;; This function calls:
  2658 ;;		_fLCD_RawSend
  2659 ;;		_fLCD_Clear
  2660 ;; This function is called by:
  2661 ;;		_main
  2662 ;; This function uses a non-reentrant model
  2663 ;;
  2664                           
  2665                           
  2666                           ;psect for function _fLCD_Start
  2667  0532                     _fLCD_Start:	
  2668                           
  2669                           ;chrono.c: 90: PORTB = 0;
  2670                           
  2671                           ;incstack = 0
  2672                           ; Regs used in _fLCD_Start: [wreg+status,2+status,0+pclath+cstack]
  2673  0532  1283               	bcf	3,5	;RP0=0, select bank0
  2674  0533  1303               	bcf	3,6	;RP1=0, select bank0
  2675  0534  0186               	clrf	6	;volatile
  2676                           
  2677                           ;chrono.c: 91: PORTA = 0;
  2678  0535  0185               	clrf	5	;volatile
  2679                           
  2680                           ;chrono.c: 92: _delay((unsigned long)((12)*(8000000/4000.0)));
  2681  0536  3020               	movlw	32
  2682  0537  00A8               	movwf	??_fLCD_Start+1
  2683  0538  3029               	movlw	41
  2684  0539  00A7               	movwf	??_fLCD_Start
  2685  053A                     u2207:	
  2686  053A  0BA7               	decfsz	??_fLCD_Start,f
  2687  053B  2D3A               	goto	u2207
  2688  053C  0BA8               	decfsz	??_fLCD_Start+1,f
  2689  053D  2D3A               	goto	u2207
  2690  053E  2D3F               	nop2
  2691                           
  2692                           ;chrono.c: 93: fLCD_RawSend(0x33, 0);
  2693  053F  1283               	bcf	3,5	;RP0=0, select bank0
  2694  0540  1303               	bcf	3,6	;RP1=0, select bank0
  2695  0541  01A0               	clrf	?_fLCD_RawSend
  2696  0542  3033               	movlw	51
  2697  0543  118A  2618  118A   	fcall	_fLCD_RawSend
  2698                           
  2699                           ;chrono.c: 94: _delay((unsigned long)((2)*(8000000/4000.0)));
  2700  0546  3006               	movlw	6
  2701  0547  1283               	bcf	3,5	;RP0=0, select bank0
  2702  0548  1303               	bcf	3,6	;RP1=0, select bank0
  2703  0549  00A8               	movwf	??_fLCD_Start+1
  2704  054A  3030               	movlw	48
  2705  054B  00A7               	movwf	??_fLCD_Start
  2706  054C                     u2217:	
  2707  054C  0BA7               	decfsz	??_fLCD_Start,f
  2708  054D  2D4C               	goto	u2217
  2709  054E  0BA8               	decfsz	??_fLCD_Start+1,f
  2710  054F  2D4C               	goto	u2217
  2711  0550  0000               	nop
  2712                           
  2713                           ;chrono.c: 95: fLCD_RawSend(0x33, 0);
  2714  0551  1283               	bcf	3,5	;RP0=0, select bank0
  2715  0552  1303               	bcf	3,6	;RP1=0, select bank0
  2716  0553  01A0               	clrf	?_fLCD_RawSend
  2717  0554  3033               	movlw	51
  2718  0555  118A  2618  118A   	fcall	_fLCD_RawSend
  2719                           
  2720                           ;chrono.c: 96: _delay((unsigned long)((2)*(8000000/4000.0)));
  2721  0558  3006               	movlw	6
  2722  0559  1283               	bcf	3,5	;RP0=0, select bank0
  2723  055A  1303               	bcf	3,6	;RP1=0, select bank0
  2724  055B  00A8               	movwf	??_fLCD_Start+1
  2725  055C  3030               	movlw	48
  2726  055D  00A7               	movwf	??_fLCD_Start
  2727  055E                     u2227:	
  2728  055E  0BA7               	decfsz	??_fLCD_Start,f
  2729  055F  2D5E               	goto	u2227
  2730  0560  0BA8               	decfsz	??_fLCD_Start+1,f
  2731  0561  2D5E               	goto	u2227
  2732  0562  0000               	nop
  2733                           
  2734                           ;chrono.c: 97: fLCD_RawSend(0x32, 0);
  2735  0563  1283               	bcf	3,5	;RP0=0, select bank0
  2736  0564  1303               	bcf	3,6	;RP1=0, select bank0
  2737  0565  01A0               	clrf	?_fLCD_RawSend
  2738  0566  3032               	movlw	50
  2739  0567  118A  2618  118A   	fcall	_fLCD_RawSend
  2740                           
  2741                           ;chrono.c: 98: _delay((unsigned long)((2)*(8000000/4000.0)));
  2742  056A  3006               	movlw	6
  2743  056B  1283               	bcf	3,5	;RP0=0, select bank0
  2744  056C  1303               	bcf	3,6	;RP1=0, select bank0
  2745  056D  00A8               	movwf	??_fLCD_Start+1
  2746  056E  3030               	movlw	48
  2747  056F  00A7               	movwf	??_fLCD_Start
  2748  0570                     u2237:	
  2749  0570  0BA7               	decfsz	??_fLCD_Start,f
  2750  0571  2D70               	goto	u2237
  2751  0572  0BA8               	decfsz	??_fLCD_Start+1,f
  2752  0573  2D70               	goto	u2237
  2753  0574  0000               	nop
  2754                           
  2755                           ;chrono.c: 99: fLCD_RawSend(0x2c, 0);
  2756  0575  1283               	bcf	3,5	;RP0=0, select bank0
  2757  0576  1303               	bcf	3,6	;RP1=0, select bank0
  2758  0577  01A0               	clrf	?_fLCD_RawSend
  2759  0578  302C               	movlw	44
  2760  0579  118A  2618  118A   	fcall	_fLCD_RawSend
  2761                           
  2762                           ;chrono.c: 100: _delay((unsigned long)((2)*(8000000/4000.0)));
  2763  057C  3006               	movlw	6
  2764  057D  1283               	bcf	3,5	;RP0=0, select bank0
  2765  057E  1303               	bcf	3,6	;RP1=0, select bank0
  2766  057F  00A8               	movwf	??_fLCD_Start+1
  2767  0580  3030               	movlw	48
  2768  0581  00A7               	movwf	??_fLCD_Start
  2769  0582                     u2247:	
  2770  0582  0BA7               	decfsz	??_fLCD_Start,f
  2771  0583  2D82               	goto	u2247
  2772  0584  0BA8               	decfsz	??_fLCD_Start+1,f
  2773  0585  2D82               	goto	u2247
  2774  0586  0000               	nop
  2775                           
  2776                           ;chrono.c: 101: fLCD_RawSend(0x06, 0);
  2777  0587  1283               	bcf	3,5	;RP0=0, select bank0
  2778  0588  1303               	bcf	3,6	;RP1=0, select bank0
  2779  0589  01A0               	clrf	?_fLCD_RawSend
  2780  058A  3006               	movlw	6
  2781  058B  118A  2618  118A   	fcall	_fLCD_RawSend
  2782                           
  2783                           ;chrono.c: 102: _delay((unsigned long)((2)*(8000000/4000.0)));
  2784  058E  3006               	movlw	6
  2785  058F  1283               	bcf	3,5	;RP0=0, select bank0
  2786  0590  1303               	bcf	3,6	;RP1=0, select bank0
  2787  0591  00A8               	movwf	??_fLCD_Start+1
  2788  0592  3030               	movlw	48
  2789  0593  00A7               	movwf	??_fLCD_Start
  2790  0594                     u2257:	
  2791  0594  0BA7               	decfsz	??_fLCD_Start,f
  2792  0595  2D94               	goto	u2257
  2793  0596  0BA8               	decfsz	??_fLCD_Start+1,f
  2794  0597  2D94               	goto	u2257
  2795  0598  0000               	nop
  2796                           
  2797                           ;chrono.c: 103: fLCD_RawSend(0x0c, 0);
  2798  0599  1283               	bcf	3,5	;RP0=0, select bank0
  2799  059A  1303               	bcf	3,6	;RP1=0, select bank0
  2800  059B  01A0               	clrf	?_fLCD_RawSend
  2801  059C  300C               	movlw	12
  2802  059D  118A  2618  118A   	fcall	_fLCD_RawSend
  2803                           
  2804                           ;chrono.c: 104: _delay((unsigned long)((2)*(8000000/4000.0)));
  2805  05A0  3006               	movlw	6
  2806  05A1  1283               	bcf	3,5	;RP0=0, select bank0
  2807  05A2  1303               	bcf	3,6	;RP1=0, select bank0
  2808  05A3  00A8               	movwf	??_fLCD_Start+1
  2809  05A4  3030               	movlw	48
  2810  05A5  00A7               	movwf	??_fLCD_Start
  2811  05A6                     u2267:	
  2812  05A6  0BA7               	decfsz	??_fLCD_Start,f
  2813  05A7  2DA6               	goto	u2267
  2814  05A8  0BA8               	decfsz	??_fLCD_Start+1,f
  2815  05A9  2DA6               	goto	u2267
  2816  05AA  0000               	nop
  2817                           
  2818                           ;chrono.c: 106: fLCD_Clear();
  2819  05AB  118A  26D5         	fcall	_fLCD_Clear
  2820  05AD  0008               	return
  2821  05AE                     __end_of_fLCD_Start:	
  2822                           
  2823                           	psect	text12
  2824  06D5                     __ptext12:	
  2825 ;; *************** function _fLCD_Clear *****************
  2826 ;; Defined at:
  2827 ;;		line 153 in file "chrono.c"
  2828 ;; Parameters:    Size  Location     Type
  2829 ;;		None
  2830 ;; Auto vars:     Size  Location     Type
  2831 ;;		None
  2832 ;; Return value:  Size  Location     Type
  2833 ;;		None               void
  2834 ;; Registers used:
  2835 ;;		wreg, status,2, status,0, pclath, cstack
  2836 ;; Tracked objects:
  2837 ;;		On entry : 0/0
  2838 ;;		On exit  : 0/0
  2839 ;;		Unchanged: 0/0
  2840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2841 ;;      Params:         0       0       0       0       0
  2842 ;;      Locals:         0       0       0       0       0
  2843 ;;      Temps:          0       2       0       0       0
  2844 ;;      Totals:         0       2       0       0       0
  2845 ;;Total ram usage:        2 bytes
  2846 ;; Hardware stack levels used:    1
  2847 ;; Hardware stack levels required when called:    2
  2848 ;; This function calls:
  2849 ;;		_fLCD_RawSend
  2850 ;; This function is called by:
  2851 ;;		_main
  2852 ;;		_fLCD_Start
  2853 ;; This function uses a non-reentrant model
  2854 ;;
  2855                           
  2856                           
  2857                           ;psect for function _fLCD_Clear
  2858  06D5                     _fLCD_Clear:	
  2859                           
  2860                           ;chrono.c: 155: fLCD_RawSend(0x01, 0);
  2861                           
  2862                           ;incstack = 0
  2863                           ; Regs used in _fLCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  2864  06D5  1283               	bcf	3,5	;RP0=0, select bank0
  2865  06D6  1303               	bcf	3,6	;RP1=0, select bank0
  2866  06D7  01A0               	clrf	?_fLCD_RawSend
  2867  06D8  3001               	movlw	1
  2868  06D9  118A  2618  118A   	fcall	_fLCD_RawSend
  2869                           
  2870                           ;chrono.c: 156: _delay((unsigned long)((2)*(8000000/4000.0)));
  2871  06DC  3006               	movlw	6
  2872  06DD  1283               	bcf	3,5	;RP0=0, select bank0
  2873  06DE  1303               	bcf	3,6	;RP1=0, select bank0
  2874  06DF  00A6               	movwf	??_fLCD_Clear+1
  2875  06E0  3030               	movlw	48
  2876  06E1  00A5               	movwf	??_fLCD_Clear
  2877  06E2                     u2277:	
  2878  06E2  0BA5               	decfsz	??_fLCD_Clear,f
  2879  06E3  2EE2               	goto	u2277
  2880  06E4  0BA6               	decfsz	??_fLCD_Clear+1,f
  2881  06E5  2EE2               	goto	u2277
  2882  06E6  0000               	nop
  2883                           
  2884                           ;chrono.c: 157: fLCD_RawSend(0x02, 0);
  2885  06E7  1283               	bcf	3,5	;RP0=0, select bank0
  2886  06E8  1303               	bcf	3,6	;RP1=0, select bank0
  2887  06E9  01A0               	clrf	?_fLCD_RawSend
  2888  06EA  3002               	movlw	2
  2889  06EB  118A  2618  118A   	fcall	_fLCD_RawSend
  2890                           
  2891                           ;chrono.c: 158: _delay((unsigned long)((2)*(8000000/4000.0)));
  2892  06EE  3006               	movlw	6
  2893  06EF  1283               	bcf	3,5	;RP0=0, select bank0
  2894  06F0  1303               	bcf	3,6	;RP1=0, select bank0
  2895  06F1  00A6               	movwf	??_fLCD_Clear+1
  2896  06F2  3030               	movlw	48
  2897  06F3  00A5               	movwf	??_fLCD_Clear
  2898  06F4                     u2287:	
  2899  06F4  0BA5               	decfsz	??_fLCD_Clear,f
  2900  06F5  2EF4               	goto	u2287
  2901  06F6  0BA6               	decfsz	??_fLCD_Clear+1,f
  2902  06F7  2EF4               	goto	u2287
  2903  06F8  0000               	nop
  2904  06F9  0008               	return
  2905  06FA                     __end_of_fLCD_Clear:	
  2906                           
  2907                           	psect	text13
  2908  0618                     __ptext13:	
  2909 ;; *************** function _fLCD_RawSend *****************
  2910 ;; Defined at:
  2911 ;;		line 109 in file "chrono.c"
  2912 ;; Parameters:    Size  Location     Type
  2913 ;;  in              1    wreg     unsigned char 
  2914 ;;  mask            1    0[BANK0 ] unsigned char 
  2915 ;; Auto vars:     Size  Location     Type
  2916 ;;  in              1    3[BANK0 ] unsigned char 
  2917 ;;  pt              1    4[BANK0 ] unsigned char 
  2918 ;; Return value:  Size  Location     Type
  2919 ;;		None               void
  2920 ;; Registers used:
  2921 ;;		wreg, status,2, status,0
  2922 ;; Tracked objects:
  2923 ;;		On entry : 0/0
  2924 ;;		On exit  : 0/0
  2925 ;;		Unchanged: 0/0
  2926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2927 ;;      Params:         0       1       0       0       0
  2928 ;;      Locals:         0       2       0       0       0
  2929 ;;      Temps:          0       2       0       0       0
  2930 ;;      Totals:         0       5       0       0       0
  2931 ;;Total ram usage:        5 bytes
  2932 ;; Hardware stack levels used:    1
  2933 ;; Hardware stack levels required when called:    1
  2934 ;; This function calls:
  2935 ;;		Nothing
  2936 ;; This function is called by:
  2937 ;;		_main
  2938 ;;		_fLCD_Start
  2939 ;;		_fLCD_Clear
  2940 ;;		_fLCD_PrintNumber
  2941 ;;		_fLCD_PrintASCII
  2942 ;;		_fLCD_Command
  2943 ;;		_fLCD_Cursor
  2944 ;;		_fLCD_PrintString
  2945 ;;		_fLCD_ClearLine
  2946 ;; This function uses a non-reentrant model
  2947 ;;
  2948                           
  2949                           
  2950                           ;psect for function _fLCD_RawSend
  2951  0618                     _fLCD_RawSend:	
  2952                           
  2953                           ;incstack = 0
  2954                           ; Regs used in _fLCD_RawSend: [wreg+status,2+status,0]
  2955                           ;fLCD_RawSend@in stored from wreg
  2956  0618  1283               	bcf	3,5	;RP0=0, select bank0
  2957  0619  1303               	bcf	3,6	;RP1=0, select bank0
  2958  061A  00A3               	movwf	fLCD_RawSend@in
  2959                           
  2960                           ;chrono.c: 110: unsigned char pt;
  2961                           ;chrono.c: 111: PORTB = 0;
  2962  061B  0186               	clrf	6	;volatile
  2963                           
  2964                           ;chrono.c: 112: PORTA = 0;
  2965  061C  0185               	clrf	5	;volatile
  2966                           
  2967                           ;chrono.c: 113: pt = ((in >> 4) & 0x0f);
  2968  061D  0823               	movf	fLCD_RawSend@in,w
  2969  061E  00A1               	movwf	??_fLCD_RawSend
  2970  061F  3004               	movlw	4
  2971  0620                     u1185:	
  2972  0620  1003               	clrc
  2973  0621  0CA1               	rrf	??_fLCD_RawSend,f
  2974  0622  3EFF               	addlw	-1
  2975  0623  1D03               	skipz
  2976  0624  2E20               	goto	u1185
  2977  0625  0821               	movf	??_fLCD_RawSend,w
  2978  0626  390F               	andlw	15
  2979  0627  00A2               	movwf	??_fLCD_RawSend+1
  2980  0628  0822               	movf	??_fLCD_RawSend+1,w
  2981  0629  00A4               	movwf	fLCD_RawSend@pt
  2982                           
  2983                           ;chrono.c: 114: if(pt & 0x01)
  2984  062A  1824               	btfsc	fLCD_RawSend@pt,0
  2985                           
  2986                           ;chrono.c: 115: PORTBbits.RB4 = 1;
  2987  062B  1606               	bsf	6,4	;volatile
  2988                           
  2989                           ;chrono.c: 116: if(pt & 0x02)
  2990  062C  18A4               	btfsc	fLCD_RawSend@pt,1
  2991                           
  2992                           ;chrono.c: 117: PORTBbits.RB1 = 1;
  2993  062D  1486               	bsf	6,1	;volatile
  2994                           
  2995                           ;chrono.c: 118: if(pt & 0x04)
  2996  062E  1924               	btfsc	fLCD_RawSend@pt,2
  2997                           
  2998                           ;chrono.c: 119: PORTBbits.RB2 = 1;
  2999  062F  1506               	bsf	6,2	;volatile
  3000                           
  3001                           ;chrono.c: 120: if(pt & 0x08)
  3002  0630  19A4               	btfsc	fLCD_RawSend@pt,3
  3003                           
  3004                           ;chrono.c: 121: PORTBbits.RB3 = 1;
  3005  0631  1586               	bsf	6,3	;volatile
  3006                           
  3007                           ;chrono.c: 122: if(mask)
  3008  0632  0820               	movf	fLCD_RawSend@mask,w
  3009  0633  1D03               	skipz
  3010                           
  3011                           ;chrono.c: 123: PORTAbits.RA1 = 1;
  3012  0634  1485               	bsf	5,1	;volatile
  3013                           
  3014                           ;chrono.c: 124: _delay((unsigned long)((120)*(8000000/4000000.0)));
  3015  0635  304F               	movlw	79
  3016  0636  00A1               	movwf	??_fLCD_RawSend
  3017  0637                     u2297:	
  3018  0637  0BA1               	decfsz	??_fLCD_RawSend,f
  3019  0638  2E37               	goto	u2297
  3020  0639  2E3A               	nop2	;nop
  3021                           
  3022                           ;chrono.c: 125: PORTAbits.RA0 = 1;
  3023  063A  1283               	bcf	3,5	;RP0=0, select bank0
  3024  063B  1303               	bcf	3,6	;RP1=0, select bank0
  3025  063C  1405               	bsf	5,0	;volatile
  3026                           
  3027                           ;chrono.c: 126: _delay((unsigned long)((120)*(8000000/4000000.0)));
  3028  063D  304F               	movlw	79
  3029  063E  00A1               	movwf	??_fLCD_RawSend
  3030  063F                     u2307:	
  3031  063F  0BA1               	decfsz	??_fLCD_RawSend,f
  3032  0640  2E3F               	goto	u2307
  3033  0641  2E42               	nop2	;nop
  3034                           
  3035                           ;chrono.c: 127: PORTAbits.RA0 = 0;
  3036  0642  1283               	bcf	3,5	;RP0=0, select bank0
  3037  0643  1303               	bcf	3,6	;RP1=0, select bank0
  3038  0644  1005               	bcf	5,0	;volatile
  3039                           
  3040                           ;chrono.c: 128: pt = (in & 0x0f);
  3041  0645  0823               	movf	fLCD_RawSend@in,w
  3042  0646  390F               	andlw	15
  3043  0647  00A1               	movwf	??_fLCD_RawSend
  3044  0648  0821               	movf	??_fLCD_RawSend,w
  3045  0649  00A4               	movwf	fLCD_RawSend@pt
  3046                           
  3047                           ;chrono.c: 129: _delay((unsigned long)((120)*(8000000/4000000.0)));
  3048  064A  304F               	movlw	79
  3049  064B  00A1               	movwf	??_fLCD_RawSend
  3050  064C                     u2317:	
  3051  064C  0BA1               	decfsz	??_fLCD_RawSend,f
  3052  064D  2E4C               	goto	u2317
  3053  064E  2E4F               	nop2	;nop
  3054                           
  3055                           ;chrono.c: 130: PORTBbits.RB4 = 0;
  3056  064F  1283               	bcf	3,5	;RP0=0, select bank0
  3057  0650  1303               	bcf	3,6	;RP1=0, select bank0
  3058  0651  1206               	bcf	6,4	;volatile
  3059                           
  3060                           ;chrono.c: 131: PORTBbits.RB1 = 0;
  3061  0652  1086               	bcf	6,1	;volatile
  3062                           
  3063                           ;chrono.c: 132: PORTBbits.RB2 = 0;
  3064  0653  1106               	bcf	6,2	;volatile
  3065                           
  3066                           ;chrono.c: 133: PORTBbits.RB3 = 0;
  3067  0654  1186               	bcf	6,3	;volatile
  3068                           
  3069                           ;chrono.c: 134: PORTAbits.RA1 = 0;
  3070  0655  1085               	bcf	5,1	;volatile
  3071                           
  3072                           ;chrono.c: 135: PORTAbits.RA0 = 0;
  3073  0656  1005               	bcf	5,0	;volatile
  3074                           
  3075                           ;chrono.c: 136: if(pt & 0x01)
  3076  0657  1824               	btfsc	fLCD_RawSend@pt,0
  3077                           
  3078                           ;chrono.c: 137: PORTBbits.RB4 = 1;
  3079  0658  1606               	bsf	6,4	;volatile
  3080                           
  3081                           ;chrono.c: 138: if(pt & 0x02)
  3082  0659  18A4               	btfsc	fLCD_RawSend@pt,1
  3083                           
  3084                           ;chrono.c: 139: PORTBbits.RB1 = 1;
  3085  065A  1486               	bsf	6,1	;volatile
  3086                           
  3087                           ;chrono.c: 140: if(pt & 0x04)
  3088  065B  1924               	btfsc	fLCD_RawSend@pt,2
  3089                           
  3090                           ;chrono.c: 141: PORTBbits.RB2 = 1;
  3091  065C  1506               	bsf	6,2	;volatile
  3092                           
  3093                           ;chrono.c: 142: if(pt & 0x08)
  3094  065D  19A4               	btfsc	fLCD_RawSend@pt,3
  3095                           
  3096                           ;chrono.c: 143: PORTBbits.RB3 = 1;
  3097  065E  1586               	bsf	6,3	;volatile
  3098                           
  3099                           ;chrono.c: 144: if(mask)
  3100  065F  0820               	movf	fLCD_RawSend@mask,w
  3101  0660  1D03               	skipz
  3102                           
  3103                           ;chrono.c: 145: PORTAbits.RA1 = 1;
  3104  0661  1485               	bsf	5,1	;volatile
  3105                           
  3106                           ;chrono.c: 146: _delay((unsigned long)((120)*(8000000/4000000.0)));
  3107  0662  304F               	movlw	79
  3108  0663  00A1               	movwf	??_fLCD_RawSend
  3109  0664                     u2327:	
  3110  0664  0BA1               	decfsz	??_fLCD_RawSend,f
  3111  0665  2E64               	goto	u2327
  3112  0666  2E67               	nop2	;nop
  3113                           
  3114                           ;chrono.c: 147: PORTAbits.RA0 = 1;
  3115  0667  1283               	bcf	3,5	;RP0=0, select bank0
  3116  0668  1303               	bcf	3,6	;RP1=0, select bank0
  3117  0669  1405               	bsf	5,0	;volatile
  3118                           
  3119                           ;chrono.c: 148: _delay((unsigned long)((120)*(8000000/4000000.0)));
  3120  066A  304F               	movlw	79
  3121  066B  00A1               	movwf	??_fLCD_RawSend
  3122  066C                     u2337:	
  3123  066C  0BA1               	decfsz	??_fLCD_RawSend,f
  3124  066D  2E6C               	goto	u2337
  3125  066E  2E6F               	nop2	;nop
  3126                           
  3127                           ;chrono.c: 149: PORTAbits.RA0 = 0;
  3128  066F  1283               	bcf	3,5	;RP0=0, select bank0
  3129  0670  1303               	bcf	3,6	;RP1=0, select bank0
  3130  0671  1005               	bcf	5,0	;volatile
  3131                           
  3132                           ;chrono.c: 150: _delay((unsigned long)((120)*(8000000/4000000.0)));
  3133  0672  304F               	movlw	79
  3134  0673  00A1               	movwf	??_fLCD_RawSend
  3135  0674                     u2347:	
  3136  0674  0BA1               	decfsz	??_fLCD_RawSend,f
  3137  0675  2E74               	goto	u2347
  3138  0676  2E77               	nop2	;nop
  3139  0677  0008               	return
  3140  0678                     __end_of_fLCD_RawSend:	
  3141                           
  3142                           	psect	text14
  3143  0743                     __ptext14:	
  3144 ;; *************** function _startUp *****************
  3145 ;; Defined at:
  3146 ;;		line 319 in file "chrono.c"
  3147 ;; Parameters:    Size  Location     Type
  3148 ;;		None
  3149 ;; Auto vars:     Size  Location     Type
  3150 ;;		None
  3151 ;; Return value:  Size  Location     Type
  3152 ;;		None               void
  3153 ;; Registers used:
  3154 ;;		wreg, status,2, status,0, pclath, cstack
  3155 ;; Tracked objects:
  3156 ;;		On entry : 0/0
  3157 ;;		On exit  : 0/0
  3158 ;;		Unchanged: 0/0
  3159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3160 ;;      Params:         0       0       0       0       0
  3161 ;;      Locals:         0       0       0       0       0
  3162 ;;      Temps:          0       0       0       0       0
  3163 ;;      Totals:         0       0       0       0       0
  3164 ;;Total ram usage:        0 bytes
  3165 ;; Hardware stack levels used:    1
  3166 ;; Hardware stack levels required when called:    2
  3167 ;; This function calls:
  3168 ;;		_initializeInt
  3169 ;;		_initializeTimer0
  3170 ;;		_initializeTimer1
  3171 ;; This function is called by:
  3172 ;;		_main
  3173 ;; This function uses a non-reentrant model
  3174 ;;
  3175                           
  3176                           
  3177                           ;psect for function _startUp
  3178  0743                     _startUp:	
  3179                           
  3180                           ;chrono.c: 320: OSCCON = 0x70;
  3181                           
  3182                           ;incstack = 0
  3183                           ; Regs used in _startUp: [wreg+status,2+status,0+pclath+cstack]
  3184  0743  3070               	movlw	112
  3185  0744  1683               	bsf	3,5	;RP0=1, select bank1
  3186  0745  1303               	bcf	3,6	;RP1=0, select bank1
  3187  0746  008F               	movwf	15	;volatile
  3188                           
  3189                           ;chrono.c: 322: ANSEL = 0;
  3190  0747  019B               	clrf	27	;volatile
  3191                           
  3192                           ;chrono.c: 323: CMCON = 0x07;
  3193  0748  3007               	movlw	7
  3194  0749  009C               	movwf	28	;volatile
  3195                           
  3196                           ;chrono.c: 325: OPTION_REG = 0xc0;
  3197  074A  30C0               	movlw	192
  3198  074B  0081               	movwf	1	;volatile
  3199                           
  3200                           ;chrono.c: 327: TRISB = 0b00100001;
  3201  074C  3021               	movlw	33
  3202  074D  0086               	movwf	6	;volatile
  3203                           
  3204                           ;chrono.c: 328: TRISA = 0b00000000;
  3205  074E  0185               	clrf	5	;volatile
  3206                           
  3207                           ;chrono.c: 329: PORTB = 0;
  3208  074F  1283               	bcf	3,5	;RP0=0, select bank0
  3209  0750  1303               	bcf	3,6	;RP1=0, select bank0
  3210  0751  0186               	clrf	6	;volatile
  3211                           
  3212                           ;chrono.c: 330: PORTA = 0;
  3213  0752  0185               	clrf	5	;volatile
  3214                           
  3215                           ;chrono.c: 332: initializeInt();
  3216  0753  118A  2773  118A   	fcall	_initializeInt
  3217                           
  3218                           ;chrono.c: 333: initializeTimer0();
  3219  0756  118A  279A  118A   	fcall	_initializeTimer0
  3220                           
  3221                           ;chrono.c: 334: initializeTimer1();
  3222  0759  118A  27AB         	fcall	_initializeTimer1
  3223  075B  0008               	return
  3224  075C                     __end_of_startUp:	
  3225                           
  3226                           	psect	text15
  3227  07AB                     __ptext15:	
  3228 ;; *************** function _initializeTimer1 *****************
  3229 ;; Defined at:
  3230 ;;		line 388 in file "chrono.c"
  3231 ;; Parameters:    Size  Location     Type
  3232 ;;		None
  3233 ;; Auto vars:     Size  Location     Type
  3234 ;;		None
  3235 ;; Return value:  Size  Location     Type
  3236 ;;		None               void
  3237 ;; Registers used:
  3238 ;;		wreg, status,2, status,0
  3239 ;; Tracked objects:
  3240 ;;		On entry : 0/0
  3241 ;;		On exit  : 0/0
  3242 ;;		Unchanged: 0/0
  3243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3244 ;;      Params:         0       0       0       0       0
  3245 ;;      Locals:         0       0       0       0       0
  3246 ;;      Temps:          0       0       0       0       0
  3247 ;;      Totals:         0       0       0       0       0
  3248 ;;Total ram usage:        0 bytes
  3249 ;; Hardware stack levels used:    1
  3250 ;; Hardware stack levels required when called:    1
  3251 ;; This function calls:
  3252 ;;		Nothing
  3253 ;; This function is called by:
  3254 ;;		_startUp
  3255 ;; This function uses a non-reentrant model
  3256 ;;
  3257                           
  3258                           
  3259                           ;psect for function _initializeTimer1
  3260  07AB                     _initializeTimer1:	
  3261                           
  3262                           ;chrono.c: 389: T1CONbits.T1CKPS = 0b00;
  3263                           
  3264                           ;incstack = 0
  3265                           ; Regs used in _initializeTimer1: [wreg+status,2+status,0]
  3266  07AB  30CF               	movlw	-49
  3267  07AC  1283               	bcf	3,5	;RP0=0, select bank0
  3268  07AD  1303               	bcf	3,6	;RP1=0, select bank0
  3269  07AE  0590               	andwf	16,f	;volatile
  3270                           
  3271                           ;chrono.c: 390: T1CONbits.T1OSCEN = 1;
  3272  07AF  1590               	bsf	16,3	;volatile
  3273                           
  3274                           ;chrono.c: 391: T1CONbits.TMR1CS = 0;
  3275  07B0  1090               	bcf	16,1	;volatile
  3276                           
  3277                           ;chrono.c: 392: T1CONbits.TMR1ON = 1;
  3278  07B1  1410               	bsf	16,0	;volatile
  3279  07B2  0008               	return
  3280  07B3                     __end_of_initializeTimer1:	
  3281                           
  3282                           	psect	text16
  3283  079A                     __ptext16:	
  3284 ;; *************** function _initializeTimer0 *****************
  3285 ;; Defined at:
  3286 ;;		line 396 in file "chrono.c"
  3287 ;; Parameters:    Size  Location     Type
  3288 ;;		None
  3289 ;; Auto vars:     Size  Location     Type
  3290 ;;		None
  3291 ;; Return value:  Size  Location     Type
  3292 ;;		None               void
  3293 ;; Registers used:
  3294 ;;		wreg, status,2, status,0
  3295 ;; Tracked objects:
  3296 ;;		On entry : 0/0
  3297 ;;		On exit  : 0/0
  3298 ;;		Unchanged: 0/0
  3299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3300 ;;      Params:         0       0       0       0       0
  3301 ;;      Locals:         0       0       0       0       0
  3302 ;;      Temps:          0       0       0       0       0
  3303 ;;      Totals:         0       0       0       0       0
  3304 ;;Total ram usage:        0 bytes
  3305 ;; Hardware stack levels used:    1
  3306 ;; Hardware stack levels required when called:    1
  3307 ;; This function calls:
  3308 ;;		Nothing
  3309 ;; This function is called by:
  3310 ;;		_startUp
  3311 ;; This function uses a non-reentrant model
  3312 ;;
  3313                           
  3314                           
  3315                           ;psect for function _initializeTimer0
  3316  079A                     _initializeTimer0:	
  3317                           
  3318                           ;chrono.c: 397: OPTION_REGbits.T0CS = 0;
  3319                           
  3320                           ;incstack = 0
  3321                           ; Regs used in _initializeTimer0: [wreg+status,2+status,0]
  3322  079A  1683               	bsf	3,5	;RP0=1, select bank1
  3323  079B  1303               	bcf	3,6	;RP1=0, select bank1
  3324  079C  1281               	bcf	1,5	;volatile
  3325                           
  3326                           ;chrono.c: 398: OPTION_REGbits.PSA = 0;
  3327  079D  1181               	bcf	1,3	;volatile
  3328                           
  3329                           ;chrono.c: 399: OPTION_REGbits.PS = 0b100;
  3330  079E  0801               	movf	1,w	;volatile
  3331  079F  39F8               	andlw	-8
  3332  07A0  3804               	iorlw	4
  3333  07A1  0081               	movwf	1	;volatile
  3334  07A2  0008               	return
  3335  07A3                     __end_of_initializeTimer0:	
  3336                           
  3337                           	psect	text17
  3338  0773                     __ptext17:	
  3339 ;; *************** function _initializeInt *****************
  3340 ;; Defined at:
  3341 ;;		line 377 in file "chrono.c"
  3342 ;; Parameters:    Size  Location     Type
  3343 ;;		None
  3344 ;; Auto vars:     Size  Location     Type
  3345 ;;		None
  3346 ;; Return value:  Size  Location     Type
  3347 ;;		None               void
  3348 ;; Registers used:
  3349 ;;		None
  3350 ;; Tracked objects:
  3351 ;;		On entry : 0/0
  3352 ;;		On exit  : 0/0
  3353 ;;		Unchanged: 0/0
  3354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3355 ;;      Params:         0       0       0       0       0
  3356 ;;      Locals:         0       0       0       0       0
  3357 ;;      Temps:          0       0       0       0       0
  3358 ;;      Totals:         0       0       0       0       0
  3359 ;;Total ram usage:        0 bytes
  3360 ;; Hardware stack levels used:    1
  3361 ;; Hardware stack levels required when called:    1
  3362 ;; This function calls:
  3363 ;;		Nothing
  3364 ;; This function is called by:
  3365 ;;		_startUp
  3366 ;; This function uses a non-reentrant model
  3367 ;;
  3368                           
  3369                           
  3370                           ;psect for function _initializeInt
  3371  0773                     _initializeInt:	
  3372                           
  3373                           ;chrono.c: 378: TMR1IE = 1;
  3374                           
  3375                           ;incstack = 0
  3376                           ; Regs used in _initializeInt: []
  3377  0773  1683               	bsf	3,5	;RP0=1, select bank1
  3378  0774  1303               	bcf	3,6	;RP1=0, select bank1
  3379  0775  140C               	bsf	12,0	;volatile
  3380                           
  3381                           ;chrono.c: 379: TMR0IE = 0;
  3382  0776  128B               	bcf	11,5	;volatile
  3383                           
  3384                           ;chrono.c: 380: (GIE = 1);
  3385  0777  178B               	bsf	11,7	;volatile
  3386                           
  3387                           ;chrono.c: 381: INTCONbits.PEIE = 1;
  3388  0778  170B               	bsf	11,6	;volatile
  3389                           
  3390                           ;chrono.c: 382: PIR1bits.RCIF = 0;
  3391  0779  1283               	bcf	3,5	;RP0=0, select bank0
  3392  077A  1303               	bcf	3,6	;RP1=0, select bank0
  3393  077B  128C               	bcf	12,5	;volatile
  3394                           
  3395                           ;chrono.c: 383: PIE1bits.RCIE = 0;
  3396  077C  1683               	bsf	3,5	;RP0=1, select bank1
  3397  077D  1303               	bcf	3,6	;RP1=0, select bank1
  3398  077E  128C               	bcf	12,5	;volatile
  3399                           
  3400                           ;chrono.c: 384: RBIE = 1;
  3401  077F  158B               	bsf	11,3	;volatile
  3402                           
  3403                           ;chrono.c: 385: INT0IE = 1;
  3404  0780  160B               	bsf	11,4	;volatile
  3405  0781  0008               	return
  3406  0782                     __end_of_initializeInt:	
  3407                           
  3408                           	psect	text18
  3409  06FA                     __ptext18:	
  3410 ;; *************** function _isr *****************
  3411 ;; Defined at:
  3412 ;;		line 341 in file "chrono.c"
  3413 ;; Parameters:    Size  Location     Type
  3414 ;;		None
  3415 ;; Auto vars:     Size  Location     Type
  3416 ;;		None
  3417 ;; Return value:  Size  Location     Type
  3418 ;;		None               void
  3419 ;; Registers used:
  3420 ;;		wreg, status,2, status,0
  3421 ;; Tracked objects:
  3422 ;;		On entry : 0/0
  3423 ;;		On exit  : 0/0
  3424 ;;		Unchanged: 0/0
  3425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3426 ;;      Params:         0       0       0       0       0
  3427 ;;      Locals:         0       0       0       0       0
  3428 ;;      Temps:          7       0       0       0       0
  3429 ;;      Totals:         7       0       0       0       0
  3430 ;;Total ram usage:        7 bytes
  3431 ;; Hardware stack levels used:    1
  3432 ;; This function calls:
  3433 ;;		Nothing
  3434 ;; This function is called by:
  3435 ;;		Interrupt level 1
  3436 ;; This function uses a non-reentrant model
  3437 ;;
  3438                           
  3439                           
  3440                           ;psect for function _isr
  3441  06FA                     _isr:	
  3442                           
  3443                           ;chrono.c: 343: if(RBIF){
  3444  06FA  1C0B               	btfss	11,0	;volatile
  3445  06FB  2F0D               	goto	i1l1723
  3446                           
  3447                           ;chrono.c: 344: RBIF = 0;
  3448  06FC  100B               	bcf	11,0	;volatile
  3449                           
  3450                           ;chrono.c: 345: time = TMR1;
  3451  06FD  080F               	movf	15,w	;volatile
  3452  06FE  01DE               	clrf	_time+1
  3453  06FF  07DE               	addwf	_time+1,f
  3454  0700  080E               	movf	14,w	;volatile
  3455  0701  01DD               	clrf	_time
  3456  0702  07DD               	addwf	_time,f
  3457                           
  3458                           ;chrono.c: 346: tflag = PORTBbits.RB5;
  3459  0703  0E06               	swapf	6,w	;volatile
  3460  0704  00F0               	movwf	??_isr
  3461  0705  0C70               	rrf	??_isr,w
  3462  0706  3901               	andlw	1
  3463  0707  00F1               	movwf	??_isr+1
  3464  0708  01F2               	clrf	??_isr+2
  3465  0709  0871               	movf	??_isr+1,w
  3466  070A  00FA               	movwf	_tflag
  3467  070B  0872               	movf	??_isr+2,w
  3468  070C  00FB               	movwf	_tflag+1
  3469  070D                     i1l1723:	
  3470                           
  3471                           ;chrono.c: 358: }
  3472                           ;chrono.c: 359: if(INT0IF){
  3473  070D  1C8B               	btfss	11,1	;volatile
  3474  070E  2F12               	goto	i1l1729
  3475                           
  3476                           ;chrono.c: 360: INT0IF = 0;
  3477  070F  108B               	bcf	11,1	;volatile
  3478                           
  3479                           ;chrono.c: 362: TMR1 = 0;
  3480  0710  018E               	clrf	14	;volatile
  3481  0711  018F               	clrf	15	;volatile
  3482  0712                     i1l1729:	
  3483                           
  3484                           ;chrono.c: 363: }
  3485                           ;chrono.c: 365: if(TMR1IF){
  3486  0712  180C               	btfsc	12,0	;volatile
  3487                           
  3488                           ;chrono.c: 366: TMR1IF = 0;
  3489  0713  100C               	bcf	12,0	;volatile
  3490  0714  0876               	movf	??_isr+6,w
  3491  0715  00FF               	movwf	127
  3492  0716  0875               	movf	??_isr+5,w
  3493  0717  008A               	movwf	10
  3494  0718  0874               	movf	??_isr+4,w
  3495  0719  0084               	movwf	4
  3496  071A  0E73               	swapf	(??_isr+3)^(0+-128),w
  3497  071B  0083               	movwf	3
  3498  071C  0EFE               	swapf	126,f
  3499  071D  0E7E               	swapf	126,w
  3500  071E  0009               	retfie
  3501  071F                     __end_of_isr:	
  3502  007E                     btemp	set	126	;btemp
  3503  007E                     wtemp0	set	126
  3504                           
  3505                           	psect	intentry
  3506  0004                     __pintentry:	
  3507                           ;incstack = 0
  3508                           ; Regs used in _isr: [wreg+status,2+status,0]
  3509                           
  3510  0004                     interrupt_function:	
  3511  007E                     saved_w	set	btemp
  3512  0004  00FE               	movwf	btemp
  3513  0005  0E03               	swapf	3,w
  3514  0006  00F3               	movwf	??_isr+3
  3515  0007  0804               	movf	4,w
  3516  0008  00F4               	movwf	??_isr+4
  3517  0009  080A               	movf	10,w
  3518  000A  00F5               	movwf	??_isr+5
  3519  000B  1283               	bcf	3,5	;RP0=0, select bank0
  3520  000C  1303               	bcf	3,6	;RP1=0, select bank0
  3521  000D  087F               	movf	btemp+1,w
  3522  000E  00F6               	movwf	??_isr+6
  3523  000F  118A  2EFA         	ljmp	_isr


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         19
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      12
    BANK0            80     55      69
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    ?___ftpack	float  size(1) Largest target is 0

    ?___awdiv	int  size(1) Largest target is 0

    ?___ftadd	float  size(1) Largest target is 3
		 -> tdist(BANK0[3]), 

    ?___ftneg	float  size(1) Largest target is 0

    ?___awtoft	float  size(1) Largest target is 0

    ?___fttol	long  size(1) Largest target is 3
		 -> tdist(BANK0[3]), 

    ?___ftmul	float  size(1) Largest target is 0

    ?___ftdiv	float  size(1) Largest target is 0

    ?___lwtoft	float  size(1) Largest target is 0


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___ftmul
    ___lwtoft->___ftpack
    ___ftneg->___awtoft
    ___ftmul->___ftadd
    ___ftdiv->___ftpack
    ___ftadd->___ftneg
    ___awtoft->___fttol
    _fLCD_PrintNumber->___fttol
    _fLCD_Start->_fLCD_Clear
    _fLCD_Clear->_fLCD_RawSend

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    5093
                                             52 BANK0      3     3      0
                            _startUp
                         _fLCD_Start
                   _fLCD_PrintNumber
                       _fLCD_RawSend
                         _fLCD_Clear
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             4     1      3     231
                                              8 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             14    10      4     252
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (1) ___ftneg                                              3     0      3      65
                                             20 BANK0      3     0      3
                           ___awtoft (ARG)
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             16    10      6     535
                                             36 BANK0     16    10      6
                           ___ftpack
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             16    10      6     489
                                              8 BANK0     16    10      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftadd                                             13     7      6    1049
                                             23 BANK0     13     7      6
                           ___ftpack
                           ___awtoft (ARG)
                            ___ftneg (ARG)
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             6     3      3     300
                                             14 BANK0      6     3      3
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5     209
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _fLCD_PrintNumber                                     6     4      2    1108
                                             14 BANK0      6     4      2
                       _fLCD_RawSend
                            ___awdiv
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     300
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _fLCD_Start                                           2     2      0     532
                                              7 BANK0      2     2      0
                       _fLCD_RawSend
                         _fLCD_Clear
 ---------------------------------------------------------------------------------
 (1) _fLCD_Clear                                           2     2      0     266
                                              5 BANK0      2     2      0
                       _fLCD_RawSend
 ---------------------------------------------------------------------------------
 (2) _fLCD_RawSend                                         5     4      1     266
                                              0 BANK0      5     4      1
 ---------------------------------------------------------------------------------
 (1) _startUp                                              0     0      0       0
                      _initializeInt
                   _initializeTimer0
                   _initializeTimer1
 ---------------------------------------------------------------------------------
 (2) _initializeTimer1                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initializeTimer0                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initializeInt                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  7     7      0       0
                                              0 COMMON     7     7      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _startUp
     _initializeInt
     _initializeTimer0
     _initializeTimer1
   _fLCD_Start
     _fLCD_RawSend
     _fLCD_Clear
       _fLCD_RawSend
   _fLCD_PrintNumber
     _fLCD_RawSend
     ___awdiv
     ___fttol (ARG)
   _fLCD_RawSend
   _fLCD_Clear
     _fLCD_RawSend
   ___awtoft
     ___ftpack
     ___fttol (ARG)
   ___ftadd
     ___ftpack
     ___awtoft (ARG)
       ___ftpack
       ___fttol (ARG)
     ___ftneg (ARG)
       ___awtoft (ARG)
         ___ftpack
         ___fttol (ARG)
       ___fttol (ARG)
     ___fttol (ARG)
   ___ftdiv
     ___ftpack
   ___ftmul
     ___ftpack
     ___awtoft (ARG)
       ___ftpack
       ___fttol (ARG)
     ___ftadd (ARG)
       ___ftpack
       ___awtoft (ARG)
         ___ftpack
         ___fttol (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
           ___fttol (ARG)
         ___fttol (ARG)
       ___fttol (ARG)
     ___ftneg (ARG)
       ___awtoft (ARG)
         ___ftpack
         ___fttol (ARG)
       ___fttol (ARG)
     ___fttol (ARG)
   ___ftneg
     ___awtoft (ARG)
       ___ftpack
       ___fttol (ARG)
     ___fttol (ARG)
   ___fttol
   ___lwtoft
     ___ftpack

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       3       2        0.0%
ABS                  0      0      51       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     37      45       5       86.3%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      54      12        0.0%


Microchip Technology PIC Macro Assembler V1.20 build 52243 
Symbol Table                                                                                   Sat Aug 16 02:13:09 2014

                        _a 0077                          _b 0057                __CFG_CP$OFF 0000  
             ___awdiv@sign 0026                         fsr 0004             ??_fLCD_RawSend 0021  
             ___ftadd@exp1 0043               ___ftadd@exp2 0042               ___ftadd@sign 0041  
                      l415 05FF                        l409 05E6                        l438 01D1  
                      _GIE 005F               __CFG_CPD$OFF 0000                        _fin 005A  
                      _isr 06FA                        fsr0 0004                        indf 0000  
             __CFG_IESO$ON 0000               __CFG_LVP$OFF 0000               ___ftdiv@cntr 0032  
             ___ftdiv@sign 0037                       l2031 0529                       l2023 050D  
                     l2015 04F0                       l2025 0518                       l2017 0500  
                     l2027 051B                       l2065 0245                       l1803 06CE  
                     l1571 010C                       l1563 00CF                       l1555 0092  
                     l1547 0055                       l1539 0026                       l1573 011E  
                     l1565 00E1                       l1557 00A4                       l1549 0067  
                     l1741 05BF                       l1751 05EB                       l1743 05CB  
                     l1815 072B                       l1831 0159                       l1903 041B  
                     l1753 05F5                       l1745 05D0                       l1737 05B8  
                     l1771 0684                       l1827 0152                       l1861 01AC  
                     l1837 0168                       l1925 047F                       l1917 0460  
                     l1855 0197                       l1777 068F                       l1873 01E3  
                     l1857 01A3                       l1849 0182                       l1961 0398  
                     l1945 0349                       l1795 06BB                       l1787 0697  
                     l1867 01C1                       l1859 01A8                       l1939 0333  
                     l1789 06A5                       l1877 01F5                       l1869 01CD  
                     l1973 03C0                       l1957 0388                       l1799 06C6  
                     l1887 0218                       l1897 0405                       l1969 03B0  
                     l1997 04BE                       ?_isr 0070                       u1105 0035  
                     u1125 0072                       u1145 00AF                       u2035 03C1  
                     u2115 04F1                       u1165 00EC                       u1405 05C4  
                     u2045 03C9                       u2207 053A                       u1185 0620  
                     u2217 054C                       u1425 05DF                       u2145 050F  
                     u2307 063F                       u2227 055E                       u2317 064C  
                     u2237 0570                       u1525 069A                       u1445 05EE  
                     u2085 04C5                       u2327 0664                       u2247 0582  
                     u2337 066C                       u2257 0594                       u1545 06A6  
                     u2347 0674                       u2267 05A6                       u1555 06B2  
                     u1475 0606                       u2187 023C                       u2277 06E2  
                     u1565 06BC                       u1725 0198                       u2197 0310  
                     u2287 06F4                       u2297 0637                       u1905 0480  
                     u1755 01AD                       u1695 0183                       u1785 01C2  
                     u1865 042D                       u1945 0355                       u1875 043F  
                     u1955 0367                       u1885 0461                       u1895 0472  
                     _RBIE 005B                       _RBIF 0058                       u1985 0399  
                     u1995 03A1                       _TMR1 000E               __CFG_WRT$OFF 0000  
            __CFG_FCMEN$ON 0000                       _main 0231               ___ftpack@arg 0020  
             ___ftpack@exp 0023                       _time 005D                       btemp 007E  
            __CFG_BOREN$ON 0000                       start 0011              __CFG_MCLRE$ON 0000  
             ___ftmul@cntr 0052               ___ftmul@sign 0053               ___fttol@exp1 002D  
             ___fttol@lval 0029                      ??_isr 0070                      ?_main 0070  
          __end_of___awdiv 06D5            __end_of___ftadd 0231              __CFG_WDTE$OFF 0000  
          __end_of___ftdiv 04A4                      _CMCON 009C            __end_of___ftneg 079A  
                    _ANSEL 009B            __end_of___ftmul 03ED            ___awdiv@divisor 0020  
          __end_of___fttol 0532            ___awdiv@counter 0025                      _PORTA 0005  
                    _PORTB 0006                      _TRISA 0085                      _TRISB 0086  
           __CFG_CCPMX$RB0 0000   __end_of_fLCD_PrintNumber 0129                 _fLCD_Clear 06D5  
            ___awtoft@sign 0033                 _fLCD_Start 0532                      _tflag 007A  
                    _tdist 0062              ___ftpack@sign 0024                      _speed 005F  
                    pclath 000A            __end_of_startUp 075C                      status 0003  
                    wtemp0 007E            __initialization 0782               __end_of_main 031B  
                   ??_main 0054              ___fttol@sign1 0028           ___awdiv@dividend 0022  
         __end_of___awtoft 0743           __end_of___ftpack 0618                     _INT0IE 005C  
                   _INT0IF 0059                     i1l1723 070D                     i1l1729 0712  
         __end_of___lwtoft 0773                     _OSCCON 008F                     _TMR0IE 005D  
                   _TMR1IE 0460                     _TMR1IF 0060          ?_initializeTimer0 0070  
        ?_initializeTimer1 0070       __end_of_fLCD_RawSend 0678         ??_initializeTimer0 0020  
       ??_initializeTimer1 0020             __CFG_PWRTE$OFF 0000                  ??___awdiv 0024  
                ??___ftadd 003D                  ??___ftdiv 002E                  ??___ftneg 0037  
                ??___ftmul 004A                  ??___fttol 0024           ___awdiv@quotient 0027  
    ___ftmul@f3_as_product 004F                     saved_w 007E                ?_fLCD_Clear 0070  
   __size_of_initializeInt 000F                  ??_startUp 0020                ?_fLCD_Start 0070  
  __end_of__initialization 078D                 ___ftadd@f1 0037                 ___ftadd@f2 003A  
               ___ftdiv@f1 002B                 ___ftdiv@f2 0028                 ___ftdiv@f3 0033  
               ___ftneg@f1 0034                 ___awtoft@c 002E                 ___ftmul@f1 0044  
               ___ftmul@f2 0047                 ___fttol@f1 0020             __pcstackCOMMON 0070  
               ___lwtoft@c 0028             _OPTION_REGbits 0081                 __pbssBANK0 0057  
   fLCD_PrintNumber@Number 002E                 __pmaintext 0231              _initializeInt 0773  
      __size_of_fLCD_Clear 0025                 __pintentry 0004        __size_of_fLCD_Start 007C  
                ?___awtoft 002E                  ?___ftpack 0020                  ?___lwtoft 0028  
 fLCD_PrintNumber@tmp_byte 0033          ?_fLCD_PrintNumber 002E      __size_of_fLCD_RawSend 0060  
       ??_fLCD_PrintNumber 0030             ?_initializeInt 0070                    ___awdiv 0678  
                  ___ftadd 0129                    ___ftdiv 03ED                    ___ftneg 0790  
                  ___ftmul 031B                    ___fttol 04A4                 ??___awtoft 0031  
               ??___ftpack 0025                    __ptext0 0000                    __ptext1 075C  
                  __ptext2 04A4                    __ptext3 0790                    __ptext4 031B  
                  __ptext5 03ED                    __ptext6 0129                    __ptext7 071F  
                  __ptext8 05AE                    __ptext9 0013                 ??___lwtoft 002B  
             _fLCD_RawSend 0618                  _T1CONbits 0010               __size_of_isr 0025  
                  _startUp 0743                    clrloop0 07A4       end_of_initialization 078D  
__size_of_initializeTimer0 0009  __size_of_initializeTimer1 0008                  _PORTAbits 0005  
                _PORTBbits 0006               ??_fLCD_Clear 0025               ??_fLCD_Start 0027  
              ___ftdiv@exp 0036            ??_initializeInt 0020                ___ftmul@exp 004E  
       __end_of_fLCD_Clear 06FA         __end_of_fLCD_Start 05AE        start_initialization 0782  
              __end_of_isr 071F          __size_of___awtoft 0024          __size_of___ftpack 006A  
              __pbssCOMMON 0077          __size_of___lwtoft 0017              __pcstackBANK0 0020  
         fLCD_RawSend@mask 0020  __size_of_fLCD_PrintNumber 0116                   ?___awdiv 0020  
                 ?___ftadd 0037                   ?___ftdiv 0028                   ?___ftneg 0034  
                 ?___ftmul 0044                   ?___fttol 0020    fLCD_PrintNumber@tmp_int 0031  
         _initializeTimer0 079A           _initializeTimer1 07AB                   ?_startUp 0070  
        interrupt_function 0004                  clear_ram0 07A3                   _PIE1bits 008C  
                 _PIR1bits 000C           __size_of___awdiv 005D           __size_of___ftadd 0108  
         __size_of___ftdiv 00B7           __size_of___ftneg 000A           __size_of___ftmul 00D2  
         __size_of___fttol 008E                   ___awtoft 071F                   ___ftpack 05AE  
                 ___lwtoft 075C                   __ptext10 0678                   __ptext11 0532  
                 __ptext12 06D5                   __ptext13 0618                   __ptext14 0743  
                 __ptext15 07AB                   __ptext16 079A                   __ptext17 0773  
                 __ptext18 06FA           __size_of_startUp 0019              __size_of_main 00EA  
    __end_of_initializeInt 0782           _fLCD_PrintNumber 0013                 _INTCONbits 000B  
                 intlevel1 0000             fLCD_RawSend@in 0023             fLCD_RawSend@pt 0024  
 __end_of_initializeTimer0 07A3   __end_of_initializeTimer1 07B3              ?_fLCD_RawSend 0020  
               _OPTION_REG 0081         __CFG_FOSC$INTOSCIO 0000  
